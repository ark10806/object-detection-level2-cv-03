2021-10-01 08:43:06,195 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.11 (default, Aug  3 2021, 15:09:35) [GCC 7.5.0]
CUDA available: True
GPU 0: Tesla V100-PCIE-32GB
CUDA_HOME: None
GCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
PyTorch: 1.7.1
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.3-Product Build 20210617 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.0.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.8.0a0
OpenCV: 4.5.3
MMCV: 1.3.14
MMCV Compiler: GCC 7.3
MMCV CUDA Compiler: 11.0
MMDetection: 2.16.0+ccb9030
------------------------------------------------------------

2021-10-01 08:43:07,725 - mmdet - INFO - Distributed training: False
2021-10-01 08:43:09,493 - mmdet - INFO - Config:
dataset_type = 'CocoDataset'
data_root = '/opt/ml/detection/Augmented/datasetBGAug/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
imsize = 864
multi_scale_dict = [
    dict(type='Resize', height=416, width=416),
    dict(type='Resize', height=448, width=448),
    dict(type='Resize', height=480, width=480),
    dict(type='Resize', height=512, width=512),
    dict(type='Resize', height=544, width=544),
    dict(type='Resize', height=576, width=576),
    dict(type='Resize', height=608, width=608),
    dict(type='Resize', height=640, width=640),
    dict(type='Resize', height=672, width=672),
    dict(type='Resize', height=704, width=704),
    dict(type='Resize', height=736, width=736),
    dict(type='Resize', height=768, width=768),
    dict(type='Resize', height=800, width=800),
    dict(type='Resize', height=832, width=832),
    dict(type='Resize', height=864, width=864)
]
i = 864
alb_transform = [
    dict(
        type='OneOf',
        transforms=[
            dict(type='Resize', height=416, width=416),
            dict(type='Resize', height=448, width=448),
            dict(type='Resize', height=480, width=480),
            dict(type='Resize', height=512, width=512),
            dict(type='Resize', height=544, width=544),
            dict(type='Resize', height=576, width=576),
            dict(type='Resize', height=608, width=608),
            dict(type='Resize', height=640, width=640),
            dict(type='Resize', height=672, width=672),
            dict(type='Resize', height=704, width=704),
            dict(type='Resize', height=736, width=736),
            dict(type='Resize', height=768, width=768),
            dict(type='Resize', height=800, width=800),
            dict(type='Resize', height=832, width=832),
            dict(type='Resize', height=864, width=864)
        ],
        p=1.0),
    dict(
        type='OneOf',
        transforms=[
            dict(type='GaussNoise', p=1.0),
            dict(type='GaussianBlur', p=1.0),
            dict(type='Blur', p=1.0)
        ],
        p=0.1),
    dict(
        type='OneOf',
        transforms=[
            dict(type='CLAHE', p=1.0),
            dict(type='RandomGamma', p=1.0),
            dict(type='HueSaturationValue', p=1.0),
            dict(type='ChannelDropout', p=1.0),
            dict(type='ChannelShuffle', p=1.0),
            dict(type='RGBShift', p=1.0)
        ],
        p=0.1),
    dict(
        type='OneOf',
        transforms=[
            dict(type='ShiftScaleRotate', p=1.0),
            dict(type='Rotate', p=1.0)
        ],
        p=0.1)
]
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(864, 864)),
    dict(
        type='Albu',
        transforms=[
            dict(
                type='OneOf',
                transforms=[
                    dict(type='Resize', height=416, width=416),
                    dict(type='Resize', height=448, width=448),
                    dict(type='Resize', height=480, width=480),
                    dict(type='Resize', height=512, width=512),
                    dict(type='Resize', height=544, width=544),
                    dict(type='Resize', height=576, width=576),
                    dict(type='Resize', height=608, width=608),
                    dict(type='Resize', height=640, width=640),
                    dict(type='Resize', height=672, width=672),
                    dict(type='Resize', height=704, width=704),
                    dict(type='Resize', height=736, width=736),
                    dict(type='Resize', height=768, width=768),
                    dict(type='Resize', height=800, width=800),
                    dict(type='Resize', height=832, width=832),
                    dict(type='Resize', height=864, width=864)
                ],
                p=1.0),
            dict(
                type='OneOf',
                transforms=[
                    dict(type='GaussNoise', p=1.0),
                    dict(type='GaussianBlur', p=1.0),
                    dict(type='Blur', p=1.0)
                ],
                p=0.1),
            dict(
                type='OneOf',
                transforms=[
                    dict(type='CLAHE', p=1.0),
                    dict(type='RandomGamma', p=1.0),
                    dict(type='HueSaturationValue', p=1.0),
                    dict(type='ChannelDropout', p=1.0),
                    dict(type='ChannelShuffle', p=1.0),
                    dict(type='RGBShift', p=1.0)
                ],
                p=0.1),
            dict(
                type='OneOf',
                transforms=[
                    dict(type='ShiftScaleRotate', p=1.0),
                    dict(type='Rotate', p=1.0)
                ],
                p=0.1)
        ],
        bbox_params=dict(
            type='BboxParams',
            format='pascal_voc',
            label_fields=['gt_labels'],
            min_visibility=0.0,
            filter_lost_elements=True),
        keymap=dict(img='image', gt_bboxes='bboxes'),
        update_pad_shape=False,
        skip_img_without_anno=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=[
            dict(type='Resize', height=416, width=416),
            dict(type='Resize', height=448, width=448),
            dict(type='Resize', height=480, width=480),
            dict(type='Resize', height=512, width=512),
            dict(type='Resize', height=544, width=544),
            dict(type='Resize', height=576, width=576),
            dict(type='Resize', height=608, width=608),
            dict(type='Resize', height=640, width=640),
            dict(type='Resize', height=672, width=672),
            dict(type='Resize', height=704, width=704),
            dict(type='Resize', height=736, width=736),
            dict(type='Resize', height=768, width=768),
            dict(type='Resize', height=800, width=800),
            dict(type='Resize', height=832, width=832),
            dict(type='Resize', height=864, width=864)
        ],
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
classes = ('General trash', 'Paper', 'Paper pack', 'Metal', 'Glass', 'Plastic',
           'Styrofoam', 'Plastic bag', 'Battery', 'Clothing')
data = dict(
    samples_per_gpu=8,
    workers_per_gpu=2,
    train=dict(
        type='CocoDataset',
        classes=('General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',
                 'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'),
        ann_file='/opt/ml/detection/Augmented/datasetBGAug/train_v1.json',
        img_prefix='/opt/ml/detection/Augmented/datasetBGAug/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(864, 864)),
            dict(
                type='Albu',
                transforms=[
                    dict(
                        type='OneOf',
                        transforms=[
                            dict(type='Resize', height=416, width=416),
                            dict(type='Resize', height=448, width=448),
                            dict(type='Resize', height=480, width=480),
                            dict(type='Resize', height=512, width=512),
                            dict(type='Resize', height=544, width=544),
                            dict(type='Resize', height=576, width=576),
                            dict(type='Resize', height=608, width=608),
                            dict(type='Resize', height=640, width=640),
                            dict(type='Resize', height=672, width=672),
                            dict(type='Resize', height=704, width=704),
                            dict(type='Resize', height=736, width=736),
                            dict(type='Resize', height=768, width=768),
                            dict(type='Resize', height=800, width=800),
                            dict(type='Resize', height=832, width=832),
                            dict(type='Resize', height=864, width=864)
                        ],
                        p=1.0),
                    dict(
                        type='OneOf',
                        transforms=[
                            dict(type='GaussNoise', p=1.0),
                            dict(type='GaussianBlur', p=1.0),
                            dict(type='Blur', p=1.0)
                        ],
                        p=0.1),
                    dict(
                        type='OneOf',
                        transforms=[
                            dict(type='CLAHE', p=1.0),
                            dict(type='RandomGamma', p=1.0),
                            dict(type='HueSaturationValue', p=1.0),
                            dict(type='ChannelDropout', p=1.0),
                            dict(type='ChannelShuffle', p=1.0),
                            dict(type='RGBShift', p=1.0)
                        ],
                        p=0.1),
                    dict(
                        type='OneOf',
                        transforms=[
                            dict(type='ShiftScaleRotate', p=1.0),
                            dict(type='Rotate', p=1.0)
                        ],
                        p=0.1)
                ],
                bbox_params=dict(
                    type='BboxParams',
                    format='pascal_voc',
                    label_fields=['gt_labels'],
                    min_visibility=0.0,
                    filter_lost_elements=True),
                keymap=dict(img='image', gt_bboxes='bboxes'),
                update_pad_shape=False,
                skip_img_without_anno=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        classes=('General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',
                 'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'),
        ann_file='/opt/ml/detection/Augmented/datasetBGAug/val_v1.json',
        img_prefix='/opt/ml/detection/Augmented/datasetBGAug/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=[
                    dict(type='Resize', height=416, width=416),
                    dict(type='Resize', height=448, width=448),
                    dict(type='Resize', height=480, width=480),
                    dict(type='Resize', height=512, width=512),
                    dict(type='Resize', height=544, width=544),
                    dict(type='Resize', height=576, width=576),
                    dict(type='Resize', height=608, width=608),
                    dict(type='Resize', height=640, width=640),
                    dict(type='Resize', height=672, width=672),
                    dict(type='Resize', height=704, width=704),
                    dict(type='Resize', height=736, width=736),
                    dict(type='Resize', height=768, width=768),
                    dict(type='Resize', height=800, width=800),
                    dict(type='Resize', height=832, width=832),
                    dict(type='Resize', height=864, width=864)
                ],
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        classes=('General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',
                 'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'),
        ann_file='/opt/ml/detection/Augmented/datasetBGAug/val_v1.json',
        img_prefix='/opt/ml/detection/Augmented/datasetBGAug/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=[
                    dict(type='Resize', height=416, width=416),
                    dict(type='Resize', height=448, width=448),
                    dict(type='Resize', height=480, width=480),
                    dict(type='Resize', height=512, width=512),
                    dict(type='Resize', height=544, width=544),
                    dict(type='Resize', height=576, width=576),
                    dict(type='Resize', height=608, width=608),
                    dict(type='Resize', height=640, width=640),
                    dict(type='Resize', height=672, width=672),
                    dict(type='Resize', height=704, width=704),
                    dict(type='Resize', height=736, width=736),
                    dict(type='Resize', height=768, width=768),
                    dict(type='Resize', height=800, width=800),
                    dict(type='Resize', height=832, width=832),
                    dict(type='Resize', height=864, width=864)
                ],
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
lr = 7.142857142857143e-05
optimizer = dict(type='AdamW', lr=7.142857142857143e-05, weight_decay=0.01)
optimizer_config = dict(grad_clip=dict(max_norm=10, norm_type=2))
lr_config = dict(
    policy='CosineAnnealing',
    warmup='linear',
    warmup_iters=300,
    warmup_ratio=0.1,
    min_lr_ratio=7e-06)
total_epochs = 40
expr_name = 'hr40_BGAug_416864_tts_lr05'
dist_params = dict(backend='nccl')
checkpoint_config = dict(interval=1)
log_config = dict(
    interval=10,
    hooks=[
        dict(type='TextLoggerHook'),
        dict(
            type='WandbLoggerHook',
            init_kwargs=dict(
                project='P-stage2-detection',
                name='hr40_BGAug_416864_tts_lr05'))
    ])
custom_hooks = [dict(type='NumClassCheckHook')]
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
runner = dict(type='EpochBasedRunner', max_epochs=40)
work_dir = './work_dirs/hr40_BGAug_416864_tts_lr05'
gpu_ids = range(0, 1)
model = dict(
    type='CascadeRCNN',
    backbone=dict(
        type='HRNet',
        extra=dict(
            stage1=dict(
                num_modules=1,
                num_branches=1,
                block='BOTTLENECK',
                num_blocks=(4, ),
                num_channels=(64, )),
            stage2=dict(
                num_modules=1,
                num_branches=2,
                block='BASIC',
                num_blocks=(4, 4),
                num_channels=(40, 80)),
            stage3=dict(
                num_modules=4,
                num_branches=3,
                block='BASIC',
                num_blocks=(4, 4, 4),
                num_channels=(40, 80, 160)),
            stage4=dict(
                num_modules=3,
                num_branches=4,
                block='BASIC',
                num_blocks=(4, 4, 4, 4),
                num_channels=(40, 80, 160, 320))),
        init_cfg=dict(
            type='Pretrained', checkpoint='open-mmlab://msra/hrnetv2_w40')),
    neck=dict(type='HRFPN', in_channels=[40, 80, 160, 320], out_channels=256),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(
            type='SmoothL1Loss', beta=0.1111111111111111, loss_weight=1.0)),
    roi_head=dict(
        type='CascadeRoIHead',
        num_stages=3,
        stage_loss_weights=[1, 0.5, 0.25],
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=[
            dict(
                type='Shared2FCBBoxHead',
                in_channels=256,
                fc_out_channels=1024,
                roi_feat_size=7,
                num_classes=10,
                bbox_coder=dict(
                    type='DeltaXYWHBBoxCoder',
                    target_means=[0.0, 0.0, 0.0, 0.0],
                    target_stds=[0.1, 0.1, 0.2, 0.2]),
                reg_class_agnostic=True,
                loss_cls=dict(
                    type='CrossEntropyLoss',
                    use_sigmoid=False,
                    loss_weight=1.0),
                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,
                               loss_weight=1.0)),
            dict(
                type='Shared2FCBBoxHead',
                in_channels=256,
                fc_out_channels=1024,
                roi_feat_size=7,
                num_classes=10,
                bbox_coder=dict(
                    type='DeltaXYWHBBoxCoder',
                    target_means=[0.0, 0.0, 0.0, 0.0],
                    target_stds=[0.05, 0.05, 0.1, 0.1]),
                reg_class_agnostic=True,
                loss_cls=dict(
                    type='CrossEntropyLoss',
                    use_sigmoid=False,
                    loss_weight=1.0),
                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,
                               loss_weight=1.0)),
            dict(
                type='Shared2FCBBoxHead',
                in_channels=256,
                fc_out_channels=1024,
                roi_feat_size=7,
                num_classes=10,
                bbox_coder=dict(
                    type='DeltaXYWHBBoxCoder',
                    target_means=[0.0, 0.0, 0.0, 0.0],
                    target_stds=[0.033, 0.033, 0.067, 0.067]),
                reg_class_agnostic=True,
                loss_cls=dict(
                    type='CrossEntropyLoss',
                    use_sigmoid=False,
                    loss_weight=1.0),
                loss_bbox=dict(type='SmoothL1Loss', beta=1.0, loss_weight=1.0))
        ]),
    train_cfg=dict(
        rpn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.7,
                neg_iou_thr=0.3,
                min_pos_iou=0.3,
                match_low_quality=True,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=256,
                pos_fraction=0.5,
                neg_pos_ub=-1,
                add_gt_as_proposals=False),
            allowed_border=0,
            pos_weight=-1,
            debug=False),
        rpn_proposal=dict(
            nms_pre=2000,
            max_per_img=2000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=[
            dict(
                assigner=dict(
                    type='MaxIoUAssigner',
                    pos_iou_thr=0.5,
                    neg_iou_thr=0.5,
                    min_pos_iou=0.5,
                    match_low_quality=False,
                    ignore_iof_thr=-1),
                sampler=dict(
                    type='RandomSampler',
                    num=512,
                    pos_fraction=0.25,
                    neg_pos_ub=-1,
                    add_gt_as_proposals=True),
                pos_weight=-1,
                debug=False),
            dict(
                assigner=dict(
                    type='MaxIoUAssigner',
                    pos_iou_thr=0.6,
                    neg_iou_thr=0.6,
                    min_pos_iou=0.6,
                    match_low_quality=False,
                    ignore_iof_thr=-1),
                sampler=dict(
                    type='RandomSampler',
                    num=512,
                    pos_fraction=0.25,
                    neg_pos_ub=-1,
                    add_gt_as_proposals=True),
                pos_weight=-1,
                debug=False),
            dict(
                assigner=dict(
                    type='MaxIoUAssigner',
                    pos_iou_thr=0.7,
                    neg_iou_thr=0.7,
                    min_pos_iou=0.7,
                    match_low_quality=False,
                    ignore_iof_thr=-1),
                sampler=dict(
                    type='RandomSampler',
                    num=512,
                    pos_fraction=0.25,
                    neg_pos_ub=-1,
                    add_gt_as_proposals=True),
                pos_weight=-1,
                debug=False)
        ]),
    test_cfg=dict(
        rpn=dict(
            nms_pre=1000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            score_thr=0.05,
            nms=dict(type='nms', iou_threshold=0.5),
            max_per_img=100)))

/opt/conda/envs/psc/lib/python3.8/site-packages/mmdet/core/anchor/builder.py:16: UserWarning: ``build_anchor_generator`` would be deprecated soon, please use ``build_prior_generator`` 
  warnings.warn(
2021-10-01 08:43:10,497 - mmdet - INFO - initialize HRNet with init_cfg {'type': 'Pretrained', 'checkpoint': 'open-mmlab://msra/hrnetv2_w40'}
2021-10-01 08:43:10,497 - mmcv - INFO - load model from: open-mmlab://msra/hrnetv2_w40
2021-10-01 08:43:10,497 - mmcv - INFO - Use load_from_openmmlab loader
2021-10-01 08:43:11,020 - mmcv - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: incre_modules.0.0.conv1.weight, incre_modules.0.0.bn1.weight, incre_modules.0.0.bn1.bias, incre_modules.0.0.bn1.running_mean, incre_modules.0.0.bn1.running_var, incre_modules.0.0.bn1.num_batches_tracked, incre_modules.0.0.conv2.weight, incre_modules.0.0.bn2.weight, incre_modules.0.0.bn2.bias, incre_modules.0.0.bn2.running_mean, incre_modules.0.0.bn2.running_var, incre_modules.0.0.bn2.num_batches_tracked, incre_modules.0.0.conv3.weight, incre_modules.0.0.bn3.weight, incre_modules.0.0.bn3.bias, incre_modules.0.0.bn3.running_mean, incre_modules.0.0.bn3.running_var, incre_modules.0.0.bn3.num_batches_tracked, incre_modules.0.0.downsample.0.weight, incre_modules.0.0.downsample.1.weight, incre_modules.0.0.downsample.1.bias, incre_modules.0.0.downsample.1.running_mean, incre_modules.0.0.downsample.1.running_var, incre_modules.0.0.downsample.1.num_batches_tracked, incre_modules.1.0.conv1.weight, incre_modules.1.0.bn1.weight, incre_modules.1.0.bn1.bias, incre_modules.1.0.bn1.running_mean, incre_modules.1.0.bn1.running_var, incre_modules.1.0.bn1.num_batches_tracked, incre_modules.1.0.conv2.weight, incre_modules.1.0.bn2.weight, incre_modules.1.0.bn2.bias, incre_modules.1.0.bn2.running_mean, incre_modules.1.0.bn2.running_var, incre_modules.1.0.bn2.num_batches_tracked, incre_modules.1.0.conv3.weight, incre_modules.1.0.bn3.weight, incre_modules.1.0.bn3.bias, incre_modules.1.0.bn3.running_mean, incre_modules.1.0.bn3.running_var, incre_modules.1.0.bn3.num_batches_tracked, incre_modules.1.0.downsample.0.weight, incre_modules.1.0.downsample.1.weight, incre_modules.1.0.downsample.1.bias, incre_modules.1.0.downsample.1.running_mean, incre_modules.1.0.downsample.1.running_var, incre_modules.1.0.downsample.1.num_batches_tracked, incre_modules.2.0.conv1.weight, incre_modules.2.0.bn1.weight, incre_modules.2.0.bn1.bias, incre_modules.2.0.bn1.running_mean, incre_modules.2.0.bn1.running_var, incre_modules.2.0.bn1.num_batches_tracked, incre_modules.2.0.conv2.weight, incre_modules.2.0.bn2.weight, incre_modules.2.0.bn2.bias, incre_modules.2.0.bn2.running_mean, incre_modules.2.0.bn2.running_var, incre_modules.2.0.bn2.num_batches_tracked, incre_modules.2.0.conv3.weight, incre_modules.2.0.bn3.weight, incre_modules.2.0.bn3.bias, incre_modules.2.0.bn3.running_mean, incre_modules.2.0.bn3.running_var, incre_modules.2.0.bn3.num_batches_tracked, incre_modules.2.0.downsample.0.weight, incre_modules.2.0.downsample.1.weight, incre_modules.2.0.downsample.1.bias, incre_modules.2.0.downsample.1.running_mean, incre_modules.2.0.downsample.1.running_var, incre_modules.2.0.downsample.1.num_batches_tracked, incre_modules.3.0.conv1.weight, incre_modules.3.0.bn1.weight, incre_modules.3.0.bn1.bias, incre_modules.3.0.bn1.running_mean, incre_modules.3.0.bn1.running_var, incre_modules.3.0.bn1.num_batches_tracked, incre_modules.3.0.conv2.weight, incre_modules.3.0.bn2.weight, incre_modules.3.0.bn2.bias, incre_modules.3.0.bn2.running_mean, incre_modules.3.0.bn2.running_var, incre_modules.3.0.bn2.num_batches_tracked, incre_modules.3.0.conv3.weight, incre_modules.3.0.bn3.weight, incre_modules.3.0.bn3.bias, incre_modules.3.0.bn3.running_mean, incre_modules.3.0.bn3.running_var, incre_modules.3.0.bn3.num_batches_tracked, incre_modules.3.0.downsample.0.weight, incre_modules.3.0.downsample.1.weight, incre_modules.3.0.downsample.1.bias, incre_modules.3.0.downsample.1.running_mean, incre_modules.3.0.downsample.1.running_var, incre_modules.3.0.downsample.1.num_batches_tracked, downsamp_modules.0.0.weight, downsamp_modules.0.0.bias, downsamp_modules.0.1.weight, downsamp_modules.0.1.bias, downsamp_modules.0.1.running_mean, downsamp_modules.0.1.running_var, downsamp_modules.0.1.num_batches_tracked, downsamp_modules.1.0.weight, downsamp_modules.1.0.bias, downsamp_modules.1.1.weight, downsamp_modules.1.1.bias, downsamp_modules.1.1.running_mean, downsamp_modules.1.1.running_var, downsamp_modules.1.1.num_batches_tracked, downsamp_modules.2.0.weight, downsamp_modules.2.0.bias, downsamp_modules.2.1.weight, downsamp_modules.2.1.bias, downsamp_modules.2.1.running_mean, downsamp_modules.2.1.running_var, downsamp_modules.2.1.num_batches_tracked, final_layer.0.weight, final_layer.0.bias, final_layer.1.weight, final_layer.1.bias, final_layer.1.running_mean, final_layer.1.running_var, final_layer.1.num_batches_tracked, classifier.weight, classifier.bias

2021-10-01 08:43:11,124 - mmdet - INFO - initialize HRFPN with init_cfg {'type': 'Caffe2Xavier', 'layer': 'Conv2d'}
2021-10-01 08:43:11,151 - mmdet - INFO - initialize RPNHead with init_cfg {'type': 'Normal', 'layer': 'Conv2d', 'std': 0.01}
2021-10-01 08:43:11,159 - mmdet - INFO - initialize Shared2FCBBoxHead with init_cfg [{'type': 'Normal', 'std': 0.01, 'override': {'name': 'fc_cls'}}, {'type': 'Normal', 'std': 0.001, 'override': {'name': 'fc_reg'}}, {'type': 'Xavier', 'layer': 'Linear', 'override': [{'name': 'shared_fcs'}, {'name': 'cls_fcs'}, {'name': 'reg_fcs'}]}]
2021-10-01 08:43:11,482 - mmdet - INFO - initialize Shared2FCBBoxHead with init_cfg [{'type': 'Normal', 'std': 0.01, 'override': {'name': 'fc_cls'}}, {'type': 'Normal', 'std': 0.001, 'override': {'name': 'fc_reg'}}, {'type': 'Xavier', 'layer': 'Linear', 'override': [{'name': 'shared_fcs'}, {'name': 'cls_fcs'}, {'name': 'reg_fcs'}]}]
2021-10-01 08:43:11,800 - mmdet - INFO - initialize Shared2FCBBoxHead with init_cfg [{'type': 'Normal', 'std': 0.01, 'override': {'name': 'fc_cls'}}, {'type': 'Normal', 'std': 0.001, 'override': {'name': 'fc_reg'}}, {'type': 'Xavier', 'layer': 'Linear', 'override': [{'name': 'shared_fcs'}, {'name': 'cls_fcs'}, {'name': 'reg_fcs'}]}]
loading annotations into memory...
Done (t=0.28s)
creating index...
index created!
loading annotations into memory...
Done (t=0.22s)
creating index...
index created!
Traceback (most recent call last):
  File "/opt/conda/envs/psc/lib/python3.8/site-packages/mmcv/utils/registry.py", line 52, in build_from_cfg
    return obj_cls(**args)
  File "/opt/conda/envs/psc/lib/python3.8/site-packages/mmdet/datasets/pipelines/test_time_aug.py", line 67, in __init__
    assert mmcv.is_list_of(self.img_scale, tuple)
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/opt/conda/envs/psc/lib/python3.8/site-packages/mmcv/utils/registry.py", line 52, in build_from_cfg
    return obj_cls(**args)
  File "/opt/conda/envs/psc/lib/python3.8/site-packages/mmdet/datasets/custom.py", line 106, in __init__
    self.pipeline = Compose(pipeline)
  File "/opt/conda/envs/psc/lib/python3.8/site-packages/mmdet/datasets/pipelines/compose.py", line 23, in __init__
    transform = build_from_cfg(transform, PIPELINES)
  File "/opt/conda/envs/psc/lib/python3.8/site-packages/mmcv/utils/registry.py", line 55, in build_from_cfg
    raise type(e)(f'{obj_cls.__name__}: {e}')
AssertionError: MultiScaleFlipAug: 

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "tools/train.py", line 189, in <module>
    main()
  File "tools/train.py", line 178, in main
    train_detector(
  File "/opt/conda/envs/psc/lib/python3.8/site-packages/mmdet/apis/train.py", line 141, in train_detector
    val_dataset = build_dataset(cfg.data.val, dict(test_mode=True))
  File "/opt/conda/envs/psc/lib/python3.8/site-packages/mmdet/datasets/builder.py", line 78, in build_dataset
    dataset = build_from_cfg(cfg, DATASETS, default_args)
  File "/opt/conda/envs/psc/lib/python3.8/site-packages/mmcv/utils/registry.py", line 55, in build_from_cfg
    raise type(e)(f'{obj_cls.__name__}: {e}')
AssertionError: CocoDataset: MultiScaleFlipAug: 
2021-10-01 08:48:01,343 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.11 (default, Aug  3 2021, 15:09:35) [GCC 7.5.0]
CUDA available: True
GPU 0: Tesla V100-PCIE-32GB
CUDA_HOME: None
GCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
PyTorch: 1.7.1
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.3-Product Build 20210617 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.0.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.8.0a0
OpenCV: 4.5.3
MMCV: 1.3.14
MMCV Compiler: GCC 7.3
MMCV CUDA Compiler: 11.0
MMDetection: 2.16.0+ccb9030
------------------------------------------------------------

2021-10-01 08:48:04,127 - mmdet - INFO - Distributed training: False
2021-10-01 08:48:06,924 - mmdet - INFO - Config:
dataset_type = 'CocoDataset'
data_root = '/opt/ml/detection/Augmented/datasetBGAug/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
imsize = 864
multi_scale_dict = [
    dict(type='Resize', height=416, width=416),
    dict(type='Resize', height=448, width=448),
    dict(type='Resize', height=480, width=480),
    dict(type='Resize', height=512, width=512),
    dict(type='Resize', height=544, width=544),
    dict(type='Resize', height=576, width=576),
    dict(type='Resize', height=608, width=608),
    dict(type='Resize', height=640, width=640),
    dict(type='Resize', height=672, width=672),
    dict(type='Resize', height=704, width=704),
    dict(type='Resize', height=736, width=736),
    dict(type='Resize', height=768, width=768),
    dict(type='Resize', height=800, width=800),
    dict(type='Resize', height=832, width=832),
    dict(type='Resize', height=864, width=864)
]
i = 864
alb_transform = [
    dict(
        type='OneOf',
        transforms=[
            dict(type='Resize', height=416, width=416),
            dict(type='Resize', height=448, width=448),
            dict(type='Resize', height=480, width=480),
            dict(type='Resize', height=512, width=512),
            dict(type='Resize', height=544, width=544),
            dict(type='Resize', height=576, width=576),
            dict(type='Resize', height=608, width=608),
            dict(type='Resize', height=640, width=640),
            dict(type='Resize', height=672, width=672),
            dict(type='Resize', height=704, width=704),
            dict(type='Resize', height=736, width=736),
            dict(type='Resize', height=768, width=768),
            dict(type='Resize', height=800, width=800),
            dict(type='Resize', height=832, width=832),
            dict(type='Resize', height=864, width=864)
        ],
        p=1.0),
    dict(
        type='OneOf',
        transforms=[
            dict(type='GaussNoise', p=1.0),
            dict(type='GaussianBlur', p=1.0),
            dict(type='Blur', p=1.0)
        ],
        p=0.1),
    dict(
        type='OneOf',
        transforms=[
            dict(type='CLAHE', p=1.0),
            dict(type='RandomGamma', p=1.0),
            dict(type='HueSaturationValue', p=1.0),
            dict(type='ChannelDropout', p=1.0),
            dict(type='ChannelShuffle', p=1.0),
            dict(type='RGBShift', p=1.0)
        ],
        p=0.1),
    dict(
        type='OneOf',
        transforms=[
            dict(type='ShiftScaleRotate', p=1.0),
            dict(type='Rotate', p=1.0)
        ],
        p=0.1)
]
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(864, 864)),
    dict(
        type='Albu',
        transforms=[
            dict(
                type='OneOf',
                transforms=[
                    dict(type='Resize', height=416, width=416),
                    dict(type='Resize', height=448, width=448),
                    dict(type='Resize', height=480, width=480),
                    dict(type='Resize', height=512, width=512),
                    dict(type='Resize', height=544, width=544),
                    dict(type='Resize', height=576, width=576),
                    dict(type='Resize', height=608, width=608),
                    dict(type='Resize', height=640, width=640),
                    dict(type='Resize', height=672, width=672),
                    dict(type='Resize', height=704, width=704),
                    dict(type='Resize', height=736, width=736),
                    dict(type='Resize', height=768, width=768),
                    dict(type='Resize', height=800, width=800),
                    dict(type='Resize', height=832, width=832),
                    dict(type='Resize', height=864, width=864)
                ],
                p=1.0),
            dict(
                type='OneOf',
                transforms=[
                    dict(type='GaussNoise', p=1.0),
                    dict(type='GaussianBlur', p=1.0),
                    dict(type='Blur', p=1.0)
                ],
                p=0.1),
            dict(
                type='OneOf',
                transforms=[
                    dict(type='CLAHE', p=1.0),
                    dict(type='RandomGamma', p=1.0),
                    dict(type='HueSaturationValue', p=1.0),
                    dict(type='ChannelDropout', p=1.0),
                    dict(type='ChannelShuffle', p=1.0),
                    dict(type='RGBShift', p=1.0)
                ],
                p=0.1),
            dict(
                type='OneOf',
                transforms=[
                    dict(type='ShiftScaleRotate', p=1.0),
                    dict(type='Rotate', p=1.0)
                ],
                p=0.1)
        ],
        bbox_params=dict(
            type='BboxParams',
            format='pascal_voc',
            label_fields=['gt_labels'],
            min_visibility=0.0,
            filter_lost_elements=True),
        keymap=dict(img='image', gt_bboxes='bboxes'),
        update_pad_shape=False,
        skip_img_without_anno=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=[(416, 416), (448, 448), (480, 480), (512, 512), (544, 544),
                   (576, 576), (608, 608), (640, 640), (672, 672), (704, 704),
                   (736, 736), (768, 768), (800, 800), (832, 832), (864, 864)],
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
classes = ('General trash', 'Paper', 'Paper pack', 'Metal', 'Glass', 'Plastic',
           'Styrofoam', 'Plastic bag', 'Battery', 'Clothing')
data = dict(
    samples_per_gpu=8,
    workers_per_gpu=2,
    train=dict(
        type='CocoDataset',
        classes=('General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',
                 'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'),
        ann_file='/opt/ml/detection/Augmented/datasetBGAug/train_v1.json',
        img_prefix='/opt/ml/detection/Augmented/datasetBGAug/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(864, 864)),
            dict(
                type='Albu',
                transforms=[
                    dict(
                        type='OneOf',
                        transforms=[
                            dict(type='Resize', height=416, width=416),
                            dict(type='Resize', height=448, width=448),
                            dict(type='Resize', height=480, width=480),
                            dict(type='Resize', height=512, width=512),
                            dict(type='Resize', height=544, width=544),
                            dict(type='Resize', height=576, width=576),
                            dict(type='Resize', height=608, width=608),
                            dict(type='Resize', height=640, width=640),
                            dict(type='Resize', height=672, width=672),
                            dict(type='Resize', height=704, width=704),
                            dict(type='Resize', height=736, width=736),
                            dict(type='Resize', height=768, width=768),
                            dict(type='Resize', height=800, width=800),
                            dict(type='Resize', height=832, width=832),
                            dict(type='Resize', height=864, width=864)
                        ],
                        p=1.0),
                    dict(
                        type='OneOf',
                        transforms=[
                            dict(type='GaussNoise', p=1.0),
                            dict(type='GaussianBlur', p=1.0),
                            dict(type='Blur', p=1.0)
                        ],
                        p=0.1),
                    dict(
                        type='OneOf',
                        transforms=[
                            dict(type='CLAHE', p=1.0),
                            dict(type='RandomGamma', p=1.0),
                            dict(type='HueSaturationValue', p=1.0),
                            dict(type='ChannelDropout', p=1.0),
                            dict(type='ChannelShuffle', p=1.0),
                            dict(type='RGBShift', p=1.0)
                        ],
                        p=0.1),
                    dict(
                        type='OneOf',
                        transforms=[
                            dict(type='ShiftScaleRotate', p=1.0),
                            dict(type='Rotate', p=1.0)
                        ],
                        p=0.1)
                ],
                bbox_params=dict(
                    type='BboxParams',
                    format='pascal_voc',
                    label_fields=['gt_labels'],
                    min_visibility=0.0,
                    filter_lost_elements=True),
                keymap=dict(img='image', gt_bboxes='bboxes'),
                update_pad_shape=False,
                skip_img_without_anno=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        classes=('General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',
                 'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'),
        ann_file='/opt/ml/detection/Augmented/datasetBGAug/val_v1.json',
        img_prefix='/opt/ml/detection/Augmented/datasetBGAug/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=[(416, 416), (448, 448), (480, 480), (512, 512),
                           (544, 544), (576, 576), (608, 608), (640, 640),
                           (672, 672), (704, 704), (736, 736), (768, 768),
                           (800, 800), (832, 832), (864, 864)],
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        classes=('General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',
                 'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'),
        ann_file='/opt/ml/detection/Augmented/datasetBGAug/val_v1.json',
        img_prefix='/opt/ml/detection/Augmented/datasetBGAug/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=[(416, 416), (448, 448), (480, 480), (512, 512),
                           (544, 544), (576, 576), (608, 608), (640, 640),
                           (672, 672), (704, 704), (736, 736), (768, 768),
                           (800, 800), (832, 832), (864, 864)],
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
lr = 7.142857142857143e-05
optimizer = dict(type='AdamW', lr=7.142857142857143e-05, weight_decay=0.01)
optimizer_config = dict(grad_clip=dict(max_norm=10, norm_type=2))
lr_config = dict(
    policy='CosineAnnealing',
    warmup='linear',
    warmup_iters=300,
    warmup_ratio=0.1,
    min_lr_ratio=7e-06)
total_epochs = 40
expr_name = 'hr40_BGAug_416864_tts_lr05'
dist_params = dict(backend='nccl')
checkpoint_config = dict(interval=1)
log_config = dict(
    interval=10,
    hooks=[
        dict(type='TextLoggerHook'),
        dict(
            type='WandbLoggerHook',
            init_kwargs=dict(
                project='P-stage2-detection',
                name='hr40_BGAug_416864_tts_lr05'))
    ])
custom_hooks = [dict(type='NumClassCheckHook')]
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
runner = dict(type='EpochBasedRunner', max_epochs=40)
work_dir = './work_dirs/hr40_BGAug_416864_tts_lr05'
gpu_ids = range(0, 1)
model = dict(
    type='CascadeRCNN',
    backbone=dict(
        type='HRNet',
        extra=dict(
            stage1=dict(
                num_modules=1,
                num_branches=1,
                block='BOTTLENECK',
                num_blocks=(4, ),
                num_channels=(64, )),
            stage2=dict(
                num_modules=1,
                num_branches=2,
                block='BASIC',
                num_blocks=(4, 4),
                num_channels=(40, 80)),
            stage3=dict(
                num_modules=4,
                num_branches=3,
                block='BASIC',
                num_blocks=(4, 4, 4),
                num_channels=(40, 80, 160)),
            stage4=dict(
                num_modules=3,
                num_branches=4,
                block='BASIC',
                num_blocks=(4, 4, 4, 4),
                num_channels=(40, 80, 160, 320))),
        init_cfg=dict(
            type='Pretrained', checkpoint='open-mmlab://msra/hrnetv2_w40')),
    neck=dict(type='HRFPN', in_channels=[40, 80, 160, 320], out_channels=256),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(
            type='SmoothL1Loss', beta=0.1111111111111111, loss_weight=1.0)),
    roi_head=dict(
        type='CascadeRoIHead',
        num_stages=3,
        stage_loss_weights=[1, 0.5, 0.25],
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=[
            dict(
                type='Shared2FCBBoxHead',
                in_channels=256,
                fc_out_channels=1024,
                roi_feat_size=7,
                num_classes=10,
                bbox_coder=dict(
                    type='DeltaXYWHBBoxCoder',
                    target_means=[0.0, 0.0, 0.0, 0.0],
                    target_stds=[0.1, 0.1, 0.2, 0.2]),
                reg_class_agnostic=True,
                loss_cls=dict(
                    type='CrossEntropyLoss',
                    use_sigmoid=False,
                    loss_weight=1.0),
                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,
                               loss_weight=1.0)),
            dict(
                type='Shared2FCBBoxHead',
                in_channels=256,
                fc_out_channels=1024,
                roi_feat_size=7,
                num_classes=10,
                bbox_coder=dict(
                    type='DeltaXYWHBBoxCoder',
                    target_means=[0.0, 0.0, 0.0, 0.0],
                    target_stds=[0.05, 0.05, 0.1, 0.1]),
                reg_class_agnostic=True,
                loss_cls=dict(
                    type='CrossEntropyLoss',
                    use_sigmoid=False,
                    loss_weight=1.0),
                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,
                               loss_weight=1.0)),
            dict(
                type='Shared2FCBBoxHead',
                in_channels=256,
                fc_out_channels=1024,
                roi_feat_size=7,
                num_classes=10,
                bbox_coder=dict(
                    type='DeltaXYWHBBoxCoder',
                    target_means=[0.0, 0.0, 0.0, 0.0],
                    target_stds=[0.033, 0.033, 0.067, 0.067]),
                reg_class_agnostic=True,
                loss_cls=dict(
                    type='CrossEntropyLoss',
                    use_sigmoid=False,
                    loss_weight=1.0),
                loss_bbox=dict(type='SmoothL1Loss', beta=1.0, loss_weight=1.0))
        ]),
    train_cfg=dict(
        rpn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.7,
                neg_iou_thr=0.3,
                min_pos_iou=0.3,
                match_low_quality=True,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=256,
                pos_fraction=0.5,
                neg_pos_ub=-1,
                add_gt_as_proposals=False),
            allowed_border=0,
            pos_weight=-1,
            debug=False),
        rpn_proposal=dict(
            nms_pre=2000,
            max_per_img=2000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=[
            dict(
                assigner=dict(
                    type='MaxIoUAssigner',
                    pos_iou_thr=0.5,
                    neg_iou_thr=0.5,
                    min_pos_iou=0.5,
                    match_low_quality=False,
                    ignore_iof_thr=-1),
                sampler=dict(
                    type='RandomSampler',
                    num=512,
                    pos_fraction=0.25,
                    neg_pos_ub=-1,
                    add_gt_as_proposals=True),
                pos_weight=-1,
                debug=False),
            dict(
                assigner=dict(
                    type='MaxIoUAssigner',
                    pos_iou_thr=0.6,
                    neg_iou_thr=0.6,
                    min_pos_iou=0.6,
                    match_low_quality=False,
                    ignore_iof_thr=-1),
                sampler=dict(
                    type='RandomSampler',
                    num=512,
                    pos_fraction=0.25,
                    neg_pos_ub=-1,
                    add_gt_as_proposals=True),
                pos_weight=-1,
                debug=False),
            dict(
                assigner=dict(
                    type='MaxIoUAssigner',
                    pos_iou_thr=0.7,
                    neg_iou_thr=0.7,
                    min_pos_iou=0.7,
                    match_low_quality=False,
                    ignore_iof_thr=-1),
                sampler=dict(
                    type='RandomSampler',
                    num=512,
                    pos_fraction=0.25,
                    neg_pos_ub=-1,
                    add_gt_as_proposals=True),
                pos_weight=-1,
                debug=False)
        ]),
    test_cfg=dict(
        rpn=dict(
            nms_pre=1000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            score_thr=0.05,
            nms=dict(type='nms', iou_threshold=0.5),
            max_per_img=100)))

/opt/conda/envs/psc/lib/python3.8/site-packages/mmdet/core/anchor/builder.py:16: UserWarning: ``build_anchor_generator`` would be deprecated soon, please use ``build_prior_generator`` 
  warnings.warn(
2021-10-01 08:48:07,954 - mmdet - INFO - initialize HRNet with init_cfg {'type': 'Pretrained', 'checkpoint': 'open-mmlab://msra/hrnetv2_w40'}
2021-10-01 08:48:07,955 - mmcv - INFO - load model from: open-mmlab://msra/hrnetv2_w40
2021-10-01 08:48:07,955 - mmcv - INFO - Use load_from_openmmlab loader
2021-10-01 08:48:08,466 - mmcv - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: incre_modules.0.0.conv1.weight, incre_modules.0.0.bn1.weight, incre_modules.0.0.bn1.bias, incre_modules.0.0.bn1.running_mean, incre_modules.0.0.bn1.running_var, incre_modules.0.0.bn1.num_batches_tracked, incre_modules.0.0.conv2.weight, incre_modules.0.0.bn2.weight, incre_modules.0.0.bn2.bias, incre_modules.0.0.bn2.running_mean, incre_modules.0.0.bn2.running_var, incre_modules.0.0.bn2.num_batches_tracked, incre_modules.0.0.conv3.weight, incre_modules.0.0.bn3.weight, incre_modules.0.0.bn3.bias, incre_modules.0.0.bn3.running_mean, incre_modules.0.0.bn3.running_var, incre_modules.0.0.bn3.num_batches_tracked, incre_modules.0.0.downsample.0.weight, incre_modules.0.0.downsample.1.weight, incre_modules.0.0.downsample.1.bias, incre_modules.0.0.downsample.1.running_mean, incre_modules.0.0.downsample.1.running_var, incre_modules.0.0.downsample.1.num_batches_tracked, incre_modules.1.0.conv1.weight, incre_modules.1.0.bn1.weight, incre_modules.1.0.bn1.bias, incre_modules.1.0.bn1.running_mean, incre_modules.1.0.bn1.running_var, incre_modules.1.0.bn1.num_batches_tracked, incre_modules.1.0.conv2.weight, incre_modules.1.0.bn2.weight, incre_modules.1.0.bn2.bias, incre_modules.1.0.bn2.running_mean, incre_modules.1.0.bn2.running_var, incre_modules.1.0.bn2.num_batches_tracked, incre_modules.1.0.conv3.weight, incre_modules.1.0.bn3.weight, incre_modules.1.0.bn3.bias, incre_modules.1.0.bn3.running_mean, incre_modules.1.0.bn3.running_var, incre_modules.1.0.bn3.num_batches_tracked, incre_modules.1.0.downsample.0.weight, incre_modules.1.0.downsample.1.weight, incre_modules.1.0.downsample.1.bias, incre_modules.1.0.downsample.1.running_mean, incre_modules.1.0.downsample.1.running_var, incre_modules.1.0.downsample.1.num_batches_tracked, incre_modules.2.0.conv1.weight, incre_modules.2.0.bn1.weight, incre_modules.2.0.bn1.bias, incre_modules.2.0.bn1.running_mean, incre_modules.2.0.bn1.running_var, incre_modules.2.0.bn1.num_batches_tracked, incre_modules.2.0.conv2.weight, incre_modules.2.0.bn2.weight, incre_modules.2.0.bn2.bias, incre_modules.2.0.bn2.running_mean, incre_modules.2.0.bn2.running_var, incre_modules.2.0.bn2.num_batches_tracked, incre_modules.2.0.conv3.weight, incre_modules.2.0.bn3.weight, incre_modules.2.0.bn3.bias, incre_modules.2.0.bn3.running_mean, incre_modules.2.0.bn3.running_var, incre_modules.2.0.bn3.num_batches_tracked, incre_modules.2.0.downsample.0.weight, incre_modules.2.0.downsample.1.weight, incre_modules.2.0.downsample.1.bias, incre_modules.2.0.downsample.1.running_mean, incre_modules.2.0.downsample.1.running_var, incre_modules.2.0.downsample.1.num_batches_tracked, incre_modules.3.0.conv1.weight, incre_modules.3.0.bn1.weight, incre_modules.3.0.bn1.bias, incre_modules.3.0.bn1.running_mean, incre_modules.3.0.bn1.running_var, incre_modules.3.0.bn1.num_batches_tracked, incre_modules.3.0.conv2.weight, incre_modules.3.0.bn2.weight, incre_modules.3.0.bn2.bias, incre_modules.3.0.bn2.running_mean, incre_modules.3.0.bn2.running_var, incre_modules.3.0.bn2.num_batches_tracked, incre_modules.3.0.conv3.weight, incre_modules.3.0.bn3.weight, incre_modules.3.0.bn3.bias, incre_modules.3.0.bn3.running_mean, incre_modules.3.0.bn3.running_var, incre_modules.3.0.bn3.num_batches_tracked, incre_modules.3.0.downsample.0.weight, incre_modules.3.0.downsample.1.weight, incre_modules.3.0.downsample.1.bias, incre_modules.3.0.downsample.1.running_mean, incre_modules.3.0.downsample.1.running_var, incre_modules.3.0.downsample.1.num_batches_tracked, downsamp_modules.0.0.weight, downsamp_modules.0.0.bias, downsamp_modules.0.1.weight, downsamp_modules.0.1.bias, downsamp_modules.0.1.running_mean, downsamp_modules.0.1.running_var, downsamp_modules.0.1.num_batches_tracked, downsamp_modules.1.0.weight, downsamp_modules.1.0.bias, downsamp_modules.1.1.weight, downsamp_modules.1.1.bias, downsamp_modules.1.1.running_mean, downsamp_modules.1.1.running_var, downsamp_modules.1.1.num_batches_tracked, downsamp_modules.2.0.weight, downsamp_modules.2.0.bias, downsamp_modules.2.1.weight, downsamp_modules.2.1.bias, downsamp_modules.2.1.running_mean, downsamp_modules.2.1.running_var, downsamp_modules.2.1.num_batches_tracked, final_layer.0.weight, final_layer.0.bias, final_layer.1.weight, final_layer.1.bias, final_layer.1.running_mean, final_layer.1.running_var, final_layer.1.num_batches_tracked, classifier.weight, classifier.bias

2021-10-01 08:48:08,570 - mmdet - INFO - initialize HRFPN with init_cfg {'type': 'Caffe2Xavier', 'layer': 'Conv2d'}
2021-10-01 08:48:08,596 - mmdet - INFO - initialize RPNHead with init_cfg {'type': 'Normal', 'layer': 'Conv2d', 'std': 0.01}
2021-10-01 08:48:08,604 - mmdet - INFO - initialize Shared2FCBBoxHead with init_cfg [{'type': 'Normal', 'std': 0.01, 'override': {'name': 'fc_cls'}}, {'type': 'Normal', 'std': 0.001, 'override': {'name': 'fc_reg'}}, {'type': 'Xavier', 'layer': 'Linear', 'override': [{'name': 'shared_fcs'}, {'name': 'cls_fcs'}, {'name': 'reg_fcs'}]}]
2021-10-01 08:48:08,919 - mmdet - INFO - initialize Shared2FCBBoxHead with init_cfg [{'type': 'Normal', 'std': 0.01, 'override': {'name': 'fc_cls'}}, {'type': 'Normal', 'std': 0.001, 'override': {'name': 'fc_reg'}}, {'type': 'Xavier', 'layer': 'Linear', 'override': [{'name': 'shared_fcs'}, {'name': 'cls_fcs'}, {'name': 'reg_fcs'}]}]
2021-10-01 08:48:09,234 - mmdet - INFO - initialize Shared2FCBBoxHead with init_cfg [{'type': 'Normal', 'std': 0.01, 'override': {'name': 'fc_cls'}}, {'type': 'Normal', 'std': 0.001, 'override': {'name': 'fc_reg'}}, {'type': 'Xavier', 'layer': 'Linear', 'override': [{'name': 'shared_fcs'}, {'name': 'cls_fcs'}, {'name': 'reg_fcs'}]}]
2021-10-01 08:48:13,325 - mmdet - INFO - Start running, host: root@965f40750ba2, work_dir: /opt/ml/detection/object-detection-level2-cv-03/1Phase/mmdetection/work_dirs/hr40_BGAug_416864_tts_lr05
2021-10-01 08:48:13,326 - mmdet - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) CosineAnnealingLrUpdaterHook       
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) WandbLoggerHook                    
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) CosineAnnealingLrUpdaterHook       
(NORMAL      ) NumClassCheckHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) WandbLoggerHook                    
 -------------------- 
before_train_iter:
(VERY_HIGH   ) CosineAnnealingLrUpdaterHook       
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) WandbLoggerHook                    
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) WandbLoggerHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) NumClassCheckHook                  
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) WandbLoggerHook                    
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) WandbLoggerHook                    
 -------------------- 
after_run:
(VERY_LOW    ) WandbLoggerHook                    
 -------------------- 
2021-10-01 08:48:13,326 - mmdet - INFO - workflow: [('train', 1)], max: 40 epochs
wandb: Currently logged in as: ark10806 (use `wandb login --relogin` to force relogin)
loading annotations into memory...
Done (t=0.26s)
creating index...
index created!
loading annotations into memory...
Done (t=0.02s)
creating index...
index created!
wandb: wandb version 0.12.3 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.12.2
wandb: Syncing run hr40_BGAug_416864_tts_lr05
wandb:  View project at https://wandb.ai/ark10806/P-stage2-detection
wandb:  View run at https://wandb.ai/ark10806/P-stage2-detection/runs/2xl8hdyi
wandb: Run data is saved locally in /opt/ml/detection/object-detection-level2-cv-03/1Phase/mmdetection/wandb/run-20211001_084813-2xl8hdyi
wandb: Run `wandb offline` to turn off syncing.

/opt/conda/envs/psc/lib/python3.8/site-packages/torch/nn/functional.py:3060: UserWarning: Default upsampling behavior when mode=bilinear is changed to align_corners=False since 0.4.0. Please specify align_corners=True if the old behavior is desired. See the documentation of nn.Upsample for details.
  warnings.warn("Default upsampling behavior when mode={} is changed "
/opt/conda/envs/psc/lib/python3.8/site-packages/mmdet/core/anchor/anchor_generator.py:324: UserWarning: ``grid_anchors`` would be deprecated soon. Please use ``grid_priors`` 
  warnings.warn('``grid_anchors`` would be deprecated soon. '
/opt/conda/envs/psc/lib/python3.8/site-packages/mmdet/core/anchor/anchor_generator.py:360: UserWarning: ``single_level_grid_anchors`` would be deprecated soon. Please use ``single_level_grid_priors`` 
  warnings.warn(
2021-10-01 08:48:43,174 - mmdet - INFO - Epoch [1][10/738]	lr: 9.071e-06, eta: 19:04:14, time: 2.326, data_time: 0.259, memory: 27519, loss_rpn_cls: 0.6998, loss_rpn_bbox: 0.0358, s0.loss_cls: 1.0583, s0.acc: 72.2949, s0.loss_bbox: 0.0351, s1.loss_cls: 0.3872, s1.acc: 80.3638, s1.loss_bbox: 0.0073, s2.loss_cls: 0.3475, s2.acc: 60.0757, s2.loss_bbox: 0.0049, loss: 2.5760, grad_norm: 26.2610
2021-10-01 08:49:03,146 - mmdet - INFO - Epoch [1][20/738]	lr: 1.121e-05, eta: 17:42:55, time: 1.997, data_time: 0.017, memory: 27519, loss_rpn_cls: 0.6642, loss_rpn_bbox: 0.0312, s0.loss_cls: 0.2164, s0.acc: 97.4243, s0.loss_bbox: 0.0568, s1.loss_cls: 0.0632, s1.acc: 98.7402, s1.loss_bbox: 0.0107, s2.loss_cls: 0.0358, s2.acc: 98.0688, s2.loss_bbox: 0.0086, loss: 1.0868, grad_norm: 4.1815
2021-10-01 08:49:23,331 - mmdet - INFO - Epoch [1][30/738]	lr: 1.336e-05, eta: 17:19:03, time: 2.018, data_time: 0.015, memory: 27519, loss_rpn_cls: 0.6112, loss_rpn_bbox: 0.0273, s0.loss_cls: 0.2046, s0.acc: 96.9263, s0.loss_bbox: 0.0681, s1.loss_cls: 0.0648, s1.acc: 98.3765, s1.loss_bbox: 0.0191, s2.loss_cls: 0.0237, s2.acc: 98.9233, s2.loss_bbox: 0.0051, loss: 1.0239, grad_norm: 2.9755
2021-10-01 08:49:43,540 - mmdet - INFO - Epoch [1][40/738]	lr: 1.550e-05, eta: 17:07:15, time: 2.021, data_time: 0.015, memory: 27519, loss_rpn_cls: 0.5444, loss_rpn_bbox: 0.0422, s0.loss_cls: 0.2139, s0.acc: 96.5186, s0.loss_bbox: 0.0774, s1.loss_cls: 0.0624, s1.acc: 98.2422, s1.loss_bbox: 0.0211, s2.loss_cls: 0.0222, s2.acc: 98.8721, s2.loss_bbox: 0.0040, loss: 0.9877, grad_norm: 3.6252
2021-10-01 08:50:03,941 - mmdet - INFO - Epoch [1][50/738]	lr: 1.764e-05, eta: 17:01:55, time: 2.040, data_time: 0.016, memory: 27519, loss_rpn_cls: 0.3853, loss_rpn_bbox: 0.0292, s0.loss_cls: 0.2496, s0.acc: 95.7935, s0.loss_bbox: 0.1012, s1.loss_cls: 0.0682, s1.acc: 98.0737, s1.loss_bbox: 0.0290, s2.loss_cls: 0.0219, s2.acc: 98.9478, s2.loss_bbox: 0.0042, loss: 0.8887, grad_norm: 4.8227
2021-10-01 08:50:24,289 - mmdet - INFO - Epoch [1][60/738]	lr: 1.979e-05, eta: 16:57:50, time: 2.035, data_time: 0.016, memory: 27519, loss_rpn_cls: 0.2107, loss_rpn_bbox: 0.0416, s0.loss_cls: 0.2900, s0.acc: 94.8120, s0.loss_bbox: 0.1276, s1.loss_cls: 0.0831, s1.acc: 97.6904, s1.loss_bbox: 0.0346, s2.loss_cls: 0.0282, s2.acc: 98.6768, s2.loss_bbox: 0.0058, loss: 0.8216, grad_norm: 7.4763
2021-10-01 08:50:44,164 - mmdet - INFO - Epoch [1][70/738]	lr: 2.193e-05, eta: 16:51:29, time: 1.987, data_time: 0.016, memory: 27519, loss_rpn_cls: 0.1856, loss_rpn_bbox: 0.0381, s0.loss_cls: 0.2713, s0.acc: 95.1904, s0.loss_bbox: 0.1170, s1.loss_cls: 0.0821, s1.acc: 97.6685, s1.loss_bbox: 0.0366, s2.loss_cls: 0.0251, s2.acc: 98.7378, s2.loss_bbox: 0.0064, loss: 0.7622, grad_norm: 4.8340
2021-10-01 08:51:04,363 - mmdet - INFO - Epoch [1][80/738]	lr: 2.407e-05, eta: 16:48:38, time: 2.020, data_time: 0.016, memory: 27519, loss_rpn_cls: 0.1638, loss_rpn_bbox: 0.0312, s0.loss_cls: 0.3206, s0.acc: 94.1406, s0.loss_bbox: 0.1385, s1.loss_cls: 0.0960, s1.acc: 97.0410, s1.loss_bbox: 0.0489, s2.loss_cls: 0.0288, s2.acc: 98.4595, s2.loss_bbox: 0.0082, loss: 0.8359, grad_norm: 4.9255
2021-10-01 08:51:25,132 - mmdet - INFO - Epoch [1][90/738]	lr: 2.621e-05, eta: 16:49:27, time: 2.077, data_time: 0.018, memory: 27519, loss_rpn_cls: 0.1514, loss_rpn_bbox: 0.0328, s0.loss_cls: 0.3197, s0.acc: 94.0454, s0.loss_bbox: 0.1348, s1.loss_cls: 0.1012, s1.acc: 96.7896, s1.loss_bbox: 0.0540, s2.loss_cls: 0.0292, s2.acc: 98.3618, s2.loss_bbox: 0.0102, loss: 0.8334, grad_norm: 5.4767
2021-10-01 08:51:46,014 - mmdet - INFO - Epoch [1][100/738]	lr: 2.836e-05, eta: 16:50:35, time: 2.088, data_time: 0.016, memory: 27519, loss_rpn_cls: 0.1458, loss_rpn_bbox: 0.0313, s0.loss_cls: 0.3080, s0.acc: 93.8623, s0.loss_bbox: 0.1430, s1.loss_cls: 0.0948, s1.acc: 96.7993, s1.loss_bbox: 0.0526, s2.loss_cls: 0.0282, s2.acc: 98.3594, s2.loss_bbox: 0.0090, loss: 0.8126, grad_norm: 3.5395
2021-10-01 08:52:06,239 - mmdet - INFO - Epoch [1][110/738]	lr: 3.050e-05, eta: 16:48:31, time: 2.022, data_time: 0.016, memory: 27519, loss_rpn_cls: 0.1293, loss_rpn_bbox: 0.0292, s0.loss_cls: 0.2899, s0.acc: 94.3311, s0.loss_bbox: 0.1267, s1.loss_cls: 0.0945, s1.acc: 96.8018, s1.loss_bbox: 0.0517, s2.loss_cls: 0.0296, s2.acc: 98.2715, s2.loss_bbox: 0.0108, loss: 0.7617, grad_norm: 3.6475
2021-10-01 08:52:27,209 - mmdet - INFO - Epoch [1][120/738]	lr: 3.264e-05, eta: 16:49:48, time: 2.097, data_time: 0.016, memory: 27519, loss_rpn_cls: 0.1371, loss_rpn_bbox: 0.0307, s0.loss_cls: 0.3256, s0.acc: 93.7256, s0.loss_bbox: 0.1395, s1.loss_cls: 0.1006, s1.acc: 96.5259, s1.loss_bbox: 0.0566, s2.loss_cls: 0.0311, s2.acc: 98.1470, s2.loss_bbox: 0.0122, loss: 0.8335, grad_norm: 4.1893
2021-10-01 08:52:48,050 - mmdet - INFO - Epoch [1][130/738]	lr: 3.479e-05, eta: 16:50:19, time: 2.084, data_time: 0.017, memory: 27519, loss_rpn_cls: 0.1555, loss_rpn_bbox: 0.0313, s0.loss_cls: 0.2951, s0.acc: 94.2993, s0.loss_bbox: 0.1257, s1.loss_cls: 0.0925, s1.acc: 96.8213, s1.loss_bbox: 0.0505, s2.loss_cls: 0.0288, s2.acc: 98.2153, s2.loss_bbox: 0.0115, loss: 0.7911, grad_norm: 4.0507
2021-10-01 08:53:08,778 - mmdet - INFO - Epoch [1][140/738]	lr: 3.693e-05, eta: 16:50:20, time: 2.073, data_time: 0.021, memory: 27519, loss_rpn_cls: 0.1263, loss_rpn_bbox: 0.0301, s0.loss_cls: 0.2937, s0.acc: 94.2847, s0.loss_bbox: 0.1294, s1.loss_cls: 0.0946, s1.acc: 96.7554, s1.loss_bbox: 0.0538, s2.loss_cls: 0.0295, s2.acc: 98.2666, s2.loss_bbox: 0.0106, loss: 0.7680, grad_norm: 4.3259
2021-10-01 08:53:29,568 - mmdet - INFO - Epoch [1][150/738]	lr: 3.907e-05, eta: 16:50:30, time: 2.079, data_time: 0.016, memory: 27519, loss_rpn_cls: 0.1296, loss_rpn_bbox: 0.0293, s0.loss_cls: 0.3167, s0.acc: 94.0869, s0.loss_bbox: 0.1265, s1.loss_cls: 0.1010, s1.acc: 96.4526, s1.loss_bbox: 0.0580, s2.loss_cls: 0.0317, s2.acc: 98.0200, s2.loss_bbox: 0.0142, loss: 0.8070, grad_norm: 4.0371
2021-10-01 08:53:49,180 - mmdet - INFO - Epoch [1][160/738]	lr: 4.121e-05, eta: 16:47:00, time: 1.961, data_time: 0.016, memory: 27519, loss_rpn_cls: 0.1367, loss_rpn_bbox: 0.0304, s0.loss_cls: 0.3327, s0.acc: 93.6768, s0.loss_bbox: 0.1422, s1.loss_cls: 0.1055, s1.acc: 96.4258, s1.loss_bbox: 0.0560, s2.loss_cls: 0.0346, s2.acc: 97.9102, s2.loss_bbox: 0.0137, loss: 0.8518, grad_norm: 4.6512
2021-10-01 08:54:09,792 - mmdet - INFO - Epoch [1][170/738]	lr: 4.336e-05, eta: 16:46:45, time: 2.061, data_time: 0.017, memory: 27519, loss_rpn_cls: 0.1355, loss_rpn_bbox: 0.0297, s0.loss_cls: 0.3073, s0.acc: 93.6963, s0.loss_bbox: 0.1325, s1.loss_cls: 0.1086, s1.acc: 95.9033, s1.loss_bbox: 0.0645, s2.loss_cls: 0.0369, s2.acc: 97.4634, s2.loss_bbox: 0.0183, loss: 0.8334, grad_norm: 3.2237
2021-10-01 08:54:29,672 - mmdet - INFO - Epoch [1][180/738]	lr: 4.550e-05, eta: 16:44:30, time: 1.988, data_time: 0.016, memory: 27519, loss_rpn_cls: 0.0956, loss_rpn_bbox: 0.0216, s0.loss_cls: 0.3290, s0.acc: 93.3740, s0.loss_bbox: 0.1438, s1.loss_cls: 0.1101, s1.acc: 95.9521, s1.loss_bbox: 0.0686, s2.loss_cls: 0.0347, s2.acc: 97.7148, s2.loss_bbox: 0.0181, loss: 0.8215, grad_norm: 3.2274
2021-10-01 08:54:50,695 - mmdet - INFO - Epoch [1][190/738]	lr: 4.764e-05, eta: 16:45:24, time: 2.102, data_time: 0.017, memory: 27519, loss_rpn_cls: 0.1202, loss_rpn_bbox: 0.0259, s0.loss_cls: 0.3271, s0.acc: 93.3569, s0.loss_bbox: 0.1384, s1.loss_cls: 0.1169, s1.acc: 95.6885, s1.loss_bbox: 0.0702, s2.loss_cls: 0.0377, s2.acc: 97.5098, s2.loss_bbox: 0.0189, loss: 0.8554, grad_norm: 3.9135
2021-10-01 08:55:11,091 - mmdet - INFO - Epoch [1][200/738]	lr: 4.979e-05, eta: 16:44:38, time: 2.040, data_time: 0.018, memory: 27519, loss_rpn_cls: 0.1057, loss_rpn_bbox: 0.0244, s0.loss_cls: 0.3007, s0.acc: 94.1089, s0.loss_bbox: 0.1181, s1.loss_cls: 0.1085, s1.acc: 95.8447, s1.loss_bbox: 0.0643, s2.loss_cls: 0.0356, s2.acc: 97.5195, s2.loss_bbox: 0.0182, loss: 0.7756, grad_norm: 3.1490
2021-10-01 08:55:31,161 - mmdet - INFO - Epoch [1][210/738]	lr: 5.193e-05, eta: 16:43:09, time: 2.007, data_time: 0.017, memory: 27519, loss_rpn_cls: 0.1143, loss_rpn_bbox: 0.0333, s0.loss_cls: 0.3270, s0.acc: 93.0664, s0.loss_bbox: 0.1417, s1.loss_cls: 0.1288, s1.acc: 94.7949, s1.loss_bbox: 0.0873, s2.loss_cls: 0.0440, s2.acc: 96.7285, s2.loss_bbox: 0.0270, loss: 0.9033, grad_norm: 2.9368
2021-10-01 08:55:50,825 - mmdet - INFO - Epoch [1][220/738]	lr: 5.407e-05, eta: 16:40:52, time: 1.966, data_time: 0.017, memory: 27519, loss_rpn_cls: 0.0941, loss_rpn_bbox: 0.0245, s0.loss_cls: 0.2865, s0.acc: 93.8916, s0.loss_bbox: 0.1229, s1.loss_cls: 0.1116, s1.acc: 95.6592, s1.loss_bbox: 0.0700, s2.loss_cls: 0.0362, s2.acc: 97.5244, s2.loss_bbox: 0.0192, loss: 0.7650, grad_norm: 3.1981
2021-10-01 08:56:11,798 - mmdet - INFO - Epoch [1][230/738]	lr: 5.621e-05, eta: 16:41:33, time: 2.097, data_time: 0.018, memory: 27519, loss_rpn_cls: 0.0920, loss_rpn_bbox: 0.0257, s0.loss_cls: 0.3139, s0.acc: 93.2251, s0.loss_bbox: 0.1316, s1.loss_cls: 0.1250, s1.acc: 94.6191, s1.loss_bbox: 0.0822, s2.loss_cls: 0.0468, s2.acc: 96.3745, s2.loss_bbox: 0.0289, loss: 0.8460, grad_norm: 3.3361
2021-10-01 08:56:32,864 - mmdet - INFO - Epoch [1][240/738]	lr: 5.836e-05, eta: 16:42:19, time: 2.107, data_time: 0.017, memory: 27519, loss_rpn_cls: 0.1081, loss_rpn_bbox: 0.0317, s0.loss_cls: 0.2945, s0.acc: 93.6743, s0.loss_bbox: 0.1172, s1.loss_cls: 0.1165, s1.acc: 95.1343, s1.loss_bbox: 0.0689, s2.loss_cls: 0.0448, s2.acc: 96.4380, s2.loss_bbox: 0.0256, loss: 0.8073, grad_norm: 3.3692
2021-10-01 08:56:53,209 - mmdet - INFO - Epoch [1][250/738]	lr: 6.050e-05, eta: 16:41:36, time: 2.034, data_time: 0.019, memory: 27519, loss_rpn_cls: 0.1228, loss_rpn_bbox: 0.0323, s0.loss_cls: 0.3284, s0.acc: 93.3057, s0.loss_bbox: 0.1336, s1.loss_cls: 0.1195, s1.acc: 95.4785, s1.loss_bbox: 0.0648, s2.loss_cls: 0.0447, s2.acc: 96.8848, s2.loss_bbox: 0.0226, loss: 0.8686, grad_norm: 3.2893
2021-10-01 08:57:14,305 - mmdet - INFO - Epoch [1][260/738]	lr: 6.264e-05, eta: 16:42:19, time: 2.110, data_time: 0.020, memory: 27519, loss_rpn_cls: 0.1214, loss_rpn_bbox: 0.0301, s0.loss_cls: 0.2992, s0.acc: 93.9551, s0.loss_bbox: 0.1100, s1.loss_cls: 0.1171, s1.acc: 95.4614, s1.loss_bbox: 0.0620, s2.loss_cls: 0.0464, s2.acc: 96.6724, s2.loss_bbox: 0.0246, loss: 0.8109, grad_norm: 2.9259
2021-10-01 08:57:34,629 - mmdet - INFO - Epoch [1][270/738]	lr: 6.479e-05, eta: 16:41:33, time: 2.032, data_time: 0.019, memory: 27519, loss_rpn_cls: 0.1369, loss_rpn_bbox: 0.0333, s0.loss_cls: 0.3148, s0.acc: 93.1787, s0.loss_bbox: 0.1277, s1.loss_cls: 0.1252, s1.acc: 94.7095, s1.loss_bbox: 0.0738, s2.loss_cls: 0.0500, s2.acc: 95.9521, s2.loss_bbox: 0.0304, loss: 0.8921, grad_norm: 3.4431
2021-10-01 08:57:55,526 - mmdet - INFO - Epoch [1][280/738]	lr: 6.693e-05, eta: 16:41:50, time: 2.090, data_time: 0.018, memory: 27519, loss_rpn_cls: 0.1558, loss_rpn_bbox: 0.0403, s0.loss_cls: 0.3754, s0.acc: 92.2510, s0.loss_bbox: 0.1506, s1.loss_cls: 0.1399, s1.acc: 94.5898, s1.loss_bbox: 0.0820, s2.loss_cls: 0.0499, s2.acc: 96.3843, s2.loss_bbox: 0.0268, loss: 1.0207, grad_norm: 3.1160
2021-10-01 08:58:15,726 - mmdet - INFO - Epoch [1][290/738]	lr: 6.907e-05, eta: 16:40:53, time: 2.020, data_time: 0.018, memory: 27519, loss_rpn_cls: 0.1078, loss_rpn_bbox: 0.0270, s0.loss_cls: 0.3146, s0.acc: 93.2959, s0.loss_bbox: 0.1188, s1.loss_cls: 0.1307, s1.acc: 94.3750, s1.loss_bbox: 0.0752, s2.loss_cls: 0.0528, s2.acc: 95.7446, s2.loss_bbox: 0.0317, loss: 0.8586, grad_norm: 2.6693
2021-10-01 08:58:36,946 - mmdet - INFO - Epoch [1][300/738]	lr: 7.121e-05, eta: 16:41:38, time: 2.122, data_time: 0.019, memory: 27519, loss_rpn_cls: 0.1104, loss_rpn_bbox: 0.0299, s0.loss_cls: 0.3664, s0.acc: 91.8262, s0.loss_bbox: 0.1387, s1.loss_cls: 0.1591, s1.acc: 92.5391, s1.loss_bbox: 0.1029, s2.loss_cls: 0.0673, s2.acc: 93.8867, s2.loss_bbox: 0.0452, loss: 1.0199, grad_norm: 3.7301
2021-10-01 08:58:57,017 - mmdet - INFO - Epoch [1][310/738]	lr: 7.143e-05, eta: 16:40:31, time: 2.007, data_time: 0.019, memory: 27519, loss_rpn_cls: 0.1206, loss_rpn_bbox: 0.0359, s0.loss_cls: 0.3181, s0.acc: 93.0225, s0.loss_bbox: 0.1320, s1.loss_cls: 0.1256, s1.acc: 94.4580, s1.loss_bbox: 0.0775, s2.loss_cls: 0.0499, s2.acc: 95.9912, s2.loss_bbox: 0.0286, loss: 0.8883, grad_norm: 3.0599
2021-10-01 08:59:16,985 - mmdet - INFO - Epoch [1][320/738]	lr: 7.143e-05, eta: 16:39:17, time: 1.997, data_time: 0.019, memory: 27519, loss_rpn_cls: 0.1040, loss_rpn_bbox: 0.0279, s0.loss_cls: 0.3306, s0.acc: 92.8955, s0.loss_bbox: 0.1280, s1.loss_cls: 0.1299, s1.acc: 94.3188, s1.loss_bbox: 0.0758, s2.loss_cls: 0.0524, s2.acc: 95.6763, s2.loss_bbox: 0.0332, loss: 0.8819, grad_norm: 3.3942
2021-10-01 08:59:36,835 - mmdet - INFO - Epoch [1][330/738]	lr: 7.143e-05, eta: 16:37:56, time: 1.985, data_time: 0.017, memory: 27519, loss_rpn_cls: 0.1017, loss_rpn_bbox: 0.0240, s0.loss_cls: 0.3101, s0.acc: 93.3301, s0.loss_bbox: 0.1252, s1.loss_cls: 0.1237, s1.acc: 94.7852, s1.loss_bbox: 0.0702, s2.loss_cls: 0.0501, s2.acc: 96.1255, s2.loss_bbox: 0.0301, loss: 0.8351, grad_norm: 2.5649
2021-10-01 08:59:57,911 - mmdet - INFO - Epoch [1][340/738]	lr: 7.143e-05, eta: 16:38:24, time: 2.108, data_time: 0.022, memory: 27519, loss_rpn_cls: 0.0908, loss_rpn_bbox: 0.0243, s0.loss_cls: 0.2788, s0.acc: 94.0820, s0.loss_bbox: 0.1124, s1.loss_cls: 0.1103, s1.acc: 95.3784, s1.loss_bbox: 0.0649, s2.loss_cls: 0.0437, s2.acc: 96.4502, s2.loss_bbox: 0.0264, loss: 0.7515, grad_norm: 2.6954
2021-10-01 09:00:18,352 - mmdet - INFO - Epoch [1][350/738]	lr: 7.143e-05, eta: 16:37:56, time: 2.044, data_time: 0.019, memory: 27519, loss_rpn_cls: 0.1143, loss_rpn_bbox: 0.0285, s0.loss_cls: 0.3198, s0.acc: 92.6929, s0.loss_bbox: 0.1334, s1.loss_cls: 0.1441, s1.acc: 93.3472, s1.loss_bbox: 0.0921, s2.loss_cls: 0.0603, s2.acc: 94.6313, s2.loss_bbox: 0.0405, loss: 0.9330, grad_norm: 2.9404
2021-10-01 09:00:39,297 - mmdet - INFO - Epoch [1][360/738]	lr: 7.143e-05, eta: 16:38:09, time: 2.095, data_time: 0.053, memory: 27519, loss_rpn_cls: 0.1002, loss_rpn_bbox: 0.0255, s0.loss_cls: 0.3251, s0.acc: 92.6172, s0.loss_bbox: 0.1310, s1.loss_cls: 0.1350, s1.acc: 93.9722, s1.loss_bbox: 0.0798, s2.loss_cls: 0.0557, s2.acc: 95.4077, s2.loss_bbox: 0.0334, loss: 0.8857, grad_norm: 2.7995
2021-10-01 09:01:00,015 - mmdet - INFO - Epoch [1][370/738]	lr: 7.143e-05, eta: 16:38:03, time: 2.072, data_time: 0.017, memory: 27519, loss_rpn_cls: 0.0782, loss_rpn_bbox: 0.0267, s0.loss_cls: 0.3025, s0.acc: 92.8760, s0.loss_bbox: 0.1227, s1.loss_cls: 0.1344, s1.acc: 93.4888, s1.loss_bbox: 0.0829, s2.loss_cls: 0.0581, s2.acc: 94.5630, s2.loss_bbox: 0.0380, loss: 0.8435, grad_norm: 2.6399
2021-10-01 09:01:20,548 - mmdet - INFO - Epoch [1][380/738]	lr: 7.143e-05, eta: 16:37:41, time: 2.053, data_time: 0.018, memory: 27519, loss_rpn_cls: 0.0747, loss_rpn_bbox: 0.0197, s0.loss_cls: 0.2939, s0.acc: 93.2568, s0.loss_bbox: 0.1177, s1.loss_cls: 0.1245, s1.acc: 94.1333, s1.loss_bbox: 0.0784, s2.loss_cls: 0.0490, s2.acc: 95.4810, s2.loss_bbox: 0.0325, loss: 0.7905, grad_norm: 2.8133
2021-10-01 09:01:40,573 - mmdet - INFO - Epoch [1][390/738]	lr: 7.143e-05, eta: 16:36:42, time: 2.003, data_time: 0.037, memory: 27519, loss_rpn_cls: 0.1086, loss_rpn_bbox: 0.0265, s0.loss_cls: 0.2940, s0.acc: 93.5034, s0.loss_bbox: 0.1197, s1.loss_cls: 0.1180, s1.acc: 94.8584, s1.loss_bbox: 0.0704, s2.loss_cls: 0.0459, s2.acc: 96.2891, s2.loss_bbox: 0.0232, loss: 0.8063, grad_norm: 2.1749
2021-10-01 09:01:59,905 - mmdet - INFO - Epoch [1][400/738]	lr: 7.143e-05, eta: 16:34:54, time: 1.933, data_time: 0.017, memory: 27519, loss_rpn_cls: 0.0886, loss_rpn_bbox: 0.0244, s0.loss_cls: 0.3407, s0.acc: 92.2021, s0.loss_bbox: 0.1382, s1.loss_cls: 0.1382, s1.acc: 93.5767, s1.loss_bbox: 0.0855, s2.loss_cls: 0.0558, s2.acc: 94.7900, s2.loss_bbox: 0.0354, loss: 0.9067, grad_norm: 2.8432
2021-10-01 09:02:20,162 - mmdet - INFO - Epoch [1][410/738]	lr: 7.143e-05, eta: 16:34:17, time: 2.026, data_time: 0.017, memory: 27519, loss_rpn_cls: 0.1173, loss_rpn_bbox: 0.0358, s0.loss_cls: 0.3668, s0.acc: 91.6260, s0.loss_bbox: 0.1550, s1.loss_cls: 0.1462, s1.acc: 93.2544, s1.loss_bbox: 0.0894, s2.loss_cls: 0.0598, s2.acc: 94.6240, s2.loss_bbox: 0.0363, loss: 1.0067, grad_norm: 2.8776
2021-10-01 09:02:41,118 - mmdet - INFO - Epoch [1][420/738]	lr: 7.143e-05, eta: 16:34:28, time: 2.096, data_time: 0.018, memory: 27519, loss_rpn_cls: 0.1101, loss_rpn_bbox: 0.0315, s0.loss_cls: 0.3439, s0.acc: 92.7271, s0.loss_bbox: 0.1336, s1.loss_cls: 0.1322, s1.acc: 94.4507, s1.loss_bbox: 0.0753, s2.loss_cls: 0.0526, s2.acc: 95.8447, s2.loss_bbox: 0.0296, loss: 0.9087, grad_norm: 2.8152
2021-10-01 09:03:00,078 - mmdet - INFO - Epoch [1][430/738]	lr: 7.143e-05, eta: 16:32:23, time: 1.896, data_time: 0.017, memory: 27519, loss_rpn_cls: 0.1077, loss_rpn_bbox: 0.0285, s0.loss_cls: 0.3350, s0.acc: 92.7637, s0.loss_bbox: 0.1301, s1.loss_cls: 0.1333, s1.acc: 94.2896, s1.loss_bbox: 0.0771, s2.loss_cls: 0.0531, s2.acc: 95.6958, s2.loss_bbox: 0.0285, loss: 0.8933, grad_norm: 2.7291
2021-10-01 09:03:20,538 - mmdet - INFO - Epoch [1][440/738]	lr: 7.143e-05, eta: 16:32:02, time: 2.046, data_time: 0.017, memory: 27519, loss_rpn_cls: 0.0937, loss_rpn_bbox: 0.0224, s0.loss_cls: 0.3154, s0.acc: 93.0249, s0.loss_bbox: 0.1149, s1.loss_cls: 0.1372, s1.acc: 93.4326, s1.loss_bbox: 0.0805, s2.loss_cls: 0.0574, s2.acc: 94.3896, s2.loss_bbox: 0.0368, loss: 0.8583, grad_norm: 3.1255
2021-10-01 09:03:40,556 - mmdet - INFO - Epoch [1][450/738]	lr: 7.143e-05, eta: 16:31:13, time: 2.002, data_time: 0.018, memory: 27519, loss_rpn_cls: 0.0881, loss_rpn_bbox: 0.0181, s0.loss_cls: 0.3025, s0.acc: 92.5806, s0.loss_bbox: 0.1106, s1.loss_cls: 0.1420, s1.acc: 92.6245, s1.loss_bbox: 0.0841, s2.loss_cls: 0.0659, s2.acc: 92.8076, s2.loss_bbox: 0.0423, loss: 0.8538, grad_norm: 2.7240
2021-10-01 09:04:01,261 - mmdet - INFO - Epoch [1][460/738]	lr: 7.143e-05, eta: 16:31:08, time: 2.070, data_time: 0.018, memory: 27519, loss_rpn_cls: 0.0780, loss_rpn_bbox: 0.0234, s0.loss_cls: 0.3408, s0.acc: 92.1436, s0.loss_bbox: 0.1362, s1.loss_cls: 0.1523, s1.acc: 92.8256, s1.loss_bbox: 0.0908, s2.loss_cls: 0.0639, s2.acc: 93.8687, s2.loss_bbox: 0.0409, loss: 0.9263, grad_norm: 2.8874
2021-10-01 09:04:22,225 - mmdet - INFO - Epoch [1][470/738]	lr: 7.143e-05, eta: 16:31:18, time: 2.096, data_time: 0.019, memory: 27519, loss_rpn_cls: 0.0989, loss_rpn_bbox: 0.0271, s0.loss_cls: 0.3424, s0.acc: 91.9043, s0.loss_bbox: 0.1305, s1.loss_cls: 0.1550, s1.acc: 92.4229, s1.loss_bbox: 0.0899, s2.loss_cls: 0.0678, s2.acc: 93.2504, s2.loss_bbox: 0.0424, loss: 0.9539, grad_norm: 3.2720
2021-10-01 09:04:42,569 - mmdet - INFO - Epoch [1][480/738]	lr: 7.143e-05, eta: 16:30:50, time: 2.034, data_time: 0.018, memory: 27519, loss_rpn_cls: 0.1174, loss_rpn_bbox: 0.0397, s0.loss_cls: 0.3888, s0.acc: 90.7886, s0.loss_bbox: 0.1553, s1.loss_cls: 0.1717, s1.acc: 91.8115, s1.loss_bbox: 0.1007, s2.loss_cls: 0.0722, s2.acc: 93.3447, s2.loss_bbox: 0.0426, loss: 1.0885, grad_norm: 3.0657
2021-10-01 09:05:02,963 - mmdet - INFO - Epoch [1][490/738]	lr: 7.143e-05, eta: 16:30:25, time: 2.039, data_time: 0.018, memory: 27519, loss_rpn_cls: 0.1260, loss_rpn_bbox: 0.0314, s0.loss_cls: 0.3725, s0.acc: 91.2524, s0.loss_bbox: 0.1501, s1.loss_cls: 0.1576, s1.acc: 92.0730, s1.loss_bbox: 0.1051, s2.loss_cls: 0.0670, s2.acc: 93.1819, s2.loss_bbox: 0.0515, loss: 1.0611, grad_norm: 3.6583
2021-10-01 09:05:23,073 - mmdet - INFO - Epoch [1][500/738]	lr: 7.143e-05, eta: 16:29:43, time: 2.011, data_time: 0.018, memory: 27519, loss_rpn_cls: 0.1192, loss_rpn_bbox: 0.0327, s0.loss_cls: 0.3540, s0.acc: 91.8457, s0.loss_bbox: 0.1443, s1.loss_cls: 0.1485, s1.acc: 93.0908, s1.loss_bbox: 0.0887, s2.loss_cls: 0.0604, s2.acc: 94.3677, s2.loss_bbox: 0.0380, loss: 0.9859, grad_norm: 3.3611
2021-10-01 09:05:43,777 - mmdet - INFO - Epoch [1][510/738]	lr: 7.143e-05, eta: 16:29:37, time: 2.070, data_time: 0.018, memory: 27519, loss_rpn_cls: 0.1065, loss_rpn_bbox: 0.0272, s0.loss_cls: 0.3465, s0.acc: 91.9067, s0.loss_bbox: 0.1237, s1.loss_cls: 0.1656, s1.acc: 91.6504, s1.loss_bbox: 0.0981, s2.loss_cls: 0.0708, s2.acc: 93.0139, s2.loss_bbox: 0.0469, loss: 0.9852, grad_norm: 3.3363
2021-10-01 09:06:03,942 - mmdet - INFO - Epoch [1][520/738]	lr: 7.143e-05, eta: 16:28:59, time: 2.017, data_time: 0.018, memory: 27519, loss_rpn_cls: 0.1128, loss_rpn_bbox: 0.0301, s0.loss_cls: 0.3603, s0.acc: 91.4307, s0.loss_bbox: 0.1297, s1.loss_cls: 0.1674, s1.acc: 91.5771, s1.loss_bbox: 0.0930, s2.loss_cls: 0.0734, s2.acc: 92.6001, s2.loss_bbox: 0.0459, loss: 1.0126, grad_norm: 3.4442
2021-10-01 09:06:24,441 - mmdet - INFO - Epoch [1][530/738]	lr: 7.143e-05, eta: 16:28:41, time: 2.050, data_time: 0.018, memory: 27519, loss_rpn_cls: 0.0951, loss_rpn_bbox: 0.0283, s0.loss_cls: 0.3235, s0.acc: 92.2778, s0.loss_bbox: 0.1329, s1.loss_cls: 0.1485, s1.acc: 92.6353, s1.loss_bbox: 0.1037, s2.loss_cls: 0.0638, s2.acc: 93.8102, s2.loss_bbox: 0.0464, loss: 0.9422, grad_norm: 2.9090
2021-10-01 09:06:44,925 - mmdet - INFO - Epoch [1][540/738]	lr: 7.143e-05, eta: 16:28:21, time: 2.048, data_time: 0.020, memory: 27519, loss_rpn_cls: 0.0978, loss_rpn_bbox: 0.0292, s0.loss_cls: 0.3085, s0.acc: 93.1079, s0.loss_bbox: 0.1086, s1.loss_cls: 0.1412, s1.acc: 93.3252, s1.loss_bbox: 0.0788, s2.loss_cls: 0.0610, s2.acc: 94.3628, s2.loss_bbox: 0.0366, loss: 0.8617, grad_norm: 2.8684
2021-10-01 09:07:06,454 - mmdet - INFO - Epoch [1][550/738]	lr: 7.143e-05, eta: 16:28:57, time: 2.153, data_time: 0.019, memory: 27519, loss_rpn_cls: 0.0677, loss_rpn_bbox: 0.0197, s0.loss_cls: 0.3073, s0.acc: 93.0151, s0.loss_bbox: 0.1150, s1.loss_cls: 0.1344, s1.acc: 93.3856, s1.loss_bbox: 0.0785, s2.loss_cls: 0.0583, s2.acc: 94.3585, s2.loss_bbox: 0.0348, loss: 0.8157, grad_norm: 2.8853
2021-10-01 09:07:27,791 - mmdet - INFO - Epoch [1][560/738]	lr: 7.143e-05, eta: 16:29:21, time: 2.134, data_time: 0.020, memory: 27519, loss_rpn_cls: 0.0904, loss_rpn_bbox: 0.0268, s0.loss_cls: 0.3266, s0.acc: 92.4585, s0.loss_bbox: 0.1268, s1.loss_cls: 0.1443, s1.acc: 93.0609, s1.loss_bbox: 0.0895, s2.loss_cls: 0.0597, s2.acc: 94.3457, s2.loss_bbox: 0.0389, loss: 0.9030, grad_norm: 3.0165
2021-10-01 09:07:49,320 - mmdet - INFO - Epoch [1][570/738]	lr: 7.143e-05, eta: 16:29:53, time: 2.153, data_time: 0.020, memory: 27519, loss_rpn_cls: 0.0892, loss_rpn_bbox: 0.0299, s0.loss_cls: 0.3227, s0.acc: 92.3633, s0.loss_bbox: 0.1171, s1.loss_cls: 0.1503, s1.acc: 92.5293, s1.loss_bbox: 0.0889, s2.loss_cls: 0.0654, s2.acc: 93.4692, s2.loss_bbox: 0.0400, loss: 0.9035, grad_norm: 3.0352
2021-10-01 09:08:09,979 - mmdet - INFO - Epoch [1][580/738]	lr: 7.143e-05, eta: 16:29:39, time: 2.066, data_time: 0.018, memory: 27519, loss_rpn_cls: 0.1069, loss_rpn_bbox: 0.0330, s0.loss_cls: 0.3497, s0.acc: 91.7700, s0.loss_bbox: 0.1379, s1.loss_cls: 0.1527, s1.acc: 92.6829, s1.loss_bbox: 0.0919, s2.loss_cls: 0.0639, s2.acc: 93.8573, s2.loss_bbox: 0.0410, loss: 0.9770, grad_norm: 3.1410
2021-10-01 09:08:30,243 - mmdet - INFO - Epoch [1][590/738]	lr: 7.143e-05, eta: 16:29:06, time: 2.026, data_time: 0.018, memory: 27519, loss_rpn_cls: 0.1166, loss_rpn_bbox: 0.0340, s0.loss_cls: 0.3619, s0.acc: 91.3770, s0.loss_bbox: 0.1403, s1.loss_cls: 0.1553, s1.acc: 92.5089, s1.loss_bbox: 0.0917, s2.loss_cls: 0.0666, s2.acc: 93.3294, s2.loss_bbox: 0.0409, loss: 1.0073, grad_norm: 2.9340
2021-10-01 09:08:50,109 - mmdet - INFO - Epoch [1][600/738]	lr: 7.143e-05, eta: 16:28:14, time: 1.986, data_time: 0.019, memory: 27519, loss_rpn_cls: 0.0990, loss_rpn_bbox: 0.0284, s0.loss_cls: 0.3704, s0.acc: 90.7861, s0.loss_bbox: 0.1512, s1.loss_cls: 0.1597, s1.acc: 91.7698, s1.loss_bbox: 0.1007, s2.loss_cls: 0.0667, s2.acc: 93.1277, s2.loss_bbox: 0.0441, loss: 1.0202, grad_norm: 2.5970
2021-10-01 09:09:08,990 - mmdet - INFO - Epoch [1][610/738]	lr: 7.143e-05, eta: 16:26:37, time: 1.888, data_time: 0.016, memory: 27519, loss_rpn_cls: 0.0662, loss_rpn_bbox: 0.0211, s0.loss_cls: 0.2916, s0.acc: 93.1323, s0.loss_bbox: 0.1197, s1.loss_cls: 0.1207, s1.acc: 94.1528, s1.loss_bbox: 0.0689, s2.loss_cls: 0.0484, s2.acc: 95.2721, s2.loss_bbox: 0.0259, loss: 0.7625, grad_norm: 2.4905
2021-10-01 09:09:30,083 - mmdet - INFO - Epoch [1][620/738]	lr: 7.143e-05, eta: 16:26:45, time: 2.109, data_time: 0.019, memory: 27519, loss_rpn_cls: 0.0878, loss_rpn_bbox: 0.0246, s0.loss_cls: 0.3422, s0.acc: 91.9507, s0.loss_bbox: 0.1343, s1.loss_cls: 0.1505, s1.acc: 92.5024, s1.loss_bbox: 0.0901, s2.loss_cls: 0.0633, s2.acc: 93.6157, s2.loss_bbox: 0.0380, loss: 0.9308, grad_norm: 3.1036
2021-10-01 09:09:50,575 - mmdet - INFO - Epoch [1][630/738]	lr: 7.143e-05, eta: 16:26:25, time: 2.049, data_time: 0.020, memory: 27519, loss_rpn_cls: 0.0949, loss_rpn_bbox: 0.0318, s0.loss_cls: 0.3603, s0.acc: 91.4209, s0.loss_bbox: 0.1535, s1.loss_cls: 0.1500, s1.acc: 92.4658, s1.loss_bbox: 0.0963, s2.loss_cls: 0.0625, s2.acc: 93.9404, s2.loss_bbox: 0.0410, loss: 0.9902, grad_norm: 3.0009
2021-10-01 09:10:11,368 - mmdet - INFO - Epoch [1][640/738]	lr: 7.143e-05, eta: 16:26:18, time: 2.079, data_time: 0.019, memory: 27519, loss_rpn_cls: 0.0898, loss_rpn_bbox: 0.0320, s0.loss_cls: 0.3590, s0.acc: 91.2354, s0.loss_bbox: 0.1385, s1.loss_cls: 0.1573, s1.acc: 91.8213, s1.loss_bbox: 0.0951, s2.loss_cls: 0.0702, s2.acc: 92.7930, s2.loss_bbox: 0.0413, loss: 0.9834, grad_norm: 3.0276
2021-10-01 09:10:32,097 - mmdet - INFO - Epoch [1][650/738]	lr: 7.143e-05, eta: 16:26:08, time: 2.073, data_time: 0.018, memory: 27519, loss_rpn_cls: 0.0775, loss_rpn_bbox: 0.0239, s0.loss_cls: 0.3168, s0.acc: 92.5391, s0.loss_bbox: 0.1136, s1.loss_cls: 0.1450, s1.acc: 92.7085, s1.loss_bbox: 0.0778, s2.loss_cls: 0.0630, s2.acc: 93.3970, s2.loss_bbox: 0.0340, loss: 0.8515, grad_norm: 3.1101
2021-10-01 09:10:53,002 - mmdet - INFO - Epoch [1][660/738]	lr: 7.143e-05, eta: 16:26:06, time: 2.091, data_time: 0.018, memory: 27519, loss_rpn_cls: 0.1207, loss_rpn_bbox: 0.0349, s0.loss_cls: 0.3684, s0.acc: 91.1792, s0.loss_bbox: 0.1485, s1.loss_cls: 0.1589, s1.acc: 91.9842, s1.loss_bbox: 0.0966, s2.loss_cls: 0.0687, s2.acc: 93.1209, s2.loss_bbox: 0.0433, loss: 1.0400, grad_norm: 3.2684
2021-10-01 09:11:13,726 - mmdet - INFO - Epoch [1][670/738]	lr: 7.143e-05, eta: 16:25:55, time: 2.072, data_time: 0.021, memory: 27519, loss_rpn_cls: 0.1185, loss_rpn_bbox: 0.0327, s0.loss_cls: 0.3538, s0.acc: 91.5723, s0.loss_bbox: 0.1429, s1.loss_cls: 0.1451, s1.acc: 92.8101, s1.loss_bbox: 0.0847, s2.loss_cls: 0.0606, s2.acc: 94.0259, s2.loss_bbox: 0.0365, loss: 0.9747, grad_norm: 2.7057
2021-10-01 09:11:34,407 - mmdet - INFO - Epoch [1][680/738]	lr: 7.143e-05, eta: 16:25:42, time: 2.068, data_time: 0.020, memory: 27519, loss_rpn_cls: 0.0790, loss_rpn_bbox: 0.0292, s0.loss_cls: 0.2984, s0.acc: 92.9517, s0.loss_bbox: 0.1014, s1.loss_cls: 0.1375, s1.acc: 93.1201, s1.loss_bbox: 0.0765, s2.loss_cls: 0.0591, s2.acc: 93.8208, s2.loss_bbox: 0.0341, loss: 0.8153, grad_norm: 2.9863
2021-10-01 09:11:55,319 - mmdet - INFO - Epoch [1][690/738]	lr: 7.143e-05, eta: 16:25:38, time: 2.091, data_time: 0.018, memory: 27519, loss_rpn_cls: 0.0859, loss_rpn_bbox: 0.0258, s0.loss_cls: 0.3373, s0.acc: 91.8091, s0.loss_bbox: 0.1397, s1.loss_cls: 0.1378, s1.acc: 92.9443, s1.loss_bbox: 0.0818, s2.loss_cls: 0.0570, s2.acc: 94.2674, s2.loss_bbox: 0.0322, loss: 0.8974, grad_norm: 2.5690
2021-10-01 09:12:15,596 - mmdet - INFO - Epoch [1][700/738]	lr: 7.143e-05, eta: 16:25:08, time: 2.028, data_time: 0.018, memory: 27519, loss_rpn_cls: 0.0874, loss_rpn_bbox: 0.0255, s0.loss_cls: 0.3272, s0.acc: 92.1533, s0.loss_bbox: 0.1289, s1.loss_cls: 0.1412, s1.acc: 93.0371, s1.loss_bbox: 0.0856, s2.loss_cls: 0.0586, s2.acc: 94.1235, s2.loss_bbox: 0.0351, loss: 0.8894, grad_norm: 2.7763
2021-10-01 09:12:35,636 - mmdet - INFO - Epoch [1][710/738]	lr: 7.143e-05, eta: 16:24:29, time: 2.004, data_time: 0.019, memory: 27519, loss_rpn_cls: 0.0874, loss_rpn_bbox: 0.0224, s0.loss_cls: 0.2984, s0.acc: 92.8394, s0.loss_bbox: 0.1019, s1.loss_cls: 0.1397, s1.acc: 92.6827, s1.loss_bbox: 0.0664, s2.loss_cls: 0.0612, s2.acc: 93.4082, s2.loss_bbox: 0.0298, loss: 0.8073, grad_norm: 2.7679
2021-10-01 09:12:56,224 - mmdet - INFO - Epoch [1][720/738]	lr: 7.143e-05, eta: 16:24:11, time: 2.059, data_time: 0.018, memory: 27519, loss_rpn_cls: 0.1065, loss_rpn_bbox: 0.0313, s0.loss_cls: 0.3511, s0.acc: 91.5552, s0.loss_bbox: 0.1397, s1.loss_cls: 0.1467, s1.acc: 92.9175, s1.loss_bbox: 0.0846, s2.loss_cls: 0.0586, s2.acc: 94.2700, s2.loss_bbox: 0.0327, loss: 0.9511, grad_norm: 2.5374
2021-10-01 09:13:17,184 - mmdet - INFO - Epoch [1][730/738]	lr: 7.143e-05, eta: 16:24:09, time: 2.096, data_time: 0.020, memory: 27519, loss_rpn_cls: 0.0726, loss_rpn_bbox: 0.0228, s0.loss_cls: 0.3040, s0.acc: 92.7441, s0.loss_bbox: 0.1268, s1.loss_cls: 0.1342, s1.acc: 93.0127, s1.loss_bbox: 0.0844, s2.loss_cls: 0.0580, s2.acc: 94.0234, s2.loss_bbox: 0.0341, loss: 0.8369, grad_norm: 3.0070
2021-10-01 09:13:33,029 - mmdet - INFO - Saving checkpoint at 1 epochs
[                                                  ] 0/977, elapsed: 0s, ETA:[  ] 1/977, 0.5 task/s, elapsed: 2s, ETA:  2055s[  ] 2/977, 0.5 task/s, elapsed: 4s, ETA:  1808s[  ] 3/977, 0.6 task/s, elapsed: 5s, ETA:  1710s[  ] 4/977, 0.6 task/s, elapsed: 7s, ETA:  1650s[  ] 5/977, 0.6 task/s, elapsed: 8s, ETA:  1613s[  ] 6/977, 0.6 task/s, elapsed: 10s, ETA:  1590s[  ] 7/977, 0.6 task/s, elapsed: 11s, ETA:  1571s[  ] 8/977, 0.6 task/s, elapsed: 13s, ETA:  1562s[  ] 9/977, 0.6 task/s, elapsed: 15s, ETA:  1562s[  ] 10/977, 0.6 task/s, elapsed: 16s, ETA:  1561s[  ] 11/977, 0.6 task/s, elapsed: 18s, ETA:  1553s[  ] 12/977, 0.6 task/s, elapsed: 19s, ETA:  1549s[  ] 13/977, 0.6 task/s, elapsed: 21s, ETA:  1557s[  ] 14/977, 0.6 task/s, elapsed: 23s, ETA:  1559s[  ] 15/977, 0.6 task/s, elapsed: 24s, ETA:  1560s[  ] 16/977, 0.6 task/s, elapsed: 26s, ETA:  1564s[  ] 17/977, 0.6 task/s, elapsed: 28s, ETA:  1557s[  ] 18/977, 0.6 task/s, elapsed: 29s, ETA:  1561s[  ] 19/977, 0.6 task/s, elapsed: 31s, ETA:  1560s[  ] 20/977, 0.6 task/s, elapsed: 33s, ETA:  1563s[  ] 21/977, 0.6 task/s, elapsed: 34s, ETA:  1564s[  ] 22/977, 0.6 task/s, elapsed: 36s, ETA:  1568s[  ] 23/977, 0.6 task/s, elapsed: 38s, ETA:  1562s[  ] 24/977, 0.6 task/s, elapsed: 39s, ETA:  1556s[  ] 25/977, 0.6 task/s, elapsed: 41s, ETA:  1549s[  ] 26/977, 0.6 task/s, elapsed: 42s, ETA:  1544s[  ] 27/977, 0.6 task/s, elapsed: 44s, ETA:  1538s[  ] 28/977, 0.6 task/s, elapsed: 45s, ETA:  1533s[  ] 29/977, 0.6 task/s, elapsed: 47s, ETA:  1528s[  ] 30/977, 0.6 task/s, elapsed: 48s, ETA:  1525s[  ] 31/977, 0.6 task/s, elapsed: 50s, ETA:  1521s[  ] 32/977, 0.6 task/s, elapsed: 51s, ETA:  1517s[  ] 33/977, 0.6 task/s, elapsed: 53s, ETA:  1514s[  ] 34/977, 0.6 task/s, elapsed: 54s, ETA:  1510s[  ] 35/977, 0.6 task/s, elapsed: 56s, ETA:  1506s[  ] 36/977, 0.6 task/s, elapsed: 57s, ETA:  1502s[  ] 37/977, 0.6 task/s, elapsed: 59s, ETA:  1499s[  ] 38/977, 0.6 task/s, elapsed: 61s, ETA:  1496s[  ] 39/977, 0.6 task/s, elapsed: 62s, ETA:  1492s[  ] 40/977, 0.6 task/s, elapsed: 64s, ETA:  1489s[  ] 41/977, 0.6 task/s, elapsed: 65s, ETA:  1486s[  ] 42/977, 0.6 task/s, elapsed: 67s, ETA:  1482s[  ] 43/977, 0.6 task/s, elapsed: 68s, ETA:  1479s[  ] 44/977, 0.6 task/s, elapsed: 70s, ETA:  1476s[  ] 45/977, 0.6 task/s, elapsed: 71s, ETA:  1473s[  ] 46/977, 0.6 task/s, elapsed: 73s, ETA:  1470s[  ] 47/977, 0.6 task/s, elapsed: 74s, ETA:  1468s[  ] 48/977, 0.6 task/s, elapsed: 76s, ETA:  1468s[  ] 49/977, 0.6 task/s, elapsed: 77s, ETA:  1465s[  ] 50/977, 0.6 task/s, elapsed: 79s, ETA:  1462s[  ] 51/977, 0.6 task/s, elapsed: 80s, ETA:  1461s[  ] 52/977, 0.6 task/s, elapsed: 82s, ETA:  1460s[  ] 53/977, 0.6 task/s, elapsed: 84s, ETA:  1459s[  ] 54/977, 0.6 task/s, elapsed: 85s, ETA:  1457s[  ] 55/977, 0.6 task/s, elapsed: 87s, ETA:  1454s[  ] 56/977, 0.6 task/s, elapsed: 88s, ETA:  1452s[  ] 57/977, 0.6 task/s, elapsed: 90s, ETA:  1449s[  ] 58/977, 0.6 task/s, elapsed: 91s, ETA:  1447s[  ] 59/977, 0.6 task/s, elapsed: 93s, ETA:  1445s[  ] 60/977, 0.6 task/s, elapsed: 95s, ETA:  1444s[  ] 61/977, 0.6 task/s, elapsed: 96s, ETA:  1442s[  ] 62/977, 0.6 task/s, elapsed: 98s, ETA:  1440s[  ] 63/977, 0.6 task/s, elapsed: 99s, ETA:  1438s[  ] 64/977, 0.6 task/s, elapsed: 101s, ETA:  1435s[  ] 65/977, 0.6 task/s, elapsed: 102s, ETA:  1433s[  ] 66/977, 0.6 task/s, elapsed: 104s, ETA:  1431s[  ] 67/977, 0.6 task/s, elapsed: 105s, ETA:  1428s[  ] 68/977, 0.6 task/s, elapsed: 107s, ETA:  1427s[  ] 69/977, 0.6 task/s, elapsed: 108s, ETA:  1426s[  ] 70/977, 0.6 task/s, elapsed: 110s, ETA:  1423s[  ] 71/977, 0.6 task/s, elapsed: 111s, ETA:  1421s[  ] 72/977, 0.6 task/s, elapsed: 113s, ETA:  1419s[  ] 73/977, 0.6 task/s, elapsed: 114s, ETA:  1417s[  ] 74/977, 0.6 task/s, elapsed: 116s, ETA:  1415s[  ] 75/977, 0.6 task/s, elapsed: 117s, ETA:  1413s[  ] 76/977, 0.6 task/s, elapsed: 119s, ETA:  1411s[  ] 77/977, 0.6 task/s, elapsed: 120s, ETA:  1408s[  ] 78/977, 0.6 task/s, elapsed: 122s, ETA:  1406s[  ] 79/977, 0.6 task/s, elapsed: 124s, ETA:  1404s[  ] 80/977, 0.6 task/s, elapsed: 125s, ETA:  1403s[  ] 81/977, 0.6 task/s, elapsed: 127s, ETA:  1401s[  ] 82/977, 0.6 task/s, elapsed: 128s, ETA:  1399s[  ] 83/977, 0.6 task/s, elapsed: 130s, ETA:  1397s[  ] 84/977, 0.6 task/s, elapsed: 131s, ETA:  1395s[  ] 85/977, 0.6 task/s, elapsed: 133s, ETA:  1393s[  ] 86/977, 0.6 task/s, elapsed: 134s, ETA:  1391s[  ] 87/977, 0.6 task/s, elapsed: 136s, ETA:  1389s[  ] 88/977, 0.6 task/s, elapsed: 137s, ETA:  1387s[  ] 89/977, 0.6 task/s, elapsed: 139s, ETA:  1385s[  ] 90/977, 0.6 task/s, elapsed: 140s, ETA:  1383s[  ] 91/977, 0.6 task/s, elapsed: 142s, ETA:  1382s[  ] 92/977, 0.6 task/s, elapsed: 143s, ETA:  1380s[  ] 93/977, 0.6 task/s, elapsed: 145s, ETA:  1378s[  ] 94/977, 0.6 task/s, elapsed: 146s, ETA:  1376s[  ] 95/977, 0.6 task/s, elapsed: 148s, ETA:  1374s[  ] 96/977, 0.6 task/s, elapsed: 150s, ETA:  1372s[  ] 97/977, 0.6 task/s, elapsed: 151s, ETA:  1370s[  ] 98/977, 0.6 task/s, elapsed: 153s, ETA:  1369s[  ] 99/977, 0.6 task/s, elapsed: 154s, ETA:  1367s[  ] 100/977, 0.6 task/s, elapsed: 156s, ETA:  1365s[  ] 101/977, 0.6 task/s, elapsed: 157s, ETA:  1363s[  ] 102/977, 0.6 task/s, elapsed: 159s, ETA:  1361s[  ] 103/977, 0.6 task/s, elapsed: 160s, ETA:  1359s[  ] 104/977, 0.6 task/s, elapsed: 162s, ETA:  1357s[  ] 105/977, 0.6 task/s, elapsed: 163s, ETA:  1355s[  ] 106/977, 0.6 task/s, elapsed: 165s, ETA:  1353s[  ] 107/977, 0.6 task/s, elapsed: 166s, ETA:  1351s[  ] 108/977, 0.6 task/s, elapsed: 168s, ETA:  1350s[  ] 109/977, 0.6 task/s, elapsed: 169s, ETA:  1348s[  ] 110/977, 0.6 task/s, elapsed: 171s, ETA:  1346s[  ] 111/977, 0.6 task/s, elapsed: 172s, ETA:  1345s[  ] 112/977, 0.6 task/s, elapsed: 174s, ETA:  1344s[  ] 113/977, 0.6 task/s, elapsed: 176s, ETA:  1342s[  ] 114/977, 0.6 task/s, elapsed: 177s, ETA:  1341s[  ] 115/977, 0.6 task/s, elapsed: 179s, ETA:  1339s[  ] 116/977, 0.6 task/s, elapsed: 180s, ETA:  1337s[  ] 117/977, 0.6 task/s, elapsed: 182s, ETA:  1336s[  ] 118/977, 0.6 task/s, elapsed: 183s, ETA:  1335s[  ] 119/977, 0.6 task/s, elapsed: 185s, ETA:  1333s[  ] 120/977, 0.6 task/s, elapsed: 186s, ETA:  1331s[  ] 121/977, 0.6 task/s, elapsed: 188s, ETA:  1329s[  ] 122/977, 0.6 task/s, elapsed: 189s, ETA:  1327s[  ] 123/977, 0.6 task/s, elapsed: 191s, ETA:  1326s[  ] 124/977, 0.6 task/s, elapsed: 193s, ETA:  1324s[  ] 125/977, 0.6 task/s, elapsed: 194s, ETA:  1323s[  ] 126/977, 0.6 task/s, elapsed: 196s, ETA:  1322s[  ] 127/977, 0.6 task/s, elapsed: 198s, ETA:  1322s[  ] 128/977, 0.6 task/s, elapsed: 199s, ETA:  1322s[  ] 129/977, 0.6 task/s, elapsed: 201s, ETA:  1321s[  ] 130/977, 0.6 task/s, elapsed: 203s, ETA:  1320s[  ] 131/977, 0.6 task/s, elapsed: 204s, ETA:  1318s[  ] 132/977, 0.6 task/s, elapsed: 206s, ETA:  1317s[  ] 133/977, 0.6 task/s, elapsed: 207s, ETA:  1316s[  ] 134/977, 0.6 task/s, elapsed: 209s, ETA:  1315s[  ] 135/977, 0.6 task/s, elapsed: 211s, ETA:  1313s[  ] 136/977, 0.6 task/s, elapsed: 212s, ETA:  1311s[  ] 137/977, 0.6 task/s, elapsed: 214s, ETA:  1309s[  ] 138/977, 0.6 task/s, elapsed: 215s, ETA:  1308s[  ] 139/977, 0.6 task/s, elapsed: 217s, ETA:  1306s[  ] 140/977, 0.6 task/s, elapsed: 218s, ETA:  1304s[  ] 141/977, 0.6 task/s, elapsed: 220s, ETA:  1302s[  ] 142/977, 0.6 task/s, elapsed: 221s, ETA:  1301s[  ] 143/977, 0.6 task/s, elapsed: 223s, ETA:  1299s[  ] 144/977, 0.6 task/s, elapsed: 224s, ETA:  1297s[  ] 145/977, 0.6 task/s, elapsed: 226s, ETA:  1296s[  ] 146/977, 0.6 task/s, elapsed: 227s, ETA:  1294s[  ] 147/977, 0.6 task/s, elapsed: 229s, ETA:  1294s[  ] 148/977, 0.6 task/s, elapsed: 231s, ETA:  1292s[  ] 149/977, 0.6 task/s, elapsed: 232s, ETA:  1290s[  ] 150/977, 0.6 task/s, elapsed: 234s, ETA:  1288s[  ] 151/977, 0.6 task/s, elapsed: 235s, ETA:  1286s[  ] 152/977, 0.6 task/s, elapsed: 237s, ETA:  1285s[  ] 153/977, 0.6 task/s, elapsed: 238s, ETA:  1284s[  ] 154/977, 0.6 task/s, elapsed: 240s, ETA:  1283s[  ] 155/977, 0.6 task/s, elapsed: 242s, ETA:  1281s[  ] 156/977, 0.6 task/s, elapsed: 243s, ETA:  1280s[  ] 157/977, 0.6 task/s, elapsed: 245s, ETA:  1278s[  ] 158/977, 0.6 task/s, elapsed: 246s, ETA:  1277s[  ] 159/977, 0.6 task/s, elapsed: 248s, ETA:  1276s[  ] 160/977, 0.6 task/s, elapsed: 249s, ETA:  1274s[  ] 161/977, 0.6 task/s, elapsed: 251s, ETA:  1273s[  ] 162/977, 0.6 task/s, elapsed: 253s, ETA:  1271s[  ] 163/977, 0.6 task/s, elapsed: 254s, ETA:  1270s[  ] 164/977, 0.6 task/s, elapsed: 256s, ETA:  1268s[  ] 165/977, 0.6 task/s, elapsed: 257s, ETA:  1267s[  ] 166/977, 0.6 task/s, elapsed: 259s, ETA:  1265s[  ] 167/977, 0.6 task/s, elapsed: 260s, ETA:  1263s[  ] 168/977, 0.6 task/s, elapsed: 262s, ETA:  1262s[  ] 169/977, 0.6 task/s, elapsed: 264s, ETA:  1260s[  ] 170/977, 0.6 task/s, elapsed: 265s, ETA:  1259s[  ] 171/977, 0.6 task/s, elapsed: 267s, ETA:  1258s[  ] 172/977, 0.6 task/s, elapsed: 268s, ETA:  1256s[  ] 173/977, 0.6 task/s, elapsed: 270s, ETA:  1254s[  ] 174/977, 0.6 task/s, elapsed: 272s, ETA:  1253s[  ] 175/977, 0.6 task/s, elapsed: 273s, ETA:  1251s[  ] 176/977, 0.6 task/s, elapsed: 275s, ETA:  1250s[  ] 177/977, 0.6 task/s, elapsed: 276s, ETA:  1248s[  ] 178/977, 0.6 task/s, elapsed: 278s, ETA:  1246s[  ] 179/977, 0.6 task/s, elapsed: 279s, ETA:  1245s[  ] 180/977, 0.6 task/s, elapsed: 281s, ETA:  1243s[  ] 181/977, 0.6 task/s, elapsed: 282s, ETA:  1242s[  ] 182/977, 0.6 task/s, elapsed: 284s, ETA:  1240s[  ] 183/977, 0.6 task/s, elapsed: 285s, ETA:  1238s[  ] 184/977, 0.6 task/s, elapsed: 287s, ETA:  1237s[  ] 185/977, 0.6 task/s, elapsed: 288s, ETA:  1235s[  ] 186/977, 0.6 task/s, elapsed: 290s, ETA:  1233s[  ] 187/977, 0.6 task/s, elapsed: 291s, ETA:  1231s[  ] 188/977, 0.6 task/s, elapsed: 293s, ETA:  1230s[  ] 189/977, 0.6 task/s, elapsed: 295s, ETA:  1228s[  ] 190/977, 0.6 task/s, elapsed: 296s, ETA:  1226s[  ] 191/977, 0.6 task/s, elapsed: 298s, ETA:  1225s[  ] 192/977, 0.6 task/s, elapsed: 299s, ETA:  1223s[  ] 193/977, 0.6 task/s, elapsed: 301s, ETA:  1221s[  ] 194/977, 0.6 task/s, elapsed: 302s, ETA:  1220s[  ] 195/977, 0.6 task/s, elapsed: 304s, ETA:  1218s[  ] 196/977, 0.6 task/s, elapsed: 305s, ETA:  1216s[  ] 197/977, 0.6 task/s, elapsed: 307s, ETA:  1215s[  ] 198/977, 0.6 task/s, elapsed: 308s, ETA:  1213s[  ] 199/977, 0.6 task/s, elapsed: 310s, ETA:  1212s[  ] 200/977, 0.6 task/s, elapsed: 311s, ETA:  1210s[  ] 201/977, 0.6 task/s, elapsed: 313s, ETA:  1208s[  ] 202/977, 0.6 task/s, elapsed: 314s, ETA:  1207s[  ] 203/977, 0.6 task/s, elapsed: 316s, ETA:  1205s[  ] 204/977, 0.6 task/s, elapsed: 318s, ETA:  1203s[  ] 205/977, 0.6 task/s, elapsed: 319s, ETA:  1202s[  ] 206/977, 0.6 task/s, elapsed: 321s, ETA:  1201s[  ] 207/977, 0.6 task/s, elapsed: 323s, ETA:  1200s[  ] 208/977, 0.6 task/s, elapsed: 324s, ETA:  1199s[  ] 209/977, 0.6 task/s, elapsed: 326s, ETA:  1197s[  ] 210/977, 0.6 task/s, elapsed: 327s, ETA:  1196s[  ] 211/977, 0.6 task/s, elapsed: 329s, ETA:  1194s[  ] 212/977, 0.6 task/s, elapsed: 331s, ETA:  1193s[  ] 213/977, 0.6 task/s, elapsed: 332s, ETA:  1191s[  ] 214/977, 0.6 task/s, elapsed: 334s, ETA:  1189s[  ] 215/977, 0.6 task/s, elapsed: 335s, ETA:  1188s[  ] 216/977, 0.6 task/s, elapsed: 337s, ETA:  1186s[  ] 217/977, 0.6 task/s, elapsed: 338s, ETA:  1184s[  ] 218/977, 0.6 task/s, elapsed: 340s, ETA:  1183s[  ] 219/977, 0.6 task/s, elapsed: 341s, ETA:  1181s[  ] 220/977, 0.6 task/s, elapsed: 343s, ETA:  1179s[  ] 221/977, 0.6 task/s, elapsed: 344s, ETA:  1178s[  ] 222/977, 0.6 task/s, elapsed: 346s, ETA:  1176s[  ] 223/977, 0.6 task/s, elapsed: 347s, ETA:  1174s[  ] 224/977, 0.6 task/s, elapsed: 349s, ETA:  1173s[  ] 225/977, 0.6 task/s, elapsed: 350s, ETA:  1171s[  ] 226/977, 0.6 task/s, elapsed: 352s, ETA:  1170s[  ] 227/977, 0.6 task/s, elapsed: 353s, ETA:  1168s[  ] 228/977, 0.6 task/s, elapsed: 355s, ETA:  1166s[  ] 229/977, 0.6 task/s, elapsed: 357s, ETA:  1165s[  ] 230/977, 0.6 task/s, elapsed: 358s, ETA:  1163s[  ] 231/977, 0.6 task/s, elapsed: 360s, ETA:  1161s[  ] 232/977, 0.6 task/s, elapsed: 361s, ETA:  1160s[  ] 233/977, 0.6 task/s, elapsed: 363s, ETA:  1158s[  ] 234/977, 0.6 task/s, elapsed: 364s, ETA:  1157s[  ] 235/977, 0.6 task/s, elapsed: 366s, ETA:  1155s[  ] 236/977, 0.6 task/s, elapsed: 367s, ETA:  1154s[  ] 237/977, 0.6 task/s, elapsed: 369s, ETA:  1152s[  ] 238/977, 0.6 task/s, elapsed: 371s, ETA:  1150s[  ] 239/977, 0.6 task/s, elapsed: 372s, ETA:  1149s[  ] 240/977, 0.6 task/s, elapsed: 374s, ETA:  1147s[  ] 241/977, 0.6 task/s, elapsed: 375s, ETA:  1146s[  ] 242/977, 0.6 task/s, elapsed: 377s, ETA:  1144s[  ] 243/977, 0.6 task/s, elapsed: 378s, ETA:  1143s[  ] 244/977, 0.6 task/s, elapsed: 380s, ETA:  1141s[  ] 245/977, 0.6 task/s, elapsed: 381s, ETA:  1140s[  ] 246/977, 0.6 task/s, elapsed: 383s, ETA:  1138s[  ] 247/977, 0.6 task/s, elapsed: 385s, ETA:  1136s[  ] 248/977, 0.6 task/s, elapsed: 386s, ETA:  1135s[  ] 249/977, 0.6 task/s, elapsed: 388s, ETA:  1133s[  ] 250/977, 0.6 task/s, elapsed: 389s, ETA:  1132s[  ] 251/977, 0.6 task/s, elapsed: 391s, ETA:  1130s[  ] 252/977, 0.6 task/s, elapsed: 392s, ETA:  1129s[  ] 253/977, 0.6 task/s, elapsed: 394s, ETA:  1128s[  ] 254/977, 0.6 task/s, elapsed: 396s, ETA:  1126s[  ] 255/977, 0.6 task/s, elapsed: 397s, ETA:  1124s[  ] 256/977, 0.6 task/s, elapsed: 399s, ETA:  1123s[  ] 257/977, 0.6 task/s, elapsed: 400s, ETA:  1121s[  ] 258/977, 0.6 task/s, elapsed: 402s, ETA:  1119s[  ] 259/977, 0.6 task/s, elapsed: 403s, ETA:  1118s[  ] 260/977, 0.6 task/s, elapsed: 405s, ETA:  1116s[  ] 261/977, 0.6 task/s, elapsed: 406s, ETA:  1114s[  ] 262/977, 0.6 task/s, elapsed: 408s, ETA:  1113s[  ] 263/977, 0.6 task/s, elapsed: 409s, ETA:  1111s[  ] 264/977, 0.6 task/s, elapsed: 411s, ETA:  1110s[  ] 265/977, 0.6 task/s, elapsed: 413s, ETA:  1109s[  ] 266/977, 0.6 task/s, elapsed: 414s, ETA:  1107s[  ] 267/977, 0.6 task/s, elapsed: 416s, ETA:  1106s[  ] 268/977, 0.6 task/s, elapsed: 417s, ETA:  1104s[  ] 269/977, 0.6 task/s, elapsed: 419s, ETA:  1102s[  ] 270/977, 0.6 task/s, elapsed: 420s, ETA:  1101s[  ] 271/977, 0.6 task/s, elapsed: 422s, ETA:  1100s[  ] 272/977, 0.6 task/s, elapsed: 424s, ETA:  1099s[  ] 273/977, 0.6 task/s, elapsed: 426s, ETA:  1098s[  ] 274/977, 0.6 task/s, elapsed: 427s, ETA:  1096s[  ] 275/977, 0.6 task/s, elapsed: 429s, ETA:  1095s[  ] 276/977, 0.6 task/s, elapsed: 431s, ETA:  1094s[  ] 277/977, 0.6 task/s, elapsed: 432s, ETA:  1092s[  ] 278/977, 0.6 task/s, elapsed: 434s, ETA:  1090s[  ] 279/977, 0.6 task/s, elapsed: 435s, ETA:  1089s[  ] 280/977, 0.6 task/s, elapsed: 437s, ETA:  1087s[  ] 281/977, 0.6 task/s, elapsed: 438s, ETA:  1085s[  ] 282/977, 0.6 task/s, elapsed: 440s, ETA:  1084s[  ] 283/977, 0.6 task/s, elapsed: 441s, ETA:  1082s[  ] 284/977, 0.6 task/s, elapsed: 443s, ETA:  1080s[  ] 285/977, 0.6 task/s, elapsed: 444s, ETA:  1079s[  ] 286/977, 0.6 task/s, elapsed: 446s, ETA:  1077s[  ] 287/977, 0.6 task/s, elapsed: 447s, ETA:  1076s[  ] 288/977, 0.6 task/s, elapsed: 449s, ETA:  1074s[  ] 289/977, 0.6 task/s, elapsed: 451s, ETA:  1073s[  ] 290/977, 0.6 task/s, elapsed: 452s, ETA:  1071s[  ] 291/977, 0.6 task/s, elapsed: 454s, ETA:  1069s[  ] 292/977, 0.6 task/s, elapsed: 455s, ETA:  1068s[  ] 293/977, 0.6 task/s, elapsed: 457s, ETA:  1066s[  ] 294/977, 0.6 task/s, elapsed: 458s, ETA:  1064s[  ] 295/977, 0.6 task/s, elapsed: 460s, ETA:  1063s[  ] 296/977, 0.6 task/s, elapsed: 461s, ETA:  1061s[  ] 297/977, 0.6 task/s, elapsed: 463s, ETA:  1059s[  ] 298/977, 0.6 task/s, elapsed: 464s, ETA:  1058s[  ] 299/977, 0.6 task/s, elapsed: 466s, ETA:  1056s[  ] 300/977, 0.6 task/s, elapsed: 467s, ETA:  1055s[  ] 301/977, 0.6 task/s, elapsed: 469s, ETA:  1053s[  ] 302/977, 0.6 task/s, elapsed: 471s, ETA:  1052s[  ] 303/977, 0.6 task/s, elapsed: 472s, ETA:  1050s[  ] 304/977, 0.6 task/s, elapsed: 474s, ETA:  1049s[  ] 305/977, 0.6 task/s, elapsed: 475s, ETA:  1047s[  ] 306/977, 0.6 task/s, elapsed: 477s, ETA:  1045s[  ] 307/977, 0.6 task/s, elapsed: 478s, ETA:  1044s[  ] 308/977, 0.6 task/s, elapsed: 480s, ETA:  1042s[  ] 309/977, 0.6 task/s, elapsed: 481s, ETA:  1040s[  ] 310/977, 0.6 task/s, elapsed: 483s, ETA:  1039s[  ] 311/977, 0.6 task/s, elapsed: 485s, ETA:  1038s[  ] 312/977, 0.6 task/s, elapsed: 486s, ETA:  1037s[  ] 313/977, 0.6 task/s, elapsed: 488s, ETA:  1035s[  ] 314/977, 0.6 task/s, elapsed: 490s, ETA:  1034s[  ] 315/977, 0.6 task/s, elapsed: 491s, ETA:  1033s[  ] 316/977, 0.6 task/s, elapsed: 493s, ETA:  1031s[  ] 317/977, 0.6 task/s, elapsed: 495s, ETA:  1030s[  ] 318/977, 0.6 task/s, elapsed: 496s, ETA:  1028s[  ] 319/977, 0.6 task/s, elapsed: 498s, ETA:  1027s[  ] 320/977, 0.6 task/s, elapsed: 500s, ETA:  1026s[  ] 321/977, 0.6 task/s, elapsed: 501s, ETA:  1025s[  ] 322/977, 0.6 task/s, elapsed: 503s, ETA:  1024s[  ] 323/977, 0.6 task/s, elapsed: 505s, ETA:  1022s[  ] 324/977, 0.6 task/s, elapsed: 507s, ETA:  1021s[  ] 325/977, 0.6 task/s, elapsed: 508s, ETA:  1020s[  ] 326/977, 0.6 task/s, elapsed: 510s, ETA:  1019s[  ] 327/977, 0.6 task/s, elapsed: 512s, ETA:  1018s[  ] 328/977, 0.6 task/s, elapsed: 513s, ETA:  1016s[  ] 329/977, 0.6 task/s, elapsed: 515s, ETA:  1014s[  ] 330/977, 0.6 task/s, elapsed: 517s, ETA:  1013s[  ] 331/977, 0.6 task/s, elapsed: 518s, ETA:  1011s[  ] 332/977, 0.6 task/s, elapsed: 520s, ETA:  1009s[  ] 333/977, 0.6 task/s, elapsed: 521s, ETA:  1008s[  ] 334/977, 0.6 task/s, elapsed: 523s, ETA:  1006s[  ] 335/977, 0.6 task/s, elapsed: 524s, ETA:  1005s[  ] 336/977, 0.6 task/s, elapsed: 526s, ETA:  1003s[  ] 337/977, 0.6 task/s, elapsed: 527s, ETA:  1001s[  ] 338/977, 0.6 task/s, elapsed: 529s, ETA:  1000s[  ] 339/977, 0.6 task/s, elapsed: 530s, ETA:   998s[  ] 340/977, 0.6 task/s, elapsed: 532s, ETA:   996s[  ] 341/977, 0.6 task/s, elapsed: 533s, ETA:   995s[  ] 342/977, 0.6 task/s, elapsed: 535s, ETA:   993s[  ] 343/977, 0.6 task/s, elapsed: 536s, ETA:   991s[  ] 344/977, 0.6 task/s, elapsed: 538s, ETA:   990s[  ] 345/977, 0.6 task/s, elapsed: 540s, ETA:   988s[  ] 346/977, 0.6 task/s, elapsed: 541s, ETA:   987s[  ] 347/977, 0.6 task/s, elapsed: 543s, ETA:   986s[  ] 348/977, 0.6 task/s, elapsed: 545s, ETA:   985s[  ] 349/977, 0.6 task/s, elapsed: 546s, ETA:   983s[  ] 350/977, 0.6 task/s, elapsed: 548s, ETA:   982s[  ] 351/977, 0.6 task/s, elapsed: 550s, ETA:   980s[  ] 352/977, 0.6 task/s, elapsed: 551s, ETA:   978s[  ] 353/977, 0.6 task/s, elapsed: 553s, ETA:   977s[  ] 354/977, 0.6 task/s, elapsed: 554s, ETA:   975s[  ] 355/977, 0.6 task/s, elapsed: 556s, ETA:   974s[  ] 356/977, 0.6 task/s, elapsed: 557s, ETA:   972s[  ] 357/977, 0.6 task/s, elapsed: 559s, ETA:   970s[  ] 358/977, 0.6 task/s, elapsed: 560s, ETA:   969s[  ] 359/977, 0.6 task/s, elapsed: 562s, ETA:   967s[  ] 360/977, 0.6 task/s, elapsed: 563s, ETA:   966s[  ] 361/977, 0.6 task/s, elapsed: 565s, ETA:   964s[  ] 362/977, 0.6 task/s, elapsed: 566s, ETA:   962s[  ] 363/977, 0.6 task/s, elapsed: 568s, ETA:   961s[  ] 364/977, 0.6 task/s, elapsed: 570s, ETA:   959s[  ] 365/977, 0.6 task/s, elapsed: 571s, ETA:   958s[  ] 366/977, 0.6 task/s, elapsed: 573s, ETA:   956s[  ] 367/977, 0.6 task/s, elapsed: 574s, ETA:   954s[  ] 368/977, 0.6 task/s, elapsed: 576s, ETA:   953s[  ] 369/977, 0.6 task/s, elapsed: 577s, ETA:   951s[  ] 370/977, 0.6 task/s, elapsed: 579s, ETA:   950s[  ] 371/977, 0.6 task/s, elapsed: 580s, ETA:   948s[  ] 372/977, 0.6 task/s, elapsed: 582s, ETA:   946s[  ] 373/977, 0.6 task/s, elapsed: 583s, ETA:   945s[  ] 374/977, 0.6 task/s, elapsed: 585s, ETA:   943s[  ] 375/977, 0.6 task/s, elapsed: 586s, ETA:   941s[  ] 376/977, 0.6 task/s, elapsed: 588s, ETA:   940s[  ] 377/977, 0.6 task/s, elapsed: 589s, ETA:   938s[  ] 378/977, 0.6 task/s, elapsed: 591s, ETA:   936s[  ] 379/977, 0.6 task/s, elapsed: 592s, ETA:   935s[  ] 380/977, 0.6 task/s, elapsed: 594s, ETA:   933s[  ] 381/977, 0.6 task/s, elapsed: 595s, ETA:   932s[  ] 382/977, 0.6 task/s, elapsed: 597s, ETA:   930s[  ] 383/977, 0.6 task/s, elapsed: 598s, ETA:   928s[  ] 384/977, 0.6 task/s, elapsed: 600s, ETA:   927s[  ] 385/977, 0.6 task/s, elapsed: 602s, ETA:   925s[  ] 386/977, 0.6 task/s, elapsed: 603s, ETA:   923s[  ] 387/977, 0.6 task/s, elapsed: 605s, ETA:   922s[  ] 388/977, 0.6 task/s, elapsed: 606s, ETA:   920s[  ] 389/977, 0.6 task/s, elapsed: 608s, ETA:   919s[  ] 390/977, 0.6 task/s, elapsed: 609s, ETA:   917s[  ] 391/977, 0.6 task/s, elapsed: 611s, ETA:   915s[  ] 392/977, 0.6 task/s, elapsed: 612s, ETA:   914s[  ] 393/977, 0.6 task/s, elapsed: 614s, ETA:   912s[  ] 394/977, 0.6 task/s, elapsed: 616s, ETA:   911s[  ] 395/977, 0.6 task/s, elapsed: 617s, ETA:   909s[  ] 396/977, 0.6 task/s, elapsed: 619s, ETA:   908s[  ] 397/977, 0.6 task/s, elapsed: 620s, ETA:   906s[  ] 398/977, 0.6 task/s, elapsed: 622s, ETA:   905s[  ] 399/977, 0.6 task/s, elapsed: 624s, ETA:   904s[  ] 400/977, 0.6 task/s, elapsed: 625s, ETA:   902s[  ] 401/977, 0.6 task/s, elapsed: 627s, ETA:   901s[  ] 402/977, 0.6 task/s, elapsed: 629s, ETA:   899s[  ] 403/977, 0.6 task/s, elapsed: 630s, ETA:   898s[  ] 404/977, 0.6 task/s, elapsed: 632s, ETA:   896s[  ] 405/977, 0.6 task/s, elapsed: 633s, ETA:   894s[  ] 406/977, 0.6 task/s, elapsed: 635s, ETA:   893s[  ] 407/977, 0.6 task/s, elapsed: 636s, ETA:   891s[  ] 408/977, 0.6 task/s, elapsed: 638s, ETA:   889s[  ] 409/977, 0.6 task/s, elapsed: 639s, ETA:   888s[  ] 410/977, 0.6 task/s, elapsed: 641s, ETA:   886s[  ] 411/977, 0.6 task/s, elapsed: 642s, ETA:   885s[  ] 412/977, 0.6 task/s, elapsed: 644s, ETA:   883s[  ] 413/977, 0.6 task/s, elapsed: 645s, ETA:   881s[  ] 414/977, 0.6 task/s, elapsed: 647s, ETA:   880s[  ] 415/977, 0.6 task/s, elapsed: 648s, ETA:   878s[  ] 416/977, 0.6 task/s, elapsed: 650s, ETA:   877s[  ] 417/977, 0.6 task/s, elapsed: 652s, ETA:   875s[  ] 418/977, 0.6 task/s, elapsed: 653s, ETA:   873s[  ] 419/977, 0.6 task/s, elapsed: 655s, ETA:   872s[  ] 420/977, 0.6 task/s, elapsed: 656s, ETA:   870s[  ] 421/977, 0.6 task/s, elapsed: 658s, ETA:   869s[  ] 422/977, 0.6 task/s, elapsed: 659s, ETA:   867s[  ] 423/977, 0.6 task/s, elapsed: 661s, ETA:   865s[  ] 424/977, 0.6 task/s, elapsed: 662s, ETA:   864s[  ] 425/977, 0.6 task/s, elapsed: 664s, ETA:   862s[  ] 426/977, 0.6 task/s, elapsed: 665s, ETA:   860s[  ] 427/977, 0.6 task/s, elapsed: 667s, ETA:   859s[  ] 428/977, 0.6 task/s, elapsed: 668s, ETA:   857s[  ] 429/977, 0.6 task/s, elapsed: 670s, ETA:   856s[  ] 430/977, 0.6 task/s, elapsed: 671s, ETA:   854s[  ] 431/977, 0.6 task/s, elapsed: 673s, ETA:   852s[  ] 432/977, 0.6 task/s, elapsed: 674s, ETA:   851s[  ] 433/977, 0.6 task/s, elapsed: 676s, ETA:   849s[  ] 434/977, 0.6 task/s, elapsed: 677s, ETA:   847s[  ] 435/977, 0.6 task/s, elapsed: 679s, ETA:   846s[  ] 436/977, 0.6 task/s, elapsed: 680s, ETA:   844s[  ] 437/977, 0.6 task/s, elapsed: 682s, ETA:   843s[  ] 438/977, 0.6 task/s, elapsed: 683s, ETA:   841s[  ] 439/977, 0.6 task/s, elapsed: 685s, ETA:   839s[  ] 440/977, 0.6 task/s, elapsed: 686s, ETA:   838s[  ] 441/977, 0.6 task/s, elapsed: 688s, ETA:   836s[  ] 442/977, 0.6 task/s, elapsed: 690s, ETA:   835s[  ] 443/977, 0.6 task/s, elapsed: 691s, ETA:   833s[  ] 444/977, 0.6 task/s, elapsed: 693s, ETA:   832s[  ] 445/977, 0.6 task/s, elapsed: 694s, ETA:   830s[  ] 446/977, 0.6 task/s, elapsed: 696s, ETA:   828s[  ] 447/977, 0.6 task/s, elapsed: 697s, ETA:   827s[  ] 448/977, 0.6 task/s, elapsed: 699s, ETA:   825s[  ] 449/977, 0.6 task/s, elapsed: 700s, ETA:   824s[  ] 450/977, 0.6 task/s, elapsed: 702s, ETA:   822s[  ] 451/977, 0.6 task/s, elapsed: 703s, ETA:   820s[  ] 452/977, 0.6 task/s, elapsed: 705s, ETA:   819s[  ] 453/977, 0.6 task/s, elapsed: 707s, ETA:   817s[  ] 454/977, 0.6 task/s, elapsed: 708s, ETA:   816s[  ] 455/977, 0.6 task/s, elapsed: 710s, ETA:   814s[  ] 456/977, 0.6 task/s, elapsed: 711s, ETA:   813s[  ] 457/977, 0.6 task/s, elapsed: 713s, ETA:   811s[  ] 458/977, 0.6 task/s, elapsed: 714s, ETA:   809s[  ] 459/977, 0.6 task/s, elapsed: 716s, ETA:   808s[  ] 460/977, 0.6 task/s, elapsed: 717s, ETA:   806s[  ] 461/977, 0.6 task/s, elapsed: 719s, ETA:   805s[  ] 462/977, 0.6 task/s, elapsed: 720s, ETA:   803s[  ] 463/977, 0.6 task/s, elapsed: 722s, ETA:   802s[  ] 464/977, 0.6 task/s, elapsed: 724s, ETA:   800s[  ] 465/977, 0.6 task/s, elapsed: 725s, ETA:   798s[  ] 466/977, 0.6 task/s, elapsed: 727s, ETA:   797s[  ] 467/977, 0.6 task/s, elapsed: 728s, ETA:   795s[  ] 468/977, 0.6 task/s, elapsed: 730s, ETA:   794s[  ] 469/977, 0.6 task/s, elapsed: 731s, ETA:   792s[  ] 470/977, 0.6 task/s, elapsed: 733s, ETA:   791s[  ] 471/977, 0.6 task/s, elapsed: 734s, ETA:   789s[  ] 472/977, 0.6 task/s, elapsed: 736s, ETA:   787s[  ] 473/977, 0.6 task/s, elapsed: 737s, ETA:   786s[  ] 474/977, 0.6 task/s, elapsed: 739s, ETA:   784s[  ] 475/977, 0.6 task/s, elapsed: 741s, ETA:   783s[  ] 476/977, 0.6 task/s, elapsed: 742s, ETA:   781s[  ] 477/977, 0.6 task/s, elapsed: 744s, ETA:   779s[  ] 478/977, 0.6 task/s, elapsed: 745s, ETA:   778s[  ] 479/977, 0.6 task/s, elapsed: 747s, ETA:   776s[  ] 480/977, 0.6 task/s, elapsed: 748s, ETA:   775s[  ] 481/977, 0.6 task/s, elapsed: 750s, ETA:   773s[  ] 482/977, 0.6 task/s, elapsed: 751s, ETA:   771s[  ] 483/977, 0.6 task/s, elapsed: 753s, ETA:   770s[  ] 484/977, 0.6 task/s, elapsed: 754s, ETA:   768s[  ] 485/977, 0.6 task/s, elapsed: 756s, ETA:   767s[  ] 486/977, 0.6 task/s, elapsed: 757s, ETA:   765s[  ] 487/977, 0.6 task/s, elapsed: 759s, ETA:   763s[  ] 488/977, 0.6 task/s, elapsed: 760s, ETA:   762s[> ] 489/977, 0.6 task/s, elapsed: 762s, ETA:   760s[> ] 490/977, 0.6 task/s, elapsed: 763s, ETA:   759s[> ] 491/977, 0.6 task/s, elapsed: 765s, ETA:   757s[> ] 492/977, 0.6 task/s, elapsed: 766s, ETA:   756s[> ] 493/977, 0.6 task/s, elapsed: 768s, ETA:   754s[> ] 494/977, 0.6 task/s, elapsed: 770s, ETA:   752s[> ] 495/977, 0.6 task/s, elapsed: 771s, ETA:   751s[> ] 496/977, 0.6 task/s, elapsed: 773s, ETA:   749s[> ] 497/977, 0.6 task/s, elapsed: 774s, ETA:   748s[> ] 498/977, 0.6 task/s, elapsed: 776s, ETA:   746s[> ] 499/977, 0.6 task/s, elapsed: 777s, ETA:   745s[> ] 500/977, 0.6 task/s, elapsed: 779s, ETA:   743s[> ] 501/977, 0.6 task/s, elapsed: 780s, ETA:   741s[> ] 502/977, 0.6 task/s, elapsed: 782s, ETA:   740s[> ] 503/977, 0.6 task/s, elapsed: 783s, ETA:   738s[> ] 504/977, 0.6 task/s, elapsed: 785s, ETA:   737s[> ] 505/977, 0.6 task/s, elapsed: 786s, ETA:   735s[> ] 506/977, 0.6 task/s, elapsed: 788s, ETA:   733s[> ] 507/977, 0.6 task/s, elapsed: 789s, ETA:   732s[> ] 508/977, 0.6 task/s, elapsed: 791s, ETA:   730s[> ] 509/977, 0.6 task/s, elapsed: 792s, ETA:   729s[> ] 510/977, 0.6 task/s, elapsed: 794s, ETA:   727s[> ] 511/977, 0.6 task/s, elapsed: 795s, ETA:   725s[> ] 512/977, 0.6 task/s, elapsed: 797s, ETA:   724s[> ] 513/977, 0.6 task/s, elapsed: 798s, ETA:   722s[> ] 514/977, 0.6 task/s, elapsed: 800s, ETA:   721s[> ] 515/977, 0.6 task/s, elapsed: 801s, ETA:   719s[> ] 516/977, 0.6 task/s, elapsed: 803s, ETA:   717s[> ] 517/977, 0.6 task/s, elapsed: 805s, ETA:   716s[> ] 518/977, 0.6 task/s, elapsed: 806s, ETA:   714s[> ] 519/977, 0.6 task/s, elapsed: 808s, ETA:   713s[> ] 520/977, 0.6 task/s, elapsed: 809s, ETA:   711s[> ] 521/977, 0.6 task/s, elapsed: 811s, ETA:   710s[> ] 522/977, 0.6 task/s, elapsed: 812s, ETA:   708s[> ] 523/977, 0.6 task/s, elapsed: 814s, ETA:   706s[> ] 524/977, 0.6 task/s, elapsed: 815s, ETA:   705s[> ] 525/977, 0.6 task/s, elapsed: 817s, ETA:   703s[> ] 526/977, 0.6 task/s, elapsed: 818s, ETA:   702s[> ] 527/977, 0.6 task/s, elapsed: 820s, ETA:   700s[> ] 528/977, 0.6 task/s, elapsed: 821s, ETA:   698s[> ] 529/977, 0.6 task/s, elapsed: 823s, ETA:   697s[> ] 530/977, 0.6 task/s, elapsed: 824s, ETA:   695s[> ] 531/977, 0.6 task/s, elapsed: 826s, ETA:   694s[> ] 532/977, 0.6 task/s, elapsed: 827s, ETA:   692s[> ] 533/977, 0.6 task/s, elapsed: 829s, ETA:   691s[> ] 534/977, 0.6 task/s, elapsed: 830s, ETA:   689s[> ] 535/977, 0.6 task/s, elapsed: 832s, ETA:   687s[> ] 536/977, 0.6 task/s, elapsed: 834s, ETA:   686s[> ] 537/977, 0.6 task/s, elapsed: 835s, ETA:   684s[> ] 538/977, 0.6 task/s, elapsed: 837s, ETA:   683s[> ] 539/977, 0.6 task/s, elapsed: 838s, ETA:   681s[> ] 540/977, 0.6 task/s, elapsed: 840s, ETA:   680s[> ] 541/977, 0.6 task/s, elapsed: 841s, ETA:   678s[> ] 542/977, 0.6 task/s, elapsed: 843s, ETA:   676s[> ] 543/977, 0.6 task/s, elapsed: 844s, ETA:   675s[> ] 544/977, 0.6 task/s, elapsed: 846s, ETA:   673s[> ] 545/977, 0.6 task/s, elapsed: 847s, ETA:   672s[> ] 546/977, 0.6 task/s, elapsed: 849s, ETA:   670s[> ] 547/977, 0.6 task/s, elapsed: 850s, ETA:   669s[> ] 548/977, 0.6 task/s, elapsed: 852s, ETA:   667s[> ] 549/977, 0.6 task/s, elapsed: 854s, ETA:   665s[> ] 550/977, 0.6 task/s, elapsed: 855s, ETA:   664s[> ] 551/977, 0.6 task/s, elapsed: 857s, ETA:   662s[> ] 552/977, 0.6 task/s, elapsed: 858s, ETA:   661s[> ] 553/977, 0.6 task/s, elapsed: 860s, ETA:   659s[> ] 554/977, 0.6 task/s, elapsed: 861s, ETA:   657s[> ] 555/977, 0.6 task/s, elapsed: 863s, ETA:   656s[> ] 556/977, 0.6 task/s, elapsed: 864s, ETA:   654s[> ] 557/977, 0.6 task/s, elapsed: 866s, ETA:   653s[> ] 558/977, 0.6 task/s, elapsed: 867s, ETA:   651s[> ] 559/977, 0.6 task/s, elapsed: 869s, ETA:   650s[> ] 560/977, 0.6 task/s, elapsed: 870s, ETA:   648s[> ] 561/977, 0.6 task/s, elapsed: 872s, ETA:   647s[> ] 562/977, 0.6 task/s, elapsed: 873s, ETA:   645s[> ] 563/977, 0.6 task/s, elapsed: 875s, ETA:   643s[> ] 564/977, 0.6 task/s, elapsed: 877s, ETA:   642s[> ] 565/977, 0.6 task/s, elapsed: 878s, ETA:   640s[> ] 566/977, 0.6 task/s, elapsed: 880s, ETA:   639s[> ] 567/977, 0.6 task/s, elapsed: 881s, ETA:   637s[> ] 568/977, 0.6 task/s, elapsed: 883s, ETA:   636s[> ] 569/977, 0.6 task/s, elapsed: 884s, ETA:   634s[> ] 570/977, 0.6 task/s, elapsed: 886s, ETA:   632s[> ] 571/977, 0.6 task/s, elapsed: 887s, ETA:   631s[> ] 572/977, 0.6 task/s, elapsed: 889s, ETA:   629s[> ] 573/977, 0.6 task/s, elapsed: 890s, ETA:   628s[> ] 574/977, 0.6 task/s, elapsed: 892s, ETA:   626s[> ] 575/977, 0.6 task/s, elapsed: 893s, ETA:   625s[> ] 576/977, 0.6 task/s, elapsed: 895s, ETA:   623s[> ] 577/977, 0.6 task/s, elapsed: 897s, ETA:   622s[> ] 578/977, 0.6 task/s, elapsed: 898s, ETA:   620s[> ] 579/977, 0.6 task/s, elapsed: 900s, ETA:   618s[> ] 580/977, 0.6 task/s, elapsed: 901s, ETA:   617s[> ] 581/977, 0.6 task/s, elapsed: 903s, ETA:   615s[> ] 582/977, 0.6 task/s, elapsed: 904s, ETA:   614s[> ] 583/977, 0.6 task/s, elapsed: 906s, ETA:   612s[> ] 584/977, 0.6 task/s, elapsed: 907s, ETA:   611s[> ] 585/977, 0.6 task/s, elapsed: 909s, ETA:   609s[> ] 586/977, 0.6 task/s, elapsed: 910s, ETA:   607s[> ] 587/977, 0.6 task/s, elapsed: 912s, ETA:   606s[> ] 588/977, 0.6 task/s, elapsed: 913s, ETA:   604s[> ] 589/977, 0.6 task/s, elapsed: 915s, ETA:   603s[> ] 590/977, 0.6 task/s, elapsed: 916s, ETA:   601s[> ] 591/977, 0.6 task/s, elapsed: 918s, ETA:   600s[> ] 592/977, 0.6 task/s, elapsed: 919s, ETA:   598s[> ] 593/977, 0.6 task/s, elapsed: 921s, ETA:   596s[> ] 594/977, 0.6 task/s, elapsed: 922s, ETA:   595s[> ] 595/977, 0.6 task/s, elapsed: 924s, ETA:   593s[> ] 596/977, 0.6 task/s, elapsed: 926s, ETA:   592s[> ] 597/977, 0.6 task/s, elapsed: 927s, ETA:   590s[> ] 598/977, 0.6 task/s, elapsed: 929s, ETA:   589s[> ] 599/977, 0.6 task/s, elapsed: 930s, ETA:   587s[> ] 600/977, 0.6 task/s, elapsed: 932s, ETA:   585s[> ] 601/977, 0.6 task/s, elapsed: 933s, ETA:   584s[> ] 602/977, 0.6 task/s, elapsed: 935s, ETA:   582s[> ] 603/977, 0.6 task/s, elapsed: 936s, ETA:   581s[> ] 604/977, 0.6 task/s, elapsed: 938s, ETA:   579s[> ] 605/977, 0.6 task/s, elapsed: 939s, ETA:   578s[> ] 606/977, 0.6 task/s, elapsed: 941s, ETA:   576s[> ] 607/977, 0.6 task/s, elapsed: 943s, ETA:   575s[> ] 608/977, 0.6 task/s, elapsed: 944s, ETA:   573s[> ] 609/977, 0.6 task/s, elapsed: 946s, ETA:   571s[> ] 610/977, 0.6 task/s, elapsed: 947s, ETA:   570s[> ] 611/977, 0.6 task/s, elapsed: 949s, ETA:   568s[> ] 612/977, 0.6 task/s, elapsed: 950s, ETA:   567s[> ] 613/977, 0.6 task/s, elapsed: 952s, ETA:   565s[> ] 614/977, 0.6 task/s, elapsed: 953s, ETA:   564s[> ] 615/977, 0.6 task/s, elapsed: 955s, ETA:   562s[> ] 616/977, 0.6 task/s, elapsed: 956s, ETA:   561s[> ] 617/977, 0.6 task/s, elapsed: 958s, ETA:   559s[> ] 618/977, 0.6 task/s, elapsed: 960s, ETA:   557s[> ] 619/977, 0.6 task/s, elapsed: 961s, ETA:   556s[> ] 620/977, 0.6 task/s, elapsed: 963s, ETA:   554s[> ] 621/977, 0.6 task/s, elapsed: 964s, ETA:   553s[> ] 622/977, 0.6 task/s, elapsed: 966s, ETA:   551s[> ] 623/977, 0.6 task/s, elapsed: 967s, ETA:   550s[> ] 624/977, 0.6 task/s, elapsed: 969s, ETA:   548s[> ] 625/977, 0.6 task/s, elapsed: 971s, ETA:   547s[> ] 626/977, 0.6 task/s, elapsed: 973s, ETA:   545s[> ] 627/977, 0.6 task/s, elapsed: 974s, ETA:   544s[> ] 628/977, 0.6 task/s, elapsed: 976s, ETA:   542s[> ] 629/977, 0.6 task/s, elapsed: 978s, ETA:   541s[> ] 630/977, 0.6 task/s, elapsed: 979s, ETA:   539s[> ] 631/977, 0.6 task/s, elapsed: 981s, ETA:   538s[> ] 632/977, 0.6 task/s, elapsed: 982s, ETA:   536s[> ] 633/977, 0.6 task/s, elapsed: 984s, ETA:   535s[> ] 634/977, 0.6 task/s, elapsed: 985s, ETA:   533s[> ] 635/977, 0.6 task/s, elapsed: 987s, ETA:   531s[> ] 636/977, 0.6 task/s, elapsed: 988s, ETA:   530s[> ] 637/977, 0.6 task/s, elapsed: 990s, ETA:   528s[> ] 638/977, 0.6 task/s, elapsed: 992s, ETA:   527s[> ] 639/977, 0.6 task/s, elapsed: 993s, ETA:   525s[> ] 640/977, 0.6 task/s, elapsed: 995s, ETA:   524s[> ] 641/977, 0.6 task/s, elapsed: 996s, ETA:   522s[> ] 642/977, 0.6 task/s, elapsed: 998s, ETA:   521s[> ] 643/977, 0.6 task/s, elapsed: 999s, ETA:   519s[> ] 644/977, 0.6 task/s, elapsed: 1001s, ETA:   517s[> ] 645/977, 0.6 task/s, elapsed: 1002s, ETA:   516s[> ] 646/977, 0.6 task/s, elapsed: 1004s, ETA:   514s[> ] 647/977, 0.6 task/s, elapsed: 1005s, ETA:   513s[> ] 648/977, 0.6 task/s, elapsed: 1007s, ETA:   511s[> ] 649/977, 0.6 task/s, elapsed: 1008s, ETA:   510s[> ] 650/977, 0.6 task/s, elapsed: 1010s, ETA:   508s[> ] 651/977, 0.6 task/s, elapsed: 1011s, ETA:   506s[> ] 652/977, 0.6 task/s, elapsed: 1013s, ETA:   505s[> ] 653/977, 0.6 task/s, elapsed: 1014s, ETA:   503s[> ] 654/977, 0.6 task/s, elapsed: 1016s, ETA:   502s[> ] 655/977, 0.6 task/s, elapsed: 1017s, ETA:   500s[> ] 656/977, 0.6 task/s, elapsed: 1019s, ETA:   499s[> ] 657/977, 0.6 task/s, elapsed: 1020s, ETA:   497s[> ] 658/977, 0.6 task/s, elapsed: 1022s, ETA:   495s[> ] 659/977, 0.6 task/s, elapsed: 1023s, ETA:   494s[> ] 660/977, 0.6 task/s, elapsed: 1025s, ETA:   492s[> ] 661/977, 0.6 task/s, elapsed: 1027s, ETA:   491s[> ] 662/977, 0.6 task/s, elapsed: 1028s, ETA:   489s[> ] 663/977, 0.6 task/s, elapsed: 1030s, ETA:   488s[> ] 664/977, 0.6 task/s, elapsed: 1031s, ETA:   486s[> ] 665/977, 0.6 task/s, elapsed: 1033s, ETA:   485s[> ] 666/977, 0.6 task/s, elapsed: 1034s, ETA:   483s[> ] 667/977, 0.6 task/s, elapsed: 1036s, ETA:   481s[> ] 668/977, 0.6 task/s, elapsed: 1037s, ETA:   480s[> ] 669/977, 0.6 task/s, elapsed: 1039s, ETA:   478s[> ] 670/977, 0.6 task/s, elapsed: 1040s, ETA:   477s[> ] 671/977, 0.6 task/s, elapsed: 1042s, ETA:   475s[> ] 672/977, 0.6 task/s, elapsed: 1043s, ETA:   474s[> ] 673/977, 0.6 task/s, elapsed: 1045s, ETA:   472s[> ] 674/977, 0.6 task/s, elapsed: 1047s, ETA:   470s[> ] 675/977, 0.6 task/s, elapsed: 1048s, ETA:   469s[> ] 676/977, 0.6 task/s, elapsed: 1050s, ETA:   467s[> ] 677/977, 0.6 task/s, elapsed: 1051s, ETA:   466s[> ] 678/977, 0.6 task/s, elapsed: 1053s, ETA:   464s[> ] 679/977, 0.6 task/s, elapsed: 1054s, ETA:   463s[> ] 680/977, 0.6 task/s, elapsed: 1056s, ETA:   461s[> ] 681/977, 0.6 task/s, elapsed: 1057s, ETA:   460s[> ] 682/977, 0.6 task/s, elapsed: 1059s, ETA:   458s[> ] 683/977, 0.6 task/s, elapsed: 1061s, ETA:   457s[> ] 684/977, 0.6 task/s, elapsed: 1062s, ETA:   455s[> ] 685/977, 0.6 task/s, elapsed: 1064s, ETA:   453s[> ] 686/977, 0.6 task/s, elapsed: 1065s, ETA:   452s[> ] 687/977, 0.6 task/s, elapsed: 1067s, ETA:   450s[> ] 688/977, 0.6 task/s, elapsed: 1068s, ETA:   449s[> ] 689/977, 0.6 task/s, elapsed: 1070s, ETA:   447s[> ] 690/977, 0.6 task/s, elapsed: 1072s, ETA:   446s[> ] 691/977, 0.6 task/s, elapsed: 1073s, ETA:   444s[> ] 692/977, 0.6 task/s, elapsed: 1075s, ETA:   443s[> ] 693/977, 0.6 task/s, elapsed: 1076s, ETA:   441s[> ] 694/977, 0.6 task/s, elapsed: 1078s, ETA:   439s[> ] 695/977, 0.6 task/s, elapsed: 1079s, ETA:   438s[> ] 696/977, 0.6 task/s, elapsed: 1081s, ETA:   436s[> ] 697/977, 0.6 task/s, elapsed: 1082s, ETA:   435s[> ] 698/977, 0.6 task/s, elapsed: 1084s, ETA:   433s[> ] 699/977, 0.6 task/s, elapsed: 1085s, ETA:   432s[> ] 700/977, 0.6 task/s, elapsed: 1087s, ETA:   430s[> ] 701/977, 0.6 task/s, elapsed: 1089s, ETA:   429s[> ] 702/977, 0.6 task/s, elapsed: 1090s, ETA:   427s[> ] 703/977, 0.6 task/s, elapsed: 1092s, ETA:   425s[> ] 704/977, 0.6 task/s, elapsed: 1093s, ETA:   424s[> ] 705/977, 0.6 task/s, elapsed: 1095s, ETA:   422s[> ] 706/977, 0.6 task/s, elapsed: 1096s, ETA:   421s[> ] 707/977, 0.6 task/s, elapsed: 1098s, ETA:   419s[> ] 708/977, 0.6 task/s, elapsed: 1099s, ETA:   418s[> ] 709/977, 0.6 task/s, elapsed: 1101s, ETA:   416s[> ] 710/977, 0.6 task/s, elapsed: 1102s, ETA:   415s[> ] 711/977, 0.6 task/s, elapsed: 1104s, ETA:   413s[> ] 712/977, 0.6 task/s, elapsed: 1105s, ETA:   411s[> ] 713/977, 0.6 task/s, elapsed: 1107s, ETA:   410s[> ] 714/977, 0.6 task/s, elapsed: 1108s, ETA:   408s[> ] 715/977, 0.6 task/s, elapsed: 1110s, ETA:   407s[> ] 716/977, 0.6 task/s, elapsed: 1112s, ETA:   405s[> ] 717/977, 0.6 task/s, elapsed: 1113s, ETA:   404s[> ] 718/977, 0.6 task/s, elapsed: 1115s, ETA:   402s[> ] 719/977, 0.6 task/s, elapsed: 1116s, ETA:   401s[> ] 720/977, 0.6 task/s, elapsed: 1118s, ETA:   399s[> ] 721/977, 0.6 task/s, elapsed: 1119s, ETA:   397s[> ] 722/977, 0.6 task/s, elapsed: 1121s, ETA:   396s[> ] 723/977, 0.6 task/s, elapsed: 1123s, ETA:   394s[> ] 724/977, 0.6 task/s, elapsed: 1124s, ETA:   393s[> ] 725/977, 0.6 task/s, elapsed: 1126s, ETA:   391s[> ] 726/977, 0.6 task/s, elapsed: 1127s, ETA:   390s[> ] 727/977, 0.6 task/s, elapsed: 1129s, ETA:   388s[> ] 728/977, 0.6 task/s, elapsed: 1130s, ETA:   387s[> ] 729/977, 0.6 task/s, elapsed: 1132s, ETA:   385s[> ] 730/977, 0.6 task/s, elapsed: 1133s, ETA:   383s[> ] 731/977, 0.6 task/s, elapsed: 1135s, ETA:   382s[> ] 732/977, 0.6 task/s, elapsed: 1136s, ETA:   380s[> ] 733/977, 0.6 task/s, elapsed: 1138s, ETA:   379s[> ] 734/977, 0.6 task/s, elapsed: 1139s, ETA:   377s[> ] 735/977, 0.6 task/s, elapsed: 1141s, ETA:   376s[> ] 736/977, 0.6 task/s, elapsed: 1142s, ETA:   374s[> ] 737/977, 0.6 task/s, elapsed: 1144s, ETA:   373s[> ] 738/977, 0.6 task/s, elapsed: 1146s, ETA:   371s[> ] 739/977, 0.6 task/s, elapsed: 1147s, ETA:   369s[> ] 740/977, 0.6 task/s, elapsed: 1149s, ETA:   368s[> ] 741/977, 0.6 task/s, elapsed: 1150s, ETA:   366s[> ] 742/977, 0.6 task/s, elapsed: 1152s, ETA:   365s[> ] 743/977, 0.6 task/s, elapsed: 1153s, ETA:   363s[> ] 744/977, 0.6 task/s, elapsed: 1155s, ETA:   362s[> ] 745/977, 0.6 task/s, elapsed: 1156s, ETA:   360s[> ] 746/977, 0.6 task/s, elapsed: 1158s, ETA:   359s[> ] 747/977, 0.6 task/s, elapsed: 1159s, ETA:   357s[> ] 748/977, 0.6 task/s, elapsed: 1161s, ETA:   355s[> ] 749/977, 0.6 task/s, elapsed: 1163s, ETA:   354s[> ] 750/977, 0.6 task/s, elapsed: 1164s, ETA:   352s[> ] 751/977, 0.6 task/s, elapsed: 1166s, ETA:   351s[> ] 752/977, 0.6 task/s, elapsed: 1167s, ETA:   349s[> ] 753/977, 0.6 task/s, elapsed: 1169s, ETA:   348s[> ] 754/977, 0.6 task/s, elapsed: 1170s, ETA:   346s[> ] 755/977, 0.6 task/s, elapsed: 1172s, ETA:   345s[> ] 756/977, 0.6 task/s, elapsed: 1174s, ETA:   343s[> ] 757/977, 0.6 task/s, elapsed: 1175s, ETA:   341s[> ] 758/977, 0.6 task/s, elapsed: 1177s, ETA:   340s[> ] 759/977, 0.6 task/s, elapsed: 1178s, ETA:   338s[> ] 760/977, 0.6 task/s, elapsed: 1180s, ETA:   337s[> ] 761/977, 0.6 task/s, elapsed: 1181s, ETA:   335s[> ] 762/977, 0.6 task/s, elapsed: 1183s, ETA:   334s[> ] 763/977, 0.6 task/s, elapsed: 1184s, ETA:   332s[> ] 764/977, 0.6 task/s, elapsed: 1186s, ETA:   331s[> ] 765/977, 0.6 task/s, elapsed: 1187s, ETA:   329s[> ] 766/977, 0.6 task/s, elapsed: 1189s, ETA:   327s[> ] 767/977, 0.6 task/s, elapsed: 1190s, ETA:   326s[> ] 768/977, 0.6 task/s, elapsed: 1192s, ETA:   324s[> ] 769/977, 0.6 task/s, elapsed: 1193s, ETA:   323s[> ] 770/977, 0.6 task/s, elapsed: 1195s, ETA:   321s[> ] 771/977, 0.6 task/s, elapsed: 1197s, ETA:   320s[> ] 772/977, 0.6 task/s, elapsed: 1198s, ETA:   318s[> ] 773/977, 0.6 task/s, elapsed: 1200s, ETA:   317s[> ] 774/977, 0.6 task/s, elapsed: 1201s, ETA:   315s[> ] 775/977, 0.6 task/s, elapsed: 1203s, ETA:   313s[> ] 776/977, 0.6 task/s, elapsed: 1204s, ETA:   312s[> ] 777/977, 0.6 task/s, elapsed: 1206s, ETA:   310s[> ] 778/977, 0.6 task/s, elapsed: 1207s, ETA:   309s[> ] 779/977, 0.6 task/s, elapsed: 1209s, ETA:   307s[> ] 780/977, 0.6 task/s, elapsed: 1210s, ETA:   306s[> ] 781/977, 0.6 task/s, elapsed: 1212s, ETA:   304s[> ] 782/977, 0.6 task/s, elapsed: 1213s, ETA:   303s[> ] 783/977, 0.6 task/s, elapsed: 1215s, ETA:   301s[> ] 784/977, 0.6 task/s, elapsed: 1216s, ETA:   299s[> ] 785/977, 0.6 task/s, elapsed: 1218s, ETA:   298s[> ] 786/977, 0.6 task/s, elapsed: 1219s, ETA:   296s[> ] 787/977, 0.6 task/s, elapsed: 1221s, ETA:   295s[> ] 788/977, 0.6 task/s, elapsed: 1223s, ETA:   293s[> ] 789/977, 0.6 task/s, elapsed: 1224s, ETA:   292s[> ] 790/977, 0.6 task/s, elapsed: 1226s, ETA:   290s[> ] 791/977, 0.6 task/s, elapsed: 1227s, ETA:   289s[> ] 792/977, 0.6 task/s, elapsed: 1229s, ETA:   287s[> ] 793/977, 0.6 task/s, elapsed: 1230s, ETA:   285s[> ] 794/977, 0.6 task/s, elapsed: 1232s, ETA:   284s[> ] 795/977, 0.6 task/s, elapsed: 1233s, ETA:   282s[> ] 796/977, 0.6 task/s, elapsed: 1235s, ETA:   281s[> ] 797/977, 0.6 task/s, elapsed: 1236s, ETA:   279s[> ] 798/977, 0.6 task/s, elapsed: 1238s, ETA:   278s[> ] 799/977, 0.6 task/s, elapsed: 1239s, ETA:   276s[> ] 800/977, 0.6 task/s, elapsed: 1241s, ETA:   275s[> ] 801/977, 0.6 task/s, elapsed: 1242s, ETA:   273s[> ] 802/977, 0.6 task/s, elapsed: 1244s, ETA:   271s[> ] 803/977, 0.6 task/s, elapsed: 1246s, ETA:   270s[> ] 804/977, 0.6 task/s, elapsed: 1247s, ETA:   268s[> ] 805/977, 0.6 task/s, elapsed: 1249s, ETA:   267s[> ] 806/977, 0.6 task/s, elapsed: 1250s, ETA:   265s[> ] 807/977, 0.6 task/s, elapsed: 1252s, ETA:   264s[> ] 808/977, 0.6 task/s, elapsed: 1253s, ETA:   262s[> ] 809/977, 0.6 task/s, elapsed: 1255s, ETA:   261s[> ] 810/977, 0.6 task/s, elapsed: 1256s, ETA:   259s[> ] 811/977, 0.6 task/s, elapsed: 1258s, ETA:   257s[> ] 812/977, 0.6 task/s, elapsed: 1259s, ETA:   256s[> ] 813/977, 0.6 task/s, elapsed: 1261s, ETA:   254s[> ] 814/977, 0.6 task/s, elapsed: 1262s, ETA:   253s[> ] 815/977, 0.6 task/s, elapsed: 1264s, ETA:   251s[> ] 816/977, 0.6 task/s, elapsed: 1266s, ETA:   250s[> ] 817/977, 0.6 task/s, elapsed: 1267s, ETA:   248s[> ] 818/977, 0.6 task/s, elapsed: 1269s, ETA:   247s[> ] 819/977, 0.6 task/s, elapsed: 1270s, ETA:   245s[> ] 820/977, 0.6 task/s, elapsed: 1272s, ETA:   243s[> ] 821/977, 0.6 task/s, elapsed: 1273s, ETA:   242s[> ] 822/977, 0.6 task/s, elapsed: 1275s, ETA:   240s[> ] 823/977, 0.6 task/s, elapsed: 1276s, ETA:   239s[> ] 824/977, 0.6 task/s, elapsed: 1278s, ETA:   237s[> ] 825/977, 0.6 task/s, elapsed: 1279s, ETA:   236s[> ] 826/977, 0.6 task/s, elapsed: 1281s, ETA:   234s[> ] 827/977, 0.6 task/s, elapsed: 1282s, ETA:   233s[> ] 828/977, 0.6 task/s, elapsed: 1284s, ETA:   231s[> ] 829/977, 0.6 task/s, elapsed: 1286s, ETA:   230s[> ] 830/977, 0.6 task/s, elapsed: 1287s, ETA:   228s[> ] 831/977, 0.6 task/s, elapsed: 1289s, ETA:   226s[> ] 832/977, 0.6 task/s, elapsed: 1290s, ETA:   225s[> ] 833/977, 0.6 task/s, elapsed: 1292s, ETA:   223s[> ] 834/977, 0.6 task/s, elapsed: 1293s, ETA:   222s[> ] 835/977, 0.6 task/s, elapsed: 1295s, ETA:   220s[> ] 836/977, 0.6 task/s, elapsed: 1296s, ETA:   219s[> ] 837/977, 0.6 task/s, elapsed: 1298s, ETA:   217s[> ] 838/977, 0.6 task/s, elapsed: 1300s, ETA:   216s[> ] 839/977, 0.6 task/s, elapsed: 1301s, ETA:   214s[> ] 840/977, 0.6 task/s, elapsed: 1303s, ETA:   212s[> ] 841/977, 0.6 task/s, elapsed: 1304s, ETA:   211s[> ] 842/977, 0.6 task/s, elapsed: 1306s, ETA:   209s[> ] 843/977, 0.6 task/s, elapsed: 1307s, ETA:   208s[> ] 844/977, 0.6 task/s, elapsed: 1309s, ETA:   206s[> ] 845/977, 0.6 task/s, elapsed: 1310s, ETA:   205s[> ] 846/977, 0.6 task/s, elapsed: 1312s, ETA:   203s[> ] 847/977, 0.6 task/s, elapsed: 1313s, ETA:   202s[> ] 848/977, 0.6 task/s, elapsed: 1315s, ETA:   200s[> ] 849/977, 0.6 task/s, elapsed: 1316s, ETA:   198s[> ] 850/977, 0.6 task/s, elapsed: 1318s, ETA:   197s[> ] 851/977, 0.6 task/s, elapsed: 1319s, ETA:   195s[> ] 852/977, 0.6 task/s, elapsed: 1321s, ETA:   194s[> ] 853/977, 0.6 task/s, elapsed: 1323s, ETA:   192s[> ] 854/977, 0.6 task/s, elapsed: 1324s, ETA:   191s[> ] 855/977, 0.6 task/s, elapsed: 1326s, ETA:   189s[> ] 856/977, 0.6 task/s, elapsed: 1327s, ETA:   188s[> ] 857/977, 0.6 task/s, elapsed: 1329s, ETA:   186s[> ] 858/977, 0.6 task/s, elapsed: 1330s, ETA:   184s[> ] 859/977, 0.6 task/s, elapsed: 1332s, ETA:   183s[> ] 860/977, 0.6 task/s, elapsed: 1333s, ETA:   181s[> ] 861/977, 0.6 task/s, elapsed: 1335s, ETA:   180s[> ] 862/977, 0.6 task/s, elapsed: 1336s, ETA:   178s[> ] 863/977, 0.6 task/s, elapsed: 1338s, ETA:   177s[> ] 864/977, 0.6 task/s, elapsed: 1339s, ETA:   175s[> ] 865/977, 0.6 task/s, elapsed: 1341s, ETA:   174s[> ] 866/977, 0.6 task/s, elapsed: 1343s, ETA:   172s[> ] 867/977, 0.6 task/s, elapsed: 1344s, ETA:   171s[> ] 868/977, 0.6 task/s, elapsed: 1346s, ETA:   169s[> ] 869/977, 0.6 task/s, elapsed: 1347s, ETA:   167s[> ] 870/977, 0.6 task/s, elapsed: 1349s, ETA:   166s[> ] 871/977, 0.6 task/s, elapsed: 1350s, ETA:   164s[> ] 872/977, 0.6 task/s, elapsed: 1352s, ETA:   163s[> ] 873/977, 0.6 task/s, elapsed: 1353s, ETA:   161s[> ] 874/977, 0.6 task/s, elapsed: 1355s, ETA:   160s[> ] 875/977, 0.6 task/s, elapsed: 1356s, ETA:   158s[> ] 876/977, 0.6 task/s, elapsed: 1358s, ETA:   157s[> ] 877/977, 0.6 task/s, elapsed: 1359s, ETA:   155s[> ] 878/977, 0.6 task/s, elapsed: 1361s, ETA:   153s[> ] 879/977, 0.6 task/s, elapsed: 1363s, ETA:   152s[> ] 880/977, 0.6 task/s, elapsed: 1364s, ETA:   150s[> ] 881/977, 0.6 task/s, elapsed: 1366s, ETA:   149s[> ] 882/977, 0.6 task/s, elapsed: 1367s, ETA:   147s[> ] 883/977, 0.6 task/s, elapsed: 1369s, ETA:   146s[> ] 884/977, 0.6 task/s, elapsed: 1371s, ETA:   144s[> ] 885/977, 0.6 task/s, elapsed: 1373s, ETA:   143s[> ] 886/977, 0.6 task/s, elapsed: 1374s, ETA:   141s[> ] 887/977, 0.6 task/s, elapsed: 1376s, ETA:   140s[> ] 888/977, 0.6 task/s, elapsed: 1378s, ETA:   138s[> ] 889/977, 0.6 task/s, elapsed: 1379s, ETA:   137s[> ] 890/977, 0.6 task/s, elapsed: 1381s, ETA:   135s[> ] 891/977, 0.6 task/s, elapsed: 1382s, ETA:   133s[> ] 892/977, 0.6 task/s, elapsed: 1384s, ETA:   132s[> ] 893/977, 0.6 task/s, elapsed: 1386s, ETA:   130s[> ] 894/977, 0.6 task/s, elapsed: 1388s, ETA:   129s[> ] 895/977, 0.6 task/s, elapsed: 1389s, ETA:   127s[> ] 896/977, 0.6 task/s, elapsed: 1391s, ETA:   126s[> ] 897/977, 0.6 task/s, elapsed: 1393s, ETA:   124s[> ] 898/977, 0.6 task/s, elapsed: 1394s, ETA:   123s[> ] 899/977, 0.6 task/s, elapsed: 1396s, ETA:   121s[> ] 900/977, 0.6 task/s, elapsed: 1398s, ETA:   120s[> ] 901/977, 0.6 task/s, elapsed: 1400s, ETA:   118s[> ] 902/977, 0.6 task/s, elapsed: 1401s, ETA:   116s[> ] 903/977, 0.6 task/s, elapsed: 1403s, ETA:   115s[> ] 904/977, 0.6 task/s, elapsed: 1404s, ETA:   113s[> ] 905/977, 0.6 task/s, elapsed: 1406s, ETA:   112s[> ] 906/977, 0.6 task/s, elapsed: 1407s, ETA:   110s[> ] 907/977, 0.6 task/s, elapsed: 1409s, ETA:   109s[> ] 908/977, 0.6 task/s, elapsed: 1410s, ETA:   107s[> ] 909/977, 0.6 task/s, elapsed: 1412s, ETA:   106s[> ] 910/977, 0.6 task/s, elapsed: 1414s, ETA:   104s[> ] 911/977, 0.6 task/s, elapsed: 1415s, ETA:   103s[> ] 912/977, 0.6 task/s, elapsed: 1417s, ETA:   101s[> ] 913/977, 0.6 task/s, elapsed: 1419s, ETA:    99s[> ] 914/977, 0.6 task/s, elapsed: 1420s, ETA:    98s[> ] 915/977, 0.6 task/s, elapsed: 1422s, ETA:    96s[> ] 916/977, 0.6 task/s, elapsed: 1424s, ETA:    95s[> ] 917/977, 0.6 task/s, elapsed: 1425s, ETA:    93s[> ] 918/977, 0.6 task/s, elapsed: 1427s, ETA:    92s[> ] 919/977, 0.6 task/s, elapsed: 1428s, ETA:    90s[> ] 920/977, 0.6 task/s, elapsed: 1430s, ETA:    89s[> ] 921/977, 0.6 task/s, elapsed: 1431s, ETA:    87s[> ] 922/977, 0.6 task/s, elapsed: 1433s, ETA:    85s[> ] 923/977, 0.6 task/s, elapsed: 1434s, ETA:    84s[> ] 924/977, 0.6 task/s, elapsed: 1436s, ETA:    82s[> ] 925/977, 0.6 task/s, elapsed: 1437s, ETA:    81s[> ] 926/977, 0.6 task/s, elapsed: 1439s, ETA:    79s[> ] 927/977, 0.6 task/s, elapsed: 1440s, ETA:    78s[> ] 928/977, 0.6 task/s, elapsed: 1442s, ETA:    76s[> ] 929/977, 0.6 task/s, elapsed: 1443s, ETA:    75s[> ] 930/977, 0.6 task/s, elapsed: 1445s, ETA:    73s[> ] 931/977, 0.6 task/s, elapsed: 1446s, ETA:    71s[> ] 932/977, 0.6 task/s, elapsed: 1448s, ETA:    70s[> ] 933/977, 0.6 task/s, elapsed: 1449s, ETA:    68s[> ] 934/977, 0.6 task/s, elapsed: 1451s, ETA:    67s[> ] 935/977, 0.6 task/s, elapsed: 1453s, ETA:    65s[> ] 936/977, 0.6 task/s, elapsed: 1454s, ETA:    64s[> ] 937/977, 0.6 task/s, elapsed: 1456s, ETA:    62s[> ] 938/977, 0.6 task/s, elapsed: 1457s, ETA:    61s[> ] 939/977, 0.6 task/s, elapsed: 1459s, ETA:    59s[> ] 940/977, 0.6 task/s, elapsed: 1460s, ETA:    57s[> ] 941/977, 0.6 task/s, elapsed: 1462s, ETA:    56s[> ] 942/977, 0.6 task/s, elapsed: 1464s, ETA:    54s[> ] 943/977, 0.6 task/s, elapsed: 1465s, ETA:    53s[> ] 944/977, 0.6 task/s, elapsed: 1467s, ETA:    51s[> ] 945/977, 0.6 task/s, elapsed: 1468s, ETA:    50s[> ] 946/977, 0.6 task/s, elapsed: 1470s, ETA:    48s[> ] 947/977, 0.6 task/s, elapsed: 1471s, ETA:    47s[> ] 948/977, 0.6 task/s, elapsed: 1473s, ETA:    45s[> ] 949/977, 0.6 task/s, elapsed: 1474s, ETA:    44s[> ] 950/977, 0.6 task/s, elapsed: 1476s, ETA:    42s[> ] 951/977, 0.6 task/s, elapsed: 1477s, ETA:    40s[> ] 952/977, 0.6 task/s, elapsed: 1479s, ETA:    39s[> ] 953/977, 0.6 task/s, elapsed: 1481s, ETA:    37s[> ] 954/977, 0.6 task/s, elapsed: 1482s, ETA:    36s[> ] 955/977, 0.6 task/s, elapsed: 1484s, ETA:    34s[> ] 956/977, 0.6 task/s, elapsed: 1485s, ETA:    33s[> ] 957/977, 0.6 task/s, elapsed: 1487s, ETA:    31s[> ] 958/977, 0.6 task/s, elapsed: 1488s, ETA:    30s[> ] 959/977, 0.6 task/s, elapsed: 1490s, ETA:    28s[> ] 960/977, 0.6 task/s, elapsed: 1491s, ETA:    26s[> ] 961/977, 0.6 task/s, elapsed: 1493s, ETA:    25s[> ] 962/977, 0.6 task/s, elapsed: 1494s, ETA:    23s[> ] 963/977, 0.6 task/s, elapsed: 1496s, ETA:    22s[> ] 964/977, 0.6 task/s, elapsed: 1498s, ETA:    20s[> ] 965/977, 0.6 task/s, elapsed: 1499s, ETA:    19s[> ] 966/977, 0.6 task/s, elapsed: 1501s, ETA:    17s[> ] 967/977, 0.6 task/s, elapsed: 1502s, ETA:    16s[> ] 968/977, 0.6 task/s, elapsed: 1504s, ETA:    14s[> ] 969/977, 0.6 task/s, elapsed: 1505s, ETA:    12s[> ] 970/977, 0.6 task/s, elapsed: 1507s, ETA:    11s[> ] 971/977, 0.6 task/s, elapsed: 1508s, ETA:     9s[> ] 972/977, 0.6 task/s, elapsed: 1510s, ETA:     8s[> ] 973/977, 0.6 task/s, elapsed: 1511s, ETA:     6s[> ] 974/977, 0.6 task/s, elapsed: 1513s, ETA:     5s[> ] 975/977, 0.6 task/s, elapsed: 1514s, ETA:     3s[> ] 976/977, 0.6 task/s, elapsed: 1516s, ETA:     2s[>>] 977/977, 0.6 task/s, elapsed: 1517s, ETA:     0s2021-10-01 09:38:53,653 - mmdet - INFO - Evaluating bbox...
2021-10-01 09:38:58,533 - mmdet - INFO - Exp name: waste_hr40_BGAug.py
2021-10-01 09:38:58,535 - mmdet - INFO - Epoch(val) [1][977]	bbox_mAP: 0.1040, bbox_mAP_50: 0.1700, bbox_mAP_75: 0.1160, bbox_mAP_s: 0.0050, bbox_mAP_m: 0.0500, bbox_mAP_l: 0.1270, bbox_mAP_copypaste: 0.104 0.170 0.116 0.005 0.050 0.127
Loading and preparing results...
DONE (t=0.04s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=3.61s).
Accumulating evaluation results...
DONE (t=0.87s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.104
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.170
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.116
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.005
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.050
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.127
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.282
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.282
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.282
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.005
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.126
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.332
2021-10-01 09:39:21,659 - mmdet - INFO - Epoch [2][10/738]	lr: 7.132e-05, eta: 16:14:41, time: 2.310, data_time: 0.267, memory: 27519, loss_rpn_cls: 0.1025, loss_rpn_bbox: 0.0311, s0.loss_cls: 0.3881, s0.acc: 90.8740, s0.loss_bbox: 0.1539, s1.loss_cls: 0.1635, s1.acc: 92.1729, s1.loss_bbox: 0.1051, s2.loss_cls: 0.0671, s2.acc: 93.3252, s2.loss_bbox: 0.0431, loss: 1.0543, grad_norm: 3.6419
2021-10-01 09:39:43,016 - mmdet - INFO - Epoch [2][20/738]	lr: 7.132e-05, eta: 16:14:59, time: 2.136, data_time: 0.020, memory: 27519, loss_rpn_cls: 0.0841, loss_rpn_bbox: 0.0227, s0.loss_cls: 0.3199, s0.acc: 92.4658, s0.loss_bbox: 0.1213, s1.loss_cls: 0.1402, s1.acc: 93.1348, s1.loss_bbox: 0.0767, s2.loss_cls: 0.0588, s2.acc: 93.9233, s2.loss_bbox: 0.0317, loss: 0.8554, grad_norm: 2.7276
2021-10-01 09:40:03,785 - mmdet - INFO - Epoch [2][30/738]	lr: 7.132e-05, eta: 16:14:55, time: 2.077, data_time: 0.018, memory: 27519, loss_rpn_cls: 0.0744, loss_rpn_bbox: 0.0248, s0.loss_cls: 0.3334, s0.acc: 91.2817, s0.loss_bbox: 0.1369, s1.loss_cls: 0.1482, s1.acc: 91.8994, s1.loss_bbox: 0.0936, s2.loss_cls: 0.0669, s2.acc: 92.2825, s2.loss_bbox: 0.0465, loss: 0.9247, grad_norm: 2.4321
2021-10-01 09:40:24,703 - mmdet - INFO - Epoch [2][40/738]	lr: 7.132e-05, eta: 16:14:56, time: 2.092, data_time: 0.018, memory: 27519, loss_rpn_cls: 0.0666, loss_rpn_bbox: 0.0229, s0.loss_cls: 0.3375, s0.acc: 91.9604, s0.loss_bbox: 0.1314, s1.loss_cls: 0.1453, s1.acc: 92.3825, s1.loss_bbox: 0.0831, s2.loss_cls: 0.0602, s2.acc: 93.1470, s2.loss_bbox: 0.0339, loss: 0.8810, grad_norm: 2.9563
2021-10-01 09:40:45,901 - mmdet - INFO - Epoch [2][50/738]	lr: 7.132e-05, eta: 16:15:06, time: 2.120, data_time: 0.017, memory: 27519, loss_rpn_cls: 0.1078, loss_rpn_bbox: 0.0351, s0.loss_cls: 0.3644, s0.acc: 91.0693, s0.loss_bbox: 0.1531, s1.loss_cls: 0.1558, s1.acc: 92.0166, s1.loss_bbox: 0.1001, s2.loss_cls: 0.0658, s2.acc: 93.0591, s2.loss_bbox: 0.0412, loss: 1.0233, grad_norm: 2.9624
2021-10-01 09:41:06,212 - mmdet - INFO - Epoch [2][60/738]	lr: 7.132e-05, eta: 16:14:44, time: 2.031, data_time: 0.019, memory: 27519, loss_rpn_cls: 0.0886, loss_rpn_bbox: 0.0293, s0.loss_cls: 0.3266, s0.acc: 91.3965, s0.loss_bbox: 0.1354, s1.loss_cls: 0.1481, s1.acc: 91.8293, s1.loss_bbox: 0.0920, s2.loss_cls: 0.0641, s2.acc: 92.8423, s2.loss_bbox: 0.0398, loss: 0.9239, grad_norm: 3.1657
2021-10-01 09:41:26,792 - mmdet - INFO - Epoch [2][70/738]	lr: 7.132e-05, eta: 16:14:32, time: 2.058, data_time: 0.017, memory: 27519, loss_rpn_cls: 0.0834, loss_rpn_bbox: 0.0227, s0.loss_cls: 0.3487, s0.acc: 91.7847, s0.loss_bbox: 0.1357, s1.loss_cls: 0.1501, s1.acc: 92.7930, s1.loss_bbox: 0.0853, s2.loss_cls: 0.0649, s2.acc: 93.5645, s2.loss_bbox: 0.0357, loss: 0.9264, grad_norm: 3.6004
2021-10-01 09:41:46,548 - mmdet - INFO - Epoch [2][80/738]	lr: 7.132e-05, eta: 16:13:50, time: 1.976, data_time: 0.018, memory: 27519, loss_rpn_cls: 0.1085, loss_rpn_bbox: 0.0326, s0.loss_cls: 0.3541, s0.acc: 91.1328, s0.loss_bbox: 0.1378, s1.loss_cls: 0.1555, s1.acc: 91.8724, s1.loss_bbox: 0.0920, s2.loss_cls: 0.0641, s2.acc: 93.2924, s2.loss_bbox: 0.0360, loss: 0.9807, grad_norm: 2.9057
2021-10-01 09:42:06,388 - mmdet - INFO - Epoch [2][90/738]	lr: 7.132e-05, eta: 16:13:12, time: 1.984, data_time: 0.017, memory: 27519, loss_rpn_cls: 0.0879, loss_rpn_bbox: 0.0229, s0.loss_cls: 0.3192, s0.acc: 92.2388, s0.loss_bbox: 0.1182, s1.loss_cls: 0.1395, s1.acc: 93.0242, s1.loss_bbox: 0.0794, s2.loss_cls: 0.0572, s2.acc: 94.0869, s2.loss_bbox: 0.0293, loss: 0.8537, grad_norm: 2.3471
2021-10-01 09:42:26,652 - mmdet - INFO - Epoch [2][100/738]	lr: 7.132e-05, eta: 16:12:48, time: 2.026, data_time: 0.018, memory: 27519, loss_rpn_cls: 0.0994, loss_rpn_bbox: 0.0275, s0.loss_cls: 0.3483, s0.acc: 91.4844, s0.loss_bbox: 0.1288, s1.loss_cls: 0.1568, s1.acc: 91.9221, s1.loss_bbox: 0.0887, s2.loss_cls: 0.0672, s2.acc: 92.9163, s2.loss_bbox: 0.0399, loss: 0.9566, grad_norm: 3.3477
2021-10-01 09:42:46,807 - mmdet - INFO - Epoch [2][110/738]	lr: 7.132e-05, eta: 16:12:21, time: 2.016, data_time: 0.017, memory: 27519, loss_rpn_cls: 0.0889, loss_rpn_bbox: 0.0268, s0.loss_cls: 0.3196, s0.acc: 91.9678, s0.loss_bbox: 0.1279, s1.loss_cls: 0.1443, s1.acc: 92.3413, s1.loss_bbox: 0.0888, s2.loss_cls: 0.0640, s2.acc: 92.7856, s2.loss_bbox: 0.0402, loss: 0.9005, grad_norm: 2.8257
2021-10-01 09:43:08,328 - mmdet - INFO - Epoch [2][120/738]	lr: 7.132e-05, eta: 16:12:40, time: 2.152, data_time: 0.018, memory: 27519, loss_rpn_cls: 0.0972, loss_rpn_bbox: 0.0188, s0.loss_cls: 0.3012, s0.acc: 92.9663, s0.loss_bbox: 0.1011, s1.loss_cls: 0.1362, s1.acc: 92.8589, s1.loss_bbox: 0.0736, s2.loss_cls: 0.0573, s2.acc: 93.5912, s2.loss_bbox: 0.0328, loss: 0.8182, grad_norm: 2.5101
2021-10-01 09:43:29,072 - mmdet - INFO - Epoch [2][130/738]	lr: 7.132e-05, eta: 16:12:32, time: 2.074, data_time: 0.018, memory: 27519, loss_rpn_cls: 0.0802, loss_rpn_bbox: 0.0236, s0.loss_cls: 0.3099, s0.acc: 92.2241, s0.loss_bbox: 0.1239, s1.loss_cls: 0.1385, s1.acc: 92.8516, s1.loss_bbox: 0.0821, s2.loss_cls: 0.0569, s2.acc: 94.0137, s2.loss_bbox: 0.0330, loss: 0.8480, grad_norm: 2.3040
2021-10-01 09:43:49,875 - mmdet - INFO - Epoch [2][140/738]	lr: 7.132e-05, eta: 16:12:26, time: 2.080, data_time: 0.018, memory: 27519, loss_rpn_cls: 0.0758, loss_rpn_bbox: 0.0189, s0.loss_cls: 0.2982, s0.acc: 92.4536, s0.loss_bbox: 0.1209, s1.loss_cls: 0.1346, s1.acc: 92.7588, s1.loss_bbox: 0.0804, s2.loss_cls: 0.0568, s2.acc: 93.6963, s2.loss_bbox: 0.0320, loss: 0.8176, grad_norm: 2.5805
2021-10-01 09:44:10,410 - mmdet - INFO - Epoch [2][150/738]	lr: 7.132e-05, eta: 16:12:11, time: 2.053, data_time: 0.020, memory: 27519, loss_rpn_cls: 0.0825, loss_rpn_bbox: 0.0215, s0.loss_cls: 0.3333, s0.acc: 91.6943, s0.loss_bbox: 0.1330, s1.loss_cls: 0.1498, s1.acc: 92.0650, s1.loss_bbox: 0.0980, s2.loss_cls: 0.0647, s2.acc: 92.8375, s2.loss_bbox: 0.0434, loss: 0.9262, grad_norm: 3.0100
2021-10-01 09:44:31,534 - mmdet - INFO - Epoch [2][160/738]	lr: 7.132e-05, eta: 16:12:15, time: 2.112, data_time: 0.019, memory: 27519, loss_rpn_cls: 0.0711, loss_rpn_bbox: 0.0201, s0.loss_cls: 0.3175, s0.acc: 92.4658, s0.loss_bbox: 0.1308, s1.loss_cls: 0.1316, s1.acc: 93.5938, s1.loss_bbox: 0.0820, s2.loss_cls: 0.0521, s2.acc: 95.1025, s2.loss_bbox: 0.0321, loss: 0.8372, grad_norm: 2.7947
2021-10-01 09:44:53,049 - mmdet - INFO - Epoch [2][170/738]	lr: 7.132e-05, eta: 16:12:30, time: 2.151, data_time: 0.018, memory: 27519, loss_rpn_cls: 0.0721, loss_rpn_bbox: 0.0241, s0.loss_cls: 0.3560, s0.acc: 91.2500, s0.loss_bbox: 0.1392, s1.loss_cls: 0.1543, s1.acc: 92.0190, s1.loss_bbox: 0.0938, s2.loss_cls: 0.0642, s2.acc: 93.3301, s2.loss_bbox: 0.0381, loss: 0.9418, grad_norm: 2.6475
2021-10-01 09:45:14,153 - mmdet - INFO - Epoch [2][180/738]	lr: 7.132e-05, eta: 16:12:32, time: 2.110, data_time: 0.020, memory: 27519, loss_rpn_cls: 0.0717, loss_rpn_bbox: 0.0205, s0.loss_cls: 0.2936, s0.acc: 92.8809, s0.loss_bbox: 0.1035, s1.loss_cls: 0.1421, s1.acc: 92.6287, s1.loss_bbox: 0.0797, s2.loss_cls: 0.0629, s2.acc: 93.1562, s2.loss_bbox: 0.0372, loss: 0.8112, grad_norm: 2.8233
2021-10-01 09:45:34,861 - mmdet - INFO - Epoch [2][190/738]	lr: 7.132e-05, eta: 16:12:21, time: 2.071, data_time: 0.017, memory: 27519, loss_rpn_cls: 0.0757, loss_rpn_bbox: 0.0256, s0.loss_cls: 0.3160, s0.acc: 92.0996, s0.loss_bbox: 0.1263, s1.loss_cls: 0.1394, s1.acc: 92.5684, s1.loss_bbox: 0.0808, s2.loss_cls: 0.0608, s2.acc: 93.5544, s2.loss_bbox: 0.0349, loss: 0.8595, grad_norm: 2.8362
2021-10-01 09:45:55,739 - mmdet - INFO - Epoch [2][200/738]	lr: 7.132e-05, eta: 16:12:15, time: 2.088, data_time: 0.021, memory: 27519, loss_rpn_cls: 0.1031, loss_rpn_bbox: 0.0268, s0.loss_cls: 0.3511, s0.acc: 91.2793, s0.loss_bbox: 0.1396, s1.loss_cls: 0.1505, s1.acc: 92.1997, s1.loss_bbox: 0.0885, s2.loss_cls: 0.0636, s2.acc: 93.4082, s2.loss_bbox: 0.0372, loss: 0.9605, grad_norm: 3.1564
2021-10-01 09:46:16,458 - mmdet - INFO - Epoch [2][210/738]	lr: 7.132e-05, eta: 16:12:04, time: 2.072, data_time: 0.018, memory: 27519, loss_rpn_cls: 0.0748, loss_rpn_bbox: 0.0254, s0.loss_cls: 0.3625, s0.acc: 90.8496, s0.loss_bbox: 0.1485, s1.loss_cls: 0.1589, s1.acc: 91.7713, s1.loss_bbox: 0.1042, s2.loss_cls: 0.0640, s2.acc: 93.2412, s2.loss_bbox: 0.0422, loss: 0.9804, grad_norm: 2.4755
2021-10-01 09:46:36,210 - mmdet - INFO - Epoch [2][220/738]	lr: 7.132e-05, eta: 16:11:24, time: 1.975, data_time: 0.018, memory: 27519, loss_rpn_cls: 0.0881, loss_rpn_bbox: 0.0268, s0.loss_cls: 0.3584, s0.acc: 91.3403, s0.loss_bbox: 0.1459, s1.loss_cls: 0.1565, s1.acc: 92.2510, s1.loss_bbox: 0.0901, s2.loss_cls: 0.0621, s2.acc: 94.0137, s2.loss_bbox: 0.0326, loss: 0.9604, grad_norm: 2.5012
2021-10-01 09:46:56,885 - mmdet - INFO - Epoch [2][230/738]	lr: 7.132e-05, eta: 16:11:11, time: 2.068, data_time: 0.018, memory: 27519, loss_rpn_cls: 0.0991, loss_rpn_bbox: 0.0303, s0.loss_cls: 0.3799, s0.acc: 90.4443, s0.loss_bbox: 0.1457, s1.loss_cls: 0.1685, s1.acc: 91.0560, s1.loss_bbox: 0.0925, s2.loss_cls: 0.0710, s2.acc: 92.1024, s2.loss_bbox: 0.0400, loss: 1.0270, grad_norm: 2.9333
2021-10-01 09:47:17,364 - mmdet - INFO - Epoch [2][240/738]	lr: 7.132e-05, eta: 16:10:53, time: 2.048, data_time: 0.017, memory: 27519, loss_rpn_cls: 0.1052, loss_rpn_bbox: 0.0289, s0.loss_cls: 0.3644, s0.acc: 91.3647, s0.loss_bbox: 0.1473, s1.loss_cls: 0.1495, s1.acc: 92.9675, s1.loss_bbox: 0.0852, s2.loss_cls: 0.0607, s2.acc: 94.1774, s2.loss_bbox: 0.0319, loss: 0.9731, grad_norm: 3.0235
2021-10-01 09:47:38,645 - mmdet - INFO - Epoch [2][250/738]	lr: 7.132e-05, eta: 16:10:57, time: 2.128, data_time: 0.018, memory: 27519, loss_rpn_cls: 0.0812, loss_rpn_bbox: 0.0292, s0.loss_cls: 0.3317, s0.acc: 91.3843, s0.loss_bbox: 0.1294, s1.loss_cls: 0.1497, s1.acc: 91.7035, s1.loss_bbox: 0.0934, s2.loss_cls: 0.0639, s2.acc: 92.6275, s2.loss_bbox: 0.0392, loss: 0.9177, grad_norm: 2.5505
2021-10-01 09:47:58,845 - mmdet - INFO - Epoch [2][260/738]	lr: 7.132e-05, eta: 16:10:31, time: 2.020, data_time: 0.018, memory: 27519, loss_rpn_cls: 0.1086, loss_rpn_bbox: 0.0305, s0.loss_cls: 0.3462, s0.acc: 91.4478, s0.loss_bbox: 0.1369, s1.loss_cls: 0.1457, s1.acc: 92.3837, s1.loss_bbox: 0.0912, s2.loss_cls: 0.0603, s2.acc: 93.6498, s2.loss_bbox: 0.0408, loss: 0.9602, grad_norm: 3.1013
2021-10-01 09:48:19,713 - mmdet - INFO - Epoch [2][270/738]	lr: 7.132e-05, eta: 16:10:23, time: 2.087, data_time: 0.018, memory: 27519, loss_rpn_cls: 0.0859, loss_rpn_bbox: 0.0245, s0.loss_cls: 0.3062, s0.acc: 92.2925, s0.loss_bbox: 0.1206, s1.loss_cls: 0.1353, s1.acc: 92.8662, s1.loss_bbox: 0.0819, s2.loss_cls: 0.0581, s2.acc: 93.8086, s2.loss_bbox: 0.0345, loss: 0.8470, grad_norm: 2.4853
2021-10-01 09:48:40,583 - mmdet - INFO - Epoch [2][280/738]	lr: 7.132e-05, eta: 16:10:15, time: 2.087, data_time: 0.020, memory: 27519, loss_rpn_cls: 0.0837, loss_rpn_bbox: 0.0247, s0.loss_cls: 0.3505, s0.acc: 91.5698, s0.loss_bbox: 0.1243, s1.loss_cls: 0.1546, s1.acc: 92.0661, s1.loss_bbox: 0.0854, s2.loss_cls: 0.0676, s2.acc: 93.0041, s2.loss_bbox: 0.0397, loss: 0.9306, grad_norm: 2.8373
2021-10-01 09:49:01,726 - mmdet - INFO - Epoch [2][290/738]	lr: 7.132e-05, eta: 16:10:15, time: 2.114, data_time: 0.020, memory: 27519, loss_rpn_cls: 0.1057, loss_rpn_bbox: 0.0483, s0.loss_cls: 0.4032, s0.acc: 89.4922, s0.loss_bbox: 0.1720, s1.loss_cls: 0.1815, s1.acc: 90.0976, s1.loss_bbox: 0.1212, s2.loss_cls: 0.0771, s2.acc: 91.4749, s2.loss_bbox: 0.0535, loss: 1.1625, grad_norm: 3.6985
2021-10-01 09:49:23,168 - mmdet - INFO - Epoch [2][300/738]	lr: 7.132e-05, eta: 16:10:22, time: 2.144, data_time: 0.020, memory: 27519, loss_rpn_cls: 0.0865, loss_rpn_bbox: 0.0223, s0.loss_cls: 0.3319, s0.acc: 92.3779, s0.loss_bbox: 0.1203, s1.loss_cls: 0.1443, s1.acc: 93.0516, s1.loss_bbox: 0.0837, s2.loss_cls: 0.0630, s2.acc: 93.5527, s2.loss_bbox: 0.0357, loss: 0.8878, grad_norm: 2.9339
2021-10-01 09:49:43,195 - mmdet - INFO - Epoch [2][310/738]	lr: 7.132e-05, eta: 16:09:50, time: 2.003, data_time: 0.017, memory: 27519, loss_rpn_cls: 0.0670, loss_rpn_bbox: 0.0215, s0.loss_cls: 0.3134, s0.acc: 92.3071, s0.loss_bbox: 0.1202, s1.loss_cls: 0.1382, s1.acc: 92.8101, s1.loss_bbox: 0.0843, s2.loss_cls: 0.0591, s2.acc: 93.5571, s2.loss_bbox: 0.0383, loss: 0.8420, grad_norm: 2.3435
2021-10-01 09:50:03,820 - mmdet - INFO - Epoch [2][320/738]	lr: 7.132e-05, eta: 16:09:35, time: 2.062, data_time: 0.017, memory: 27519, loss_rpn_cls: 0.0799, loss_rpn_bbox: 0.0235, s0.loss_cls: 0.3202, s0.acc: 91.7700, s0.loss_bbox: 0.1216, s1.loss_cls: 0.1470, s1.acc: 91.7901, s1.loss_bbox: 0.0846, s2.loss_cls: 0.0656, s2.acc: 92.4154, s2.loss_bbox: 0.0370, loss: 0.8793, grad_norm: 2.6599
2021-10-01 09:50:23,899 - mmdet - INFO - Epoch [2][330/738]	lr: 7.132e-05, eta: 16:09:05, time: 2.008, data_time: 0.018, memory: 27519, loss_rpn_cls: 0.0666, loss_rpn_bbox: 0.0199, s0.loss_cls: 0.3299, s0.acc: 91.5332, s0.loss_bbox: 0.1178, s1.loss_cls: 0.1513, s1.acc: 91.8628, s1.loss_bbox: 0.0868, s2.loss_cls: 0.0667, s2.acc: 92.6284, s2.loss_bbox: 0.0399, loss: 0.8788, grad_norm: 3.0252
2021-10-01 09:50:43,848 - mmdet - INFO - Epoch [2][340/738]	lr: 7.132e-05, eta: 16:08:31, time: 1.995, data_time: 0.018, memory: 27519, loss_rpn_cls: 0.0754, loss_rpn_bbox: 0.0272, s0.loss_cls: 0.3304, s0.acc: 91.6089, s0.loss_bbox: 0.1380, s1.loss_cls: 0.1528, s1.acc: 91.8115, s1.loss_bbox: 0.0949, s2.loss_cls: 0.0658, s2.acc: 92.8711, s2.loss_bbox: 0.0393, loss: 0.9238, grad_norm: 2.6677
2021-10-01 09:51:04,083 - mmdet - INFO - Epoch [2][350/738]	lr: 7.132e-05, eta: 16:08:06, time: 2.024, data_time: 0.018, memory: 27519, loss_rpn_cls: 0.0668, loss_rpn_bbox: 0.0216, s0.loss_cls: 0.3605, s0.acc: 91.2183, s0.loss_bbox: 0.1337, s1.loss_cls: 0.1680, s1.acc: 91.2536, s1.loss_bbox: 0.1025, s2.loss_cls: 0.0706, s2.acc: 92.0225, s2.loss_bbox: 0.0459, loss: 0.9696, grad_norm: 2.9749
2021-10-01 09:51:25,742 - mmdet - INFO - Epoch [2][360/738]	lr: 7.132e-05, eta: 16:08:17, time: 2.166, data_time: 0.019, memory: 27519, loss_rpn_cls: 0.0863, loss_rpn_bbox: 0.0268, s0.loss_cls: 0.3521, s0.acc: 91.1035, s0.loss_bbox: 0.1333, s1.loss_cls: 0.1624, s1.acc: 91.2848, s1.loss_bbox: 0.0962, s2.loss_cls: 0.0705, s2.acc: 92.1491, s2.loss_bbox: 0.0410, loss: 0.9688, grad_norm: 3.3295
2021-10-01 09:51:47,675 - mmdet - INFO - Epoch [2][370/738]	lr: 7.132e-05, eta: 16:08:35, time: 2.193, data_time: 0.020, memory: 27519, loss_rpn_cls: 0.0780, loss_rpn_bbox: 0.0207, s0.loss_cls: 0.3276, s0.acc: 92.0166, s0.loss_bbox: 0.1246, s1.loss_cls: 0.1457, s1.acc: 92.3940, s1.loss_bbox: 0.0858, s2.loss_cls: 0.0628, s2.acc: 93.1341, s2.loss_bbox: 0.0364, loss: 0.8817, grad_norm: 3.0831
2021-10-01 09:52:07,845 - mmdet - INFO - Epoch [2][380/738]	lr: 7.132e-05, eta: 16:08:07, time: 2.017, data_time: 0.019, memory: 27519, loss_rpn_cls: 0.0690, loss_rpn_bbox: 0.0188, s0.loss_cls: 0.2995, s0.acc: 92.2388, s0.loss_bbox: 0.1127, s1.loss_cls: 0.1370, s1.acc: 92.4878, s1.loss_bbox: 0.0812, s2.loss_cls: 0.0604, s2.acc: 93.0249, s2.loss_bbox: 0.0360, loss: 0.8145, grad_norm: 2.6377
2021-10-01 09:52:27,886 - mmdet - INFO - Epoch [2][390/738]	lr: 7.132e-05, eta: 16:07:37, time: 2.004, data_time: 0.018, memory: 27519, loss_rpn_cls: 0.0775, loss_rpn_bbox: 0.0204, s0.loss_cls: 0.2938, s0.acc: 92.7710, s0.loss_bbox: 0.1077, s1.loss_cls: 0.1291, s1.acc: 93.2807, s1.loss_bbox: 0.0747, s2.loss_cls: 0.0536, s2.acc: 93.7642, s2.loss_bbox: 0.0315, loss: 0.7884, grad_norm: 2.5609
2021-10-01 09:52:47,791 - mmdet - INFO - Epoch [2][400/738]	lr: 7.132e-05, eta: 16:07:03, time: 1.990, data_time: 0.017, memory: 27519, loss_rpn_cls: 0.0849, loss_rpn_bbox: 0.0285, s0.loss_cls: 0.3016, s0.acc: 92.3682, s0.loss_bbox: 0.1160, s1.loss_cls: 0.1299, s1.acc: 92.7975, s1.loss_bbox: 0.0715, s2.loss_cls: 0.0572, s2.acc: 93.3793, s2.loss_bbox: 0.0317, loss: 0.8213, grad_norm: 2.4938
